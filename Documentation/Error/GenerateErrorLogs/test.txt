

5001 ***Failed to finish FischerANM.tex: Command \item invalid in math mode.


5002 ***Failed to finish hMC-final.tex: [Line: 0, Offset 288] Malformed argument. First and last elements must match a valid argument format. In this case, TexSoup could not find matching punctuation for: {.
Just finished parsing: ['{', '\\}', BraceGroup('set'), '1#1', BraceGroup('\\{', '\\,', ' ', '#1 ', '\\,', '\\}'), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('zz')), BraceGroup(TexCmd('mathbb'), ' Z')]), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('qq')), BraceGroup(TexCmd('mathbb'), ' Q')]), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('cc')), BraceGroup(TexCmd('mathbb'), ' C')]), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('rr')), BraceGroup(TexCmd('mathbb'), ' R')]), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('nn')), BraceGroup(TexCmd('mathbb'), ' N')]), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('cft')), BraceGroup(TexCmd('mathsf', [BraceGroup(TexCmd('Omega'), '_', BraceGroup('CFT'))]))]), '\n', TexCmd('newcommand', [BraceGroup(TexCmd('sign')), BraceGroup(TexCmd('mathrm', [BraceGroup('sign')]))]), '\n', '\n', TexCmd('sloppy'), '\n', '\n', TexCmd('textwidth'), '=15cm ', TexCmd('oddsidemargin'), '=15pt ', TexCmd('topmargin'), '=-2.5cm\n', TexCmd('textheight'), '=25cm hyphenmin=2 ', TexCmd('hyphenpenalty'), '=10\n\n', TexCmd('title', [BraceGroup(BraceGroup(TexCmd('bf'), ' ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-structure in string theory and  the Yang-Mills equation'))]), '\n', TexCmd('date', [BraceGroup()]), '\n', TexCmd('author', [BraceGroup(BraceGroup(TexCmd('bf'), ' Dmitry Grigoryev'), TexCmd('footnote', [BraceGroup('Steklov Mathematical Institute, Moscow, Russia. e-mail dmitriy57@gmail.com')]), '\\;', ' and\n\t  ', BraceGroup(TexCmd('bf'), ' Pavel Khromov'), TexCmd('footnote', [BraceGroup('Steklov Mathematical Institute, Moscow, Russia. e-mail pasha.khromov@gmail.com')]))]), '\n', TexNamedEnv('document', ['\n', TexCmd('maketitle'), '\n', TexNamedEnv('abstract', ['\nWe consider local operators of CFT inserted at the boundary of the worldsheet\nand an infinite set of maps that act on a space of the local operators.\nThese maps have natural CFT interpretation and form ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra.\nIn terms of these operators we define the homotopical Maurer-Cartan equation,\nfind its symmetries and explore its properties.\nFurther we recover the Yang-Mills equation from the homotopical Maurer-Cartan equation,\nidentify the first ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction to it\nand propose method for calculation all corrections.\n'], []), '\n', '\n', TexCmd('section', [BraceGroup('Introduction')]), '\nString theory on a nontrivial background is described in terms of essentially nonlinear sigma-models.\nFor a string to consistently propagate in the background\nthe corresponding sigma-model must be conformal invariant.\nCondition of conformal invariance turns out to be an equations of motion to a fields on the target space of the theory.\nThus there is a well-known statement ', TexCmd('cite', [BraceGroup('FT-1,Polyakov')]), ':\nequation of motion for fields on a target space of a sigma-model\nis a beta function vanishing conditions for the corresponding\ntwo dimensional sigma-model.\nIn the 80th using sigma model approach\nclassical equations of motion were reproduced and\n', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-corrections the equations were calculated ', TexCmd('cite', [BraceGroup('FT-2')]), '-', TexCmd('cite', [BraceGroup('Tseytlin')]), ".\n\nIn this paper we check the Losev's conjecture.\nIt says that particular representations of the homotopical Maurer-Cartan (hMC) equation\nreproduce classical equations of motion (Yang-Mills or Einstein, for example) together with the string corrections.\nBy the hMC equation we mean a generalization of common Maurer-Cartan equation to ", TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebras.\nThese algebras were firstly introduced by Stasheff in ', TexCmd('cite', [BraceGroup('Stasheff-1')]), '.\nReview on issues concerning ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-structure may be found in ', TexCmd('cite', [BraceGroup('A-inf')]), ' and references therein.\nHigher structures find applications in closed string field theory ', TexCmd('cite', [BraceGroup('Zwiebach')]), ',\ntopological theories ', TexCmd('cite', [BraceGroup('Kontsevich,Tomasiello')]), '\nand in study of gauge theories and gravity via the hMC equation\nthat was suggested in ', TexCmd('cite', [BraceGroup('1-formalism')]), ' and developed in ', TexCmd('cite', [BraceGroup('KS-1,KS-2,Zeitlin')]), '.\n\nTo check the conjecture we consider\nlocal operators inserted at the boundary of the worldsheet\nand a set of maps that acts on the space of the local operators.\nThe first map is the BRST differential,\nthe second is a binary map\nthat is just an operator product expansion\n(depending on the splitting between the operators).\nIt turns out that these two maps may be completed with the\ninfinite set of maps, also depending on a single parameter, such that they form an ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra,\nthus depending on the parameter too.\n\nIn this setup using a single proposal we\nreproduce the Yang-Mills equation from the hMC equation\nand identify the first ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction that is linear in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '.\nThis approach of course can be applied in a similar way to a calculation of ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-corrections of degree more that one,\nbut in this paper we have restricted ourselves to a discussion of the main idea and the simplest example.\n\nThe paper has the following structure:\nin section~', TexCmd('ref', [BraceGroup('section:hMC')]), ' definition of maps that form ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra is given.\nThen we study properties of the hMC equation written in terms of this maps.\nIn section~', TexCmd('ref', [BraceGroup('section:YM')]), ' using a single proposal we reproduce the Yang-Mills equation and calculate the first ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction to it from the hMC equation.\nImportant but quite technical issues may be found in the Appendix.\nSome speculations concerning suggested approach are collected in the Conclusion.\n\n', TexCmd('section', [BraceGroup('The homotopical Maurer-Cartan equation')]), TexCmd('label', [BraceGroup('section:hMC')]), '\nTo discuss the properties of the equation we first need to define\nmaps in terms of which the equation will be written.\n\nAll our discussion will be associated with the following CFT\n', TexNamedEnv('equation', ['\n  S=', TexCmd('frac', [BraceGroup('1'), BraceGroup('2', TexCmd('pi'), TexCmd('ap'))]), TexCmd('int'), '_', TexCmd('Sigma'), ' d^2z', '\\;', ' ', TexCmd('eta'), '_', BraceGroup(TexCmd('mu'), TexCmd('nu')), TexCmd('partial'), ' X^', TexCmd('mu'), TexCmd('partial'), ' X^', TexCmd('nu'), ' + ', TexCmd('int'), '_', TexCmd('Sigma'), ' d^2z', '\\;', ' b', TexCmd('bar'), TexCmd('partial'), ' c +c.c.\n'], []), '\nwhich governs a maps from the open string worldsheet ', TexMathModeEnv('$', [TexCmd('Sigma')], []), ' to the Minkowski space of dimension 26 with the standard flat metric on it.\nFor the fields of the theory we have standard OPEs.\n\n', TexCmd('subsection', [BraceGroup('The maps')]), '\nLet ', TexMathModeEnv('$', [TexCmd('varphi')], []), " be a local operator inserted at the boundary of the worldsheet.\nIn general we will be dealing with Lie algebra valued local operators, so they don't commute.\nThe open string worldsheet may be brought to the upper half plane (UHP) of the complex plane by a proper conformal mapping.\nIn this representation the local operators are inserted at the real line.\n\nLet ", TexMathModeEnv('$', [TexCmd('Omega'), '^n'], []), ' be the space of local operators with ghost number ', TexMathModeEnv('$', ['n'], []), '. Then we have the following complex:\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('diagr')]), '\n', TexNamedEnv('CD', ['\n', TexCmd('ldots'), ' @>Q>>', TexCmd('Omega'), '^0 @>Q>> ', TexCmd('Omega'), '^1 @>Q>> ', TexCmd('Omega'), '^2 @>Q>> ', TexCmd('ldots'), ' \n'], []), '\n'], []), '\nwith a differential which is the BRST operator.\n\nWe consider a space of all operators ', TexMathModeEnv('$', [TexCmd('mathcal'), ' H=', TexCmd('oplus'), '_', BraceGroup('n', TexCmd('mathbb'), ' Z', TexCmd('in')), TexCmd('Omega'), '^n'], []), ' and\nintroduce ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra of maps ', TexMathModeEnv('$', ['M_1'], []), ', ', TexMathModeEnv('$', ['M_2'], []), ',', TexCmd('dots'), ' that act on this space:\n', TexNamedEnv('equation', ['\n  M_k: ', TexCmd('mathcal'), ' H^', BraceGroup(TexCmd('otimes'), ' k'), 'arrow', TexCmd('mathcal'), ' H.\n'], []), '\nHere we follow the following route to define maps.\nFirst, we introduce geometric definition of maps ', TexMathModeEnv('$', ['M_k'], []), ' that depend on a single parameter.\nIn terms of these maps we can define the hMC equation.\nAs long as the definition of the maps ', TexMathModeEnv('$', ['M_k'], []), ' involves notion of complicated Riemann surfaces,\nthese maps are inconvenient for doing practical calculations.\nSo we map these maps to a familiar region, namely the UHP, and define ', TexMathModeEnv('$', ['m_k=f', TexCmd('circ'), ' M_k'], []), ', where ', TexMathModeEnv('$', ['f'], []), ' is a proper conformal mapping to the UHP,\nwhich is different for different maps ', TexMathModeEnv('$', ['M_k'], []), ".\nNext we provide an evidence that in some cases -- and the calculation we do to reproduce the Yang-Mills belongs to this case --\nwe even don't need to know the exact mapping,\nbut all we need to know is a little piece of information about the mapping (that lead to appearance of splittings)\nand some extra assumption (that lead to hierarchy).\n\n\n\nWe define the first map ", TexMathModeEnv('$', ['M_1'], []), ' in the following way:\n', TexNamedEnv('align', ['\n  M_1(', TexCmd('varphi'), ')=Q(', TexCmd('varphi'), '),\n'], []), '\nwhere a local operator ', TexMathModeEnv('$', [TexCmd('varphi')], []), ' is inserted at the point ', TexMathModeEnv('$', ['-1'], []), ' on a half disc (see fig. ', TexCmd('ref', [BraceGroup('fig:m1')]), ').\n\nThen we define\n', TexNamedEnv('align', ['\n  m_1=f', TexCmd('circ'), ' M_1,\t\n'], []), '\nwhich is an action of the BRST operator on the image of ', TexMathModeEnv('$', [TexCmd('varphi')], []), ' on the UHP.\nFor a primary local operator we can write\n', TexNamedEnv('align', ['\n  f', TexCmd('circ'), ' M_1(', TexCmd('varphi'), '(-1))=CF', TexCmd('cdot'), ' M_1(', TexCmd('varphi'), '(f(-1))),\n'], []), '\nwhere ', TexMathModeEnv('$', ['CF'], []), ' denotes a conformal factor that arises due to transformational properties of operators we are acting on.\n\n', TexNamedEnv('figure', ['\n', TexNamedEnv('center', ['\n', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m1_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(3357,3624)(-1094,-6823)\n', TexCmd('put'), '(1171,-5821)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n', TexCmd('put'), '(-1079,-4966)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '(-1)'], []))])))]))), '\n'], []), TexCmd('caption', [BraceGroup('To the definition of ', TexMathModeEnv('$', ['M_1'], []), '.')]), '\n', TexCmd('label', [BraceGroup('fig:m1')]), '\n'], []), '\n'], [BracketGroup('h!')]), '\n', '\n', '\n', TexNamedEnv('figure', ['\n  ', TexCmd('centering'), '\n  ', TexCmd('parbox', [BraceGroup('4in'), BraceGroup('\n    ', TexCmd('centering'), '\n    ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m2_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(13890,4753)(706,-4607)\n', TexCmd('put'), '(721,-241)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []))])))]))), '\n', TexCmd('put'), '(811,-3031)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []))])))]))), '\n', TexCmd('put'), '(2341,-1591)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S'], []))])))]))), '\n', TexCmd('put'), '(3871,-4471)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(7561,-1591)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n', TexCmd('put'), '(10441,-1591)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_', BraceGroup('out')], []))])))]))), '\n', TexCmd('put'), '(14581,-1591)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n'], []), '    ', TexCmd('caption', [BraceGroup('To the definition of ', TexMathModeEnv('$', ['M_2'], []), '. Left correlator is calculated on a surface glued from three unit half-discs with\n      local operator insertions and a strip of width ', TexMathModeEnv('$', ['2'], []), ' and length ', TexMathModeEnv('$', [TexCmd('tau')], []), '. There is a conical singularity\n      at the point ', TexMathModeEnv('$', ['S'], []), ' with total angle ', TexMathModeEnv('$', ['3', TexCmd('pi')], []), ' ', '(each individual angle is ', TexMathModeEnv('$', [TexCmd('pi')], []), '). Right correlator is calculated on a unit disc.')]), '\n    ', TexCmd('label', [BraceGroup('fig:m2')]))]), '\n  ', TexCmd('parbox', [BraceGroup('1.7in'), BraceGroup('\n    ', TexCmd('centering'), '\n    ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m2-uhp_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(6324,2358)(889,-2695)\n', TexCmd('put'), '(3871,-2536)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('epsilon')], []))])))]))), '\n', TexCmd('put'), '(4951,-736)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2(y)'], []))])))]))), '\n', TexCmd('put'), '(2476,-736)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1(x)'], []))])))]))), '\n'], []), '    ', TexCmd('caption', [BraceGroup('To the definition of ', TexMathModeEnv('$', ['m_2'], []), '.')]), '\n    ', TexCmd('label', [BraceGroup('fig:m2-uhp')]))]), '\n'], [BracketGroup('ht!')]), '\n', '\nWe define the second map ', TexMathModeEnv('$', ['M_2'], []), ' in the following way:\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('m2-mapping')]), '\n  M_2(', TexCmd('varphi'), '_1(w_1),', TexCmd('varphi'), '_2(w_2))=e^', BraceGroup('-', TexCmd('tau'), ' L_0'), ' ', TexCmd('varphi'), '_1(w_1)', TexCmd('varphi'), '_2(w_2),\n'], []), '\nwhere ', TexMathModeEnv('$', ['L_0'], []), ' is a 0-th mode of stress-energy tensor of the CFT and\nthe exponent acts on all operators that stand to the right.\n\nAs long as\n', TexMathModeEnv('$', ['e^', BraceGroup('-', TexCmd('tau'), ' L_0')], []), '\nrepresents an insertion of a strip with a length ', TexMathModeEnv('$', [TexCmd('tau')], []), '\nwe may think about result of application ', TexMathModeEnv('$', [TexCmd('varphi'), '_', BraceGroup('out'), '=M_2(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2)'], []), ' of ', TexMathModeEnv('$', ['M_2'], []), ' to operators ', TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []), ' and ', TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []), '\nas a correlator calculated on a Riemann surface glued from two half-discs and the ', TexMathModeEnv('$', [TexCmd('tau')], []), '-strip (see fig. ', TexCmd('ref', [BraceGroup('fig:m2')]), ')\nwhere equality holds for any operator ', TexMathModeEnv('$', [TexCmd('chi')], []), '.\n\nLet us note that at ', TexMathModeEnv('$', [TexCmd('tau'), '=0'], []), ' the map ', TexMathModeEnv('$', ['M_2'], []), " coincides with the Witten's product ", TexCmd('cite', [BraceGroup('Witten-sft')]), ' of string states corresponding\nto local operators ', TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []), ' and ', TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []), '  in the open string field theory,\nwhich is non-commutative and associative.\nWe study all maps with ', TexMathModeEnv('$', [TexCmd('tau'), TexCmd('ne'), ' 0'], []), ' so ', TexMathModeEnv('$', ['M_2'], []), ' is non-commutative and non-associative.\n\nWe define\n', TexNamedEnv('align', ['\n  m_2 = f', TexCmd('circ'), ' M_2\n'], []), '\nwith ', TexMathModeEnv('$', ['f'], []), ' being a conformal mapping to the UHP.\nFor a primary local operators we can write\n', TexNamedEnv('align', [TexCmd('label', [BraceGroup('m2-uhp-mapping')]), '\n  f', TexCmd('circ'), ' M_2', TexCmd('bigl'), '(', TexCmd('varphi'), '_1(z_1),', TexCmd('varphi'), '_2(z_2)', TexCmd('bigr'), ')= CF ', TexCmd('cdot'), ' m_2', TexCmd('bigl'), '(', TexCmd('varphi'), '_1(f(z_1)),', TexCmd('varphi'), '_2(f(z_2))', TexCmd('bigr'), '),\n'], []), '\nwhere again ', TexMathModeEnv('$', ['CF'], []), " denotes a conformal factor that arises due to transformational properties of operators we are acting on.\nBut we actually aren't interested in the images of ", TexMathModeEnv('$', ['z_1'], []), ' and ', TexMathModeEnv('$', ['z_2'], []), ' under the mapping ', TexMathModeEnv('$', ['f'], []), '.\nSo let us write ', TexMathModeEnv('$', ['f(z_1)=x'], []), ' and ', TexMathModeEnv('$', ['f(z_2)=x+', TexCmd('epsilon')], []), '.\nWe call parameter ', TexMathModeEnv('$', [TexCmd('epsilon')], []), ' splitting.\nPresence of ', TexMathModeEnv('$', [TexCmd('tau')], []), '-strip in ', TexCmd('eqref', [BraceGroup('m2-mapping')]), ' results in behavior ', TexMathModeEnv('$', [TexCmd('epsilon'), TexCmd('sim'), ' e^', BraceGroup('-', TexCmd('tau')), TexCmd('to'), '0'], []), '\nof the splitting between the local operators in ', TexCmd('eqref', [BraceGroup('m2-uhp-mapping')]), ' in a limit ', TexMathModeEnv('$', [TexCmd('tau'), TexCmd('to'), TexCmd('infty')], []), ' ', '(see fig. ', TexCmd('ref', [BraceGroup('fig:m2-uhp')]), ').\nThus we can write\n', TexCmd('footnote', [BraceGroup('In general one should keep regular terms in splittings\nbecause they might cancel out divergences arising from contractions.\nBut one can convince himself that this happens at a higher (more than 3) orders in the coupling ', TexMathModeEnv('$', ['t'], []), ' ', '(see section ', TexCmd('ref', [BraceGroup('section:YM')]), '), \nso this situation is crucial only when calculating ', TexMathModeEnv('$', [TexCmd('ap')], []), '-corrections.')]), '\n', TexNamedEnv('align', ['\n  m_2^', TexCmd('epsilon'), '(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2)(x) =  CF ', TexCmd('cdot'), ' ', TexCmd('Bigl', [BracketGroup(TexCmd('varphi'), '_1(x)', TexCmd('varphi'), '_2(x+', TexCmd('epsilon'), ')', TexCmd('Bigr'))]), '_x\n'], []), '\nwith the notation ', TexMathModeEnv('$', ['[', TexCmd('mathcal'), ' O(x_1,...,x_k)', ']', '_', BraceGroup('x_1')], []), ' meaning that we expand the expression ', TexMathModeEnv('$', [TexCmd('mathcal'), ' O(x_1,...,x_k)'], []), ' at the point ', TexMathModeEnv('$', ['x_1'], []), '.\nSo applying this map to operators ', TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []), ' and ', TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []), ' we simply perform OPE of ', TexMathModeEnv('$', [TexCmd('varphi'), '_1(x)', TexCmd('varphi'), '_2(x+', TexCmd('epsilon'), ')'], []), ' at the point ', TexMathModeEnv('$', ['x'], []), '.\n\nLet us find what corresponds to a composition ', TexMathModeEnv('$', ['M_2', TexCmd('circ'), ' M_2'], []), ' on the UHP.\nTo do this we\nswitch to an equivalent definition with Riemann surfaces and\nexamine properties of ', TexMathModeEnv('$', [TexCmd('varphi'), '_', BraceGroup('out'), '=M_2(M_2(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2),', TexCmd('varphi'), '_3)'], []), '.\nThe composition can be calculated as follows:\n', TexMathModeEnv('$', [TexCmd('varphi'), '_', BraceGroup('out'), '= M_2(', TexCmd('psi'), ',', TexCmd('varphi'), '_3)'], []), ', where ', TexMathModeEnv('$', [TexCmd('psi'), '=M_2(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2)'], []), ' is a local operator.\nIn the correlator ', TexMathModeEnv('$', [TexCmd('langle'), ' M_2(', TexCmd('psi'), ',', TexCmd('varphi'), '_3),', TexCmd('chi'), TexCmd('rangle')], []), ' used for defining ', TexMathModeEnv('$', [TexCmd('varphi'), '_', BraceGroup('out')], []), ' we can replace ', TexMathModeEnv('$', [TexCmd('psi')], []), ' with\na part of a surface which gives the same correlator (see fig. ', TexCmd('ref', [BraceGroup('fig:m2-m2-glue')]), ').\nSince ', TexMathModeEnv('$', ['M_2'], []), ' is non-associative there are two ways of composing ', TexMathModeEnv('$', ['M_2', TexCmd('circ'), ' M_2'], []), ', namely ', TexMathModeEnv('$', ['M_2(M_2(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2),', TexCmd('varphi'), '_3)'], []), '\nand ', TexMathModeEnv('$', ['M_2(', TexCmd('varphi'), '_1,M_2(', TexCmd('varphi'), '_2,', TexCmd('varphi'), '_3))'], []), '. They are depicted on fig. ', TexCmd('ref', [BraceGroup('fig:m2-m2')]), '.\nFor a primary local operators we can write\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  f', TexCmd('circ'), ' M_2(M_2(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2),', TexCmd('varphi'), '_3)&= CF ', TexCmd('cdot'), '\n  m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(f', TexCmd('circ'), TexCmd('varphi'), '_1,f', TexCmd('circ'), TexCmd('varphi'), '_2),f', TexCmd('circ'), TexCmd('varphi'), '_3), \n  f', TexCmd('circ'), ' M_2(', TexCmd('varphi'), '_1,M_2(', TexCmd('varphi'), '_2,', TexCmd('varphi'), '_3))&= CF ', TexCmd('cdot'), '\n  m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(f', TexCmd('circ'), TexCmd('varphi'), '_1,m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(f', TexCmd('circ'), TexCmd('varphi'), '_2,f', TexCmd('circ'), TexCmd('varphi'), '_3)),\n'], []), '\n'], []), '\n', TexNamedEnv('figure', ['\n  ', TexCmd('centering'), '\n  ', TexCmd('parbox', [BraceGroup('2.8in'), BraceGroup('\n    ', TexCmd('centering'), '\n    ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m2-m2-glue_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(9840,6373)(616,-6047)\n', TexCmd('put'), '(10441,-3391)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n', TexCmd('put'), '(7471,-5911)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(5041,-4651)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3'], []))])))]))), '\n', TexCmd('put'), '(721,-2221)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []))])))]))), '\n', TexCmd('put'), '(3151,-3481)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(631,-61)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []))])))]))), '\n'], []), '    ', TexCmd('caption', [BraceGroup('Gluing together two surfaces to evaluate one way of a composition ', TexMathModeEnv('$', ['M_2', TexCmd('circ'), ' M_2'], []), '.')]), '\n    ', TexCmd('label', [BraceGroup('fig:m2-m2-glue')]))]), '\n  ', TexCmd('parbox', [BraceGroup('2.8in'), BraceGroup('\n    ', TexCmd('centering'), '\n    ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m2-m2_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(10249,6568)(1201,-7370)\n', TexCmd('put'), '(6571,-5101)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(7471,-3121)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []))])))]))), '\n', TexCmd('put'), '(9451,-7171)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3'], []))])))]))), '\n', TexCmd('put'), '(8731,-3211)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_3'], []))])))]))), '\n', TexCmd('put'), '(11341,-1141)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n', TexCmd('put'), '(10801,-3841)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(7651,-7216)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []))])))]))), '\n', TexCmd('put'), '(9136,-3751)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_4'], []))])))]))), '\n', TexCmd('put'), '(8416,-6091)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_1'], []))])))]))), '\n', TexCmd('put'), '(8416,-4291)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_2'], []))])))]))), '\n', TexCmd('put'), '(1261,-4966)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []))])))]))), '\n', TexCmd('put'), '(4411,-3346)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_3'], []))])))]))), '\n', TexCmd('put'), '(6886,-1546)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n', TexCmd('put'), '(6346,-3976)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(1216,-3256)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []))])))]))), '\n', TexCmd('put'), '(4996,-4966)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3'], []))])))]))), '\n', TexCmd('put'), '(3061,-5911)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(2296,-4156)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_1'], []))])))]))), '\n', TexCmd('put'), '(3781,-4156)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_2'], []))])))]))), '\n', TexCmd('put'), '(4771,-3886)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['S_4'], []))])))]))), '\n'], []), '    ', TexCmd('caption', [BraceGroup('Two ways of composing ', TexMathModeEnv('$', ['M_2', TexCmd('circ'), ' M_2'], []), '. Each angle at points ', TexMathModeEnv('$', ['S_1'], []), ' and ', TexMathModeEnv('$', ['S_2'], []), ' is ', TexMathModeEnv('$', [TexCmd('pi')], []), ' ', '(total angle is ', TexMathModeEnv('$', ['3', TexCmd('pi')], []), '). Each angle at points ', TexMathModeEnv('$', ['S_3'], []), ' and ', TexMathModeEnv('$', ['S_4'], []), ' is ', TexMathModeEnv('$', [TexCmd('pi'), '/2'], []), '.')]), '\n    ', TexCmd('label', [BraceGroup('fig:m2-m2')]))]), '\n'], [BracketGroup('!h')]), '\nwhere we manifestly indicate the splittings ', TexMathModeEnv('$', [TexCmd('epsilon'), '_1'], []), ' and ', TexMathModeEnv('$', [TexCmd('epsilon'), '_2'], []), ' between the images of insertion points of the operators\nthat in the limit ', TexMathModeEnv('$', [TexCmd('tau'), TexCmd('to'), TexCmd('infty')], []), ' behave as ', TexMathModeEnv('$', [TexCmd('epsilon'), '_1', TexCmd('sim'), ' e^', BraceGroup('-2', TexCmd('tau'), '+o(', TexCmd('tau'), ')')], []), ' and ', TexMathModeEnv('$', [TexCmd('epsilon'), '_2', TexCmd('sim'), ' e^', BraceGroup('-', TexCmd('tau'), '+o(', TexCmd('tau'), ')')], []), '.\nThus the maps ', TexMathModeEnv('$', ['M_2'], []), ' being identical before the conformal mapping\nseem to become different maps ', TexMathModeEnv('$', ['m_2'], []), ' on the UHP gaining what we will call a hierarchy of the splittings:\nthe "inner" ', TexMathModeEnv('$', ['m_2'], []), ' has ', TexMathModeEnv('$', [TexCmd('epsilon'), '_1'], []), ' as a splitting between their arguments, while the "outer" ', TexMathModeEnv('$', ['m_2'], []), ' has splitting ', TexMathModeEnv('$', [TexCmd('epsilon'), '_2'], []), ' ', '(see fig. ', TexCmd('ref', [BraceGroup('fig:m2-m2-uhp')]), ").\nOf course, it doesn't mean that we have different maps on the UHP (they are the same, although are distorted by the conformal mapping),\nbut it implies that while doing calculation on the UHP we have to be careful when encounter a composition of the maps,\nbecause composition results in the hierarchy on the~UHP.\n\n", TexNamedEnv('figure', ['\n', TexNamedEnv('center', ['\n  ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m2-m2-uhp_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(16946,2930)(-11,-2280)\n', TexCmd('put'), '(12818,-2139)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('epsilon'), '_2'], []))])))]))), '\n', TexCmd('put'), '(3749,-2051)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('epsilon'), '_2'], []))])))]))), '\n', TexCmd('put'), '(2476,299)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2(y)'], []))])))]))), '\n', TexCmd('put'), '(9540,254)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1(x)'], []))])))]))), '\n', TexCmd('put'), '(13752,290)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2(y)'], []))])))]))), '\n', TexCmd('put'), '(15985,290)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3(z)'], []))])))]))), '\n', TexCmd('put'), '(14941,-1231)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('epsilon'), '_1'], []))])))]))), '\n', TexCmd('put'), '(6571,299)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3(z)'], []))])))]))), '\n', TexCmd('put'), '(531,299)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1(x)'], []))])))]))), '\n', TexCmd('put'), '(1531,-1141)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('7'), BraceGroup('8.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('epsilon'), '_1'], []))])))]))), '\n'], []), '  ', TexCmd('caption', [BraceGroup('Compositions ', TexMathModeEnv('$', ['m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2),', TexCmd('varphi'), '_3)'], []), ' and ', TexMathModeEnv('$', ['m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(', TexCmd('varphi'), '_1,m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(', TexCmd('varphi'), '_2,', TexCmd('varphi'), '_3))'], []), ' correspondingly.')]), '\n  ', TexCmd('label', [BraceGroup('fig:m2-m2-uhp')]), '\n'], []), '\n'], [BracketGroup('h!')]), '\n', '\n', '\nDefine ', TexMathModeEnv('$', ['M_3'], []), ' this way\n', TexCmd('footnote', [BraceGroup('From here on by ', TexMathModeEnv('$', ['\\{', 'a,b', '\\}'], []), ' we mean supercommutator.')]), '\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('m3-mapping')]), '\n', TexNamedEnv('split', ['\n    ', '&M_3(', TexCmd('varphi'), '_1(w_1),', TexCmd('varphi'), '_2(w_2),', TexCmd('varphi'), '_3(w_3))= \n    &-t^', BraceGroup('a_1'), 't^', BraceGroup('a_2'), 't^', BraceGroup('a_3'), ' ', '(-1)^', BraceGroup('|', TexCmd('varphi'), '_1|'), TexCmd('Bigl', [BracketGroup('\n    ', TexCmd('int'), '_0^', TexCmd('tau'), ' ds', '\\;', ' e^', BraceGroup('-', TexCmd('tau'), ' L_0'), ' ', TexCmd('varphi'), '_1^', BraceGroup('a_1'), '(w_1) e^', BraceGroup('(s-', TexCmd('tau'), ')L_0'), ' ', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_2^', BraceGroup('a_2'), '(w_2)', '\\}', TexCmd('varphi'), '_3^', BraceGroup('a_3'), '(w_3)\n    &-', TexCmd('int'), '_0^', TexCmd('tau'), ' ds', '\\;', ' e^', BraceGroup('-', TexCmd('tau'), ' L_0'), ' ', TexCmd('varphi'), '_3^', BraceGroup('a_3'), '(w_3) e^', BraceGroup('(s-', TexCmd('tau'), ')L_0'), ' ', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_2^', BraceGroup('a_2'), '(w_2)', '\\}', TexCmd('varphi'), '_1^', BraceGroup('a_1'), '(w_1)\n    ', TexCmd('Bigr'))]), ',\n'], []), '\n'], []), '\nwhere ', TexMathModeEnv('$', ['|', TexCmd('varphi'), '_1|'], []), ' is ghost number of ', TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []), '\nand ', TexMathModeEnv('$', ['t^a'], []), ' is a generator of corresponding Lie algebra so\na local operator can be written as ', TexMathModeEnv('$', [TexCmd('varphi'), '=', TexCmd('varphi'), '^at^a'], []), ' with ', TexMathModeEnv('$', [TexCmd('varphi'), '^a'], []), ' being a scalar.\nExponents act on all operators that stand to the right.\nFig. ', TexCmd('ref', [BraceGroup('fig:m3')]), ' is a geometrical (visual) representation of the definition.\nThus we can see that ', TexMathModeEnv('$', ['M_3'], []), ' is a homotopy between two ways of composing ', TexMathModeEnv('$', ['M_2', TexCmd('circ'), ' M_2'], []), '.\nThis is a strict statement because, as we will see, ', TexMathModeEnv('$', ['M_3'], []), ' satisfy the third relation ', TexCmd('eqref', [BraceGroup('m2-m2')]), ' of ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra.\n\nIn general via mapping ', TexMathModeEnv('$', ['M_3'], []), ' to the UHP we get something complicated because\ndoing conformal mapping we have to take into account transformation properties of the operators\nwe are acting on while the fields may have non-zero conformal dimension and even be non-primary.\nBut for a primary local operators of conformal dimension 0 we can write a simple expression\n', TexNamedEnv('align', [TexCmd('label', [BraceGroup('m3-uhp-mapping')]), '\n  m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(', TexCmd('varphi'), '_1,', TexCmd('varphi'), '_2,', TexCmd('varphi'), '_3)(x)\n  &= (-1)^', BraceGroup('|', TexCmd('varphi'), '_1|'), '[', TexCmd('varphi'), '_1(x)', TexCmd('int'), '_', BraceGroup('x+', TexCmd('epsilon'), '_1'), '^', BraceGroup('x+', TexCmd('epsilon'), '_2-', TexCmd('epsilon'), '_1'), ' dy', '\\;', ' ', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_2(y)', '\\}', '\\;', TexCmd('varphi'), '_3(x+', TexCmd('epsilon'), '_2)', ']', '_x\n'], []), '\nwith the splittings\n', TexNamedEnv('equation', ['\n  ', TexCmd('epsilon'), '_1', TexCmd('sim'), ' e^', BraceGroup('-2', TexCmd('tau'), '+o(', TexCmd('tau'), ')'), ',', TexCmd('quad'), ' ', TexCmd('epsilon'), '_2', TexCmd('sim'), ' e^', BraceGroup('-', TexCmd('tau'), '+o(', TexCmd('tau'), ')'), TexCmd('quad'), ' ', TexCmd('mbox', [BraceGroup('when ')]), ' ', TexCmd('tau'), TexCmd('to'), TexCmd('infty'), '.\n'], []), "\nAs long as we don't have an explicit conformal mapping we don't know dependence of the splittings on ", TexMathModeEnv('$', [TexCmd('tau')], []), ' exactly.\nIn actual calculations we need more precise relations between the splittings.\nThus we propose\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('hierarchy-m3-mapping')]), '\n  ', TexCmd('epsilon'), '_1/', TexCmd('epsilon'), '_2', TexCmd('to'), '0,', TexCmd('quad'), ' ', TexCmd('epsilon'), '_2^2/', TexCmd('epsilon'), '_1', TexCmd('to'), '0 ', TexCmd('quad'), ' ', TexCmd('mbox', [BraceGroup('when ')]), '  ', TexCmd('tau'), TexCmd('to'), TexCmd('infty'), '.\n'], []), "\nSo it is actually a prescription based on the mapping.\n\nWe see that in the case of primary local operators with conformal dimension 0\nthe mapping to the UHP results only in the hierarchy of the splittings and we don't need to know the mapping exactly.\n\nThe first three maps ", TexMathModeEnv('$', ['M_k'], []), ' satisfy first three quadratic relations of ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra:\n', TexNamedEnv('align', ['\n  ', '&M_1^2 = 0, \n  &M_1 M_2(A,B) = M_2(M_1(A),B)+(-1)^', BraceGroup('|A|'), 'M_2(A,M_1(B)),  ', TexCmd('nonumber'), '\n  ', '&M_2(A,M_2(B,C))-M_2(M_2(A,B),C) = ', TexCmd('label', [BraceGroup('m2-m2')]), '  ', TexCmd('nonumber'), '\n    ', '&=M_1 M_3(A,B,C) \n    &', '\\;', '\\;', '\\;', '+M_3(M_1(A),B,C)+(-1)^', BraceGroup('|A|'), 'M_3(A,M_1(B),C)+(-1)^', BraceGroup('|A|+|B|'), 'M_3(A,B,M_1(C)).\n'], []), '\nIndeed, this relations may be trivially checked using definitions ', TexCmd('eqref', [BraceGroup('m2-mapping')]), ' and ', TexCmd('eqref', [BraceGroup('m3-mapping')]), '.\n\nConformal mapping to the UHP does not spoil this property,\nbut again one should be careful when doing compositions.\nThus writing similar conditions on the UHP\nwe manifestly indicate the splittings:\n', TexNamedEnv('align', ['\n  ', '&m_1^2 = 0, \n  &m_1 m_2^', TexCmd('epsilon'), '(A,B) = m_2^', TexCmd('epsilon'), '(m_1(A),B)+(-1)^', BraceGroup('|A|'), 'm_2^', TexCmd('epsilon'), '(A,m_1(B)),  ', TexCmd('nonumber'), '\n  ', '&m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(A,m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(B,C))-m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(A,B),C) = ', TexCmd('label', [BraceGroup('m2-m2-UHP')]), '  ', TexCmd('nonumber'), '\n    ', '&=m_1 m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,C) \n    &', '\\;', '\\;', '\\;', '+m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(m_1(A),B,C)+(-1)^', BraceGroup('|A|'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,m_1(B),C)+(-1)^', BraceGroup('|A|+|B|'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,m_1(C)).\n'], []), '\nSee Appendix ', TexCmd('ref', [BraceGroup('section:quad-rel')]), ' for manifest verification of this relations.\n\nWe know that the map ', TexMathModeEnv('$', ['M_3'], []), ' is a homotopy between two possible compositions of ', TexMathModeEnv('$', ['M_2', TexCmd('circ'), ' M_2'], []), '.\nThe map ', TexMathModeEnv('$', ['M_3'], []), ' is an integral over an edge of polytope called associahedra ', TexCmd('cite', [BraceGroup('Stasheff-1, A-inf')]), '.\nFollowing this route we can define each higher ', TexMathModeEnv('$', ['M_k'], []), '\nas an integral over corresponding ', TexMathModeEnv('$', ['(k-2)'], []), '-dimensional face of the associahedra.\nHaving in mind this homotopical definition we propose\nthat the rest of conditions of ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra are satisfied.\n\n', TexNamedEnv('figure', ['\n', TexNamedEnv('center', ['\n  ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('m3_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(15154,6523)(-1454,-6515)\n', TexCmd('put'), '(13681,-4156)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('17'), BraceGroup('20.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('Bigr'), ')'], []))])))]))), '\n', TexCmd('put'), '(7516,-4336)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('17'), BraceGroup('20.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['-'], []))])))]))), '\n', TexCmd('put'), '(5086,-4966)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3'], []))])))]))), '\n', TexCmd('put'), '(1981,-4426)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' b'], []))])))]))), '\n', TexCmd('put'), '(9856,-6316)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []))])))]))), '\n', TexCmd('put'), '(8911,-4246)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['s'], []))])))]))), '\n', TexCmd('put'), '(13546,-331)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n', TexCmd('put'), '(11566,-6361)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_3'], []))])))]))), '\n', TexCmd('put'), '(10666,-5731)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' b'], []))])))]))), '\n', TexCmd('put'), '(6796,-1546)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('chi')], []))])))]))), '\n', TexCmd('put'), '(1216,-3166)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []))])))]))), '\n', TexCmd('put'), '(1306,-5101)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_2'], []))])))]))), '\n', TexCmd('put'), '(9631,-2131)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('varphi'), '_1'], []))])))]))), '\n', TexCmd('put'), '(13096,-2941)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(3151,-5866)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['s'], []))])))]))), '\n', TexCmd('put'), '(6391,-4021)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('tau')], []))])))]))), '\n', TexCmd('put'), '(-1439,-4291)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('17'), BraceGroup('20.4'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), TexCmd('limits'), '_0^', TexCmd('tau'), ' ds', TexCmd('Bigl'), '('], []))])))]))), '\n'], []), '  ', TexCmd('caption', [BraceGroup('To the definition of ', TexMathModeEnv('$', ['m_3'], []), '.')]), '\n  ', TexCmd('label', [BraceGroup('fig:m3')]), '\n'], []), '\n'], [BracketGroup('ht!')]), '\n', '\nWe still have ', TexMathModeEnv('$', ['m_k=f', TexCmd('circ'), ' M_k'], []), ', but let us work out this definition on the UHP.\nIn order to define ', TexMathModeEnv('$', ['m_k'], []), ' we take all ways of composing ', TexMathModeEnv('$', ['k-1'], []), ' instances of ', TexMathModeEnv('$', ['m_2'], []), ' into a map ', TexMathModeEnv('$', [TexCmd('mathcal'), ' H^', BraceGroup(TexCmd('otimes'), ' k'), TexCmd('to'), TexCmd('mathcal'), ' H'], []), '.\nEach composition is an OPE of ', TexMathModeEnv('$', ['k'], []), ' operators inserted at the real line.\nInsertion points of the operators are governed by hierarchy of splittings ', TexMathModeEnv('$', [TexCmd('epsilon'), '_1,...,', TexCmd('epsilon'), '_', BraceGroup('k-1')], []), ' and structure of concrete composition.\nThe coordinates of insertion points define a point in ', TexMathModeEnv('$', [TexCmd('mathbb'), ' R^k'], []), '.\nSo for each way of composing ', TexMathModeEnv('$', ['k-1'], []), ' instances of ', TexMathModeEnv('$', ['m_2'], []), ' we have a point in ', TexMathModeEnv('$', [TexCmd('mathbb'), ' R^k'], []), '.\nThere is ', TexMathModeEnv('$', ['(k-2)'], []), '-dimensional face ', TexMathModeEnv('$', ['D_k'], []), ' of associahedra with these points being vertices.\nDefine map ', TexMathModeEnv('$', ['m_k'], []), '\non a primary local operators of conformal dimension 0\nas the following integral\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('mk-uhp-mapping')]), '\n', TexNamedEnv('split', ['\n  ', '&m_k^', BraceGroup(TexCmd('epsilon'), '_1,...,', TexCmd('epsilon'), '_', BraceGroup('k-1')), '(', TexCmd('varphi'), '_1,...,', TexCmd('varphi'), '_k)(x_1)=\n  &=(-1)^', BraceGroup('(k-2)|', TexCmd('varphi'), '_1|'), TexCmd('ldots'), '(-1)^', BraceGroup('|', TexCmd('varphi'), '_', BraceGroup('k-2'), '|'), '\n  ', TexCmd('Bigl', [BracketGroup(TexCmd('varphi'), '_1(x_1)', TexCmd('int'), '_', BraceGroup('D_k'), 'dx_2 ... dx_', BraceGroup('k-1'), '\\;', ' ', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_2(x_2)', '\\}', ' ...\n  ', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_', BraceGroup('k-1'), '(x_', BraceGroup('k-1'), ')', '\\}', ' ', '\\;', ' ', TexCmd('varphi'), '_k(x_k)', TexCmd('Bigr'))]), '_', BraceGroup('x_1'), '\n'], []), '\n'], []), '\nFrom the definition it follows that the boundary of ', TexMathModeEnv('$', ['D_k'], []), ' is union of ', TexMathModeEnv('$', ['(k-3)'], []), '-dimensional faces,\neach of them being integration domain for an instance of ', TexMathModeEnv('$', ['m_', BraceGroup('k-1')], []), '.\nUsing decent relations we can obtain quadratic relations of ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-structure from the structure of associahedra.\nSchematic derivation is presented below (we suppress all signs and splittings for readability):\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', '&Q m_k(', TexCmd('varphi'), '_1,...,', TexCmd('varphi'), '_k)-m_k(Q', TexCmd('varphi'), '_1,...,', TexCmd('varphi'), '_k)-...-m_k(', TexCmd('varphi'), '_1,...,Q', TexCmd('varphi'), '_k)\n  &=', TexCmd('int'), '_', BraceGroup('D_k'), ' ', TexCmd('varphi'), '_1(x_1)', '[', 'L_0,', TexCmd('varphi'), '_2(x_2)', ']', ' ...', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_', BraceGroup('k-1'), '(x_', BraceGroup('k-1'), ')', '\\}', ' ', '\\;', ' ', TexCmd('varphi'), '_k(x_k) +...+\n  &', TexCmd('quad'), ' ', TexCmd('int'), '_', BraceGroup('D_k'), ' ', TexCmd('varphi'), '_1(x_1)', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_2(x_2)', '\\}', ' ...', '[', 'L_0,', TexCmd('varphi'), '_', BraceGroup('k-1'), '(x_', BraceGroup('k-1'), ')', ']', ' ', '\\;', ' ', TexCmd('varphi'), '_k(x_k)\n  &=', TexCmd('int'), '_', BraceGroup('D_k'), ' ', TexCmd('varphi'), '_1(x_1)', TexCmd('partial'), ' ', TexCmd('varphi'), '_2(x_2) ...', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_', BraceGroup('k-1'), '(x_', BraceGroup('k-1'), ')', '\\}', ' ', '\\;', ' ', TexCmd('varphi'), '_k(x_k)+...+\n  &', TexCmd('quad'), TexCmd('int'), '_', BraceGroup('D_k'), ' ', TexCmd('varphi'), '_1(x_1)', '\\{', 'b_', BraceGroup('-1'), ',', TexCmd('varphi'), '_2(x_2)', '\\}', ' ...', TexCmd('partial'), ' ', TexCmd('varphi'), '_', BraceGroup('k-1'), '(x_', BraceGroup('k-1'), ') ', '\\;', ' ', TexCmd('varphi'), '_k(x_k)\n  &=', TexCmd('sum'), '_', BraceGroup('n=1'), '^', BraceGroup('k-2'), TexCmd('bigl', [BracketGroup(TexCmd('pm'), ' m_', BraceGroup('n+1'), '(', TexCmd('varphi'), '_1,...,', TexCmd('varphi'), '_n,m_', BraceGroup('k-n'), '(', TexCmd('varphi'), '_', BraceGroup('n+1'), ',...,', TexCmd('varphi'), '_k))', TexCmd('pm'), '...', TexCmd('pm'), ' m_', BraceGroup('n+1'), '(m_', BraceGroup('k-n'), '(', TexCmd('varphi'), '_1,...,', TexCmd('varphi'), '_', BraceGroup('k-n'), '),', TexCmd('varphi'), '_', BraceGroup('k-n+1'), ',...,', TexCmd('varphi'), '_k))', TexCmd('bigr'))]), '\n'], []), '\n'], []), '\nExample of ', TexMathModeEnv('$', ['m_k'], []), ' for ', TexMathModeEnv('$', ['k=3'], []), ' was given above. \nLater we will present example for ', TexMathModeEnv('$', ['k=4'], []), ' where ', TexMathModeEnv('$', ['D_4'], []), ' is a region defined by relations ', TexCmd('eqref', [BraceGroup('D4')]), '\nwith the hierarchy of splittings ', TexCmd('eqref', [BraceGroup('hierarchy-m4')]), '.\n\nIn conclusion of the section let us recall that we have introduced the maps ', TexMathModeEnv('$', ['M_k'], []), ' that depend\non a parameter ', TexMathModeEnv('$', [TexCmd('tau')], []), '. These maps form ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra thus depending on the parameter too.\nLater in order to reproduce the Yang-Mills equation we will take a limit ', TexMathModeEnv('$', [TexCmd('tau'), TexCmd('to'), TexCmd('infty')], []), '.\nUnder conformal mapping we have obtained the maps ', TexMathModeEnv('$', ['m_k'], []), ' that depends on a set of a parameters (which depend on ', TexMathModeEnv('$', [TexCmd('tau')], []), ') -- point splittings.\nIn the limit ', TexMathModeEnv('$', [TexCmd('tau'), TexCmd('to'), TexCmd('infty')], []), ' the splittings go to zero with their own pace\nthat is governed by what we called the hierarchy of the splittings.\nThe hierarchy appears via the conformal mapping of the maps ', TexMathModeEnv('$', ['M_k'], []), ' to the UHP.\nWe repeat our note that in actual calculations we use proposed hierarchy of splittings based on\nactual hierarchy, but it is not proved that these hierarchies are equal.\n\n', TexCmd('subsection', [BraceGroup('The equation')]), '\nHaving defined maps let us consider the homotopical Maurer-Cartan equation.\nBy the hMC equation we mean a generalization of common Maurer-Cartan equation to ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebras.\nIn this section we study properties of the hMC equation written in terms of ', TexMathModeEnv('$', ['M_k'], []), ',\nbut all this properties are also true for the equation written in terms of ', TexMathModeEnv('$', ['m_k'], []), ',\nbecause they are related by the conformal mapping.\nThe equation associated with the maps ', TexMathModeEnv('$', ['M_k'], []), ' is\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('hMC')]), '\nM_1(V)+M_2(V,V)-M_3(V,V,V)+...=0\n'], []), '\nwith ', TexMathModeEnv('$', ['V'], []), ' being a ghost number 1 local operator.\n\nMap ', TexMathModeEnv('$', ['M_k'], []), ' has ghost number ', TexMathModeEnv('$', ['2-k'], []), ', so by applying it to ', TexMathModeEnv('$', ['V'], []), ' we get\na local operator ', TexMathModeEnv('$', ['M_k(V,...,V)'], []), ' with ghost number ', TexMathModeEnv('$', ['2'], []), '.\n\nAs long as the maps ', TexMathModeEnv('$', ['M_k'], []), ' form ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra the symmetry of the equation is\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', [TexCmd('label', [BraceGroup('delta-hMC')]), '\n  ', TexCmd('delta'), ' V&=M_1(H)+M_2(V,H)-M_2(H,V)\n  &-M_3(H,V,V)+M_3(V,H,V)-M_3(V,V,H)+...,\n'], []), '\n'], []), '\nwhere parameter of the symmetry ', TexMathModeEnv('$', ['H'], []), ' is ghost number 0 local operator and\nellipsis stands for the subsequent maps where we have substituted one ', TexMathModeEnv('$', ['H'], []), ' instead of ', TexMathModeEnv('$', ['V'], []), ' in a different places in ', TexMathModeEnv('$', ['M_k'], []), ' keeping track of the sign.\n\nThus we consider a local operator from ', TexMathModeEnv('$', [TexCmd('Omega'), '^1'], []), ' as a variable.\nLater in order to obtain the Yang-Mills equation we specialize to the local operators defined by means of\na field ', TexMathModeEnv('$', ['A_', TexCmd('mu')], []), ' which we will call a parametrization.\nThe equation on this operator is in ', TexMathModeEnv('$', [TexCmd('Omega'), '^2'], []), '.\nThe parameter of symmetry of the equation is in ', TexMathModeEnv('$', [TexCmd('Omega'), '^0'], []), '.\n\nIn attempt to solve the hMC equation with a local operator ', TexMathModeEnv('$', ['V'], []), ' in a particular parametrization~', TexMathModeEnv('$', ['A_', TexCmd('mu')], []), '\none may encounter an obstruction.\nObstruction is a cohomology of the space ', TexMathModeEnv('$', [TexCmd('Omega'), '^2'], []), ' of ghost number 2 local operators.\nThus for the local operator to be a solution of the hMC equation\nthe parametrization must satisfy an equation -- an obstruction vanishing condition.\nThis equation has a symmetry that is inherited from the symmetry ', TexMathModeEnv('$', [TexCmd('delta'), ' V'], []), ' of the hMC equation.\n\nIn order to obtain the Yang-Mills equation from the hMC equation we have to reproduce structure of the Yang-Mills equation\nfrom the obstruction vanishing condition and the symmetry ', TexMathModeEnv('$', [TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu')], []), ' of the Yang-Mills equation from  the symmetry ', TexMathModeEnv('$', [TexCmd('delta'), ' V'], []), ' of the hMC equation.\nAs a result, we obtain (possibly) nonlinear dependence ', TexMathModeEnv('$', [TexCmd('mathcal'), ' A_', TexCmd('mu'), '=', TexCmd('mathcal'), ' A_', TexCmd('mu'), '(A)'], []), '\nof a gauge potential ', TexMathModeEnv('$', [TexCmd('mathcal'), ' A_', TexCmd('mu')], []), ' on the parametrization ', TexMathModeEnv('$', ['A_', TexCmd('mu')], []), ' that may lead to identification of ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction to the Yang-Mills equation.\n\nIn general all the maps ', TexMathModeEnv('$', ['M_k'], []), ' depend on the parameter ', TexMathModeEnv('$', [TexCmd('tau')], []), '.\nWe match the hMC and the Yang-Mills equations in a limit ', TexMathModeEnv('$', [TexCmd('tau'), TexCmd('to'), TexCmd('infty')], []), ".\nThus we are only left with expressions that don't depend on the parameter and with singular ones.\nBut we don't expect appearance of the parameter in the obstruction vanishing condition.\nSo we expect singular in the parameter terms to be exact.\n\nAs long as we will be doing all calculation on the UHP\nit is sensible to reformulate this procedure in terms of the splittings.\nNamely, we match the hMC and the Yang-Mills equations in a limit when all the splittings go to zero,\nalthough each with their own pace governed by a hierarchy of splittings.\nConditions ", TexCmd('eqref', [BraceGroup('hierarchy-m3-mapping')]), " provides us with the first example of relations in the hierarchy.\nThus we are only left with expressions that don't depend on the parameters and with singular ones\nwith latter expected to be exact.\n\n\nTo realize this approach let us start with examination of a structure of the Yang-Mills equation.\nThe equation can be rewritten as follows\n", TexNamedEnv('equation', [TexCmd('label', [BraceGroup('alg-YM')]), '\n  ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A)+', TexCmd('mathrm', [BraceGroup('YM')]), '^2(', TexCmd('mathcal'), ' A)+', TexCmd('mathrm', [BraceGroup('YM')]), '^3(', TexCmd('mathcal'), ' A)=0\n'], []), '\nwith ', TexMathModeEnv('$', [TexCmd('mathrm', [BraceGroup('Max')]), ',', TexCmd('mathrm', [BraceGroup('YM')]), '^2'], []), ' and ', TexMathModeEnv('$', [TexCmd('mathrm', [BraceGroup('YM')]), '^3'], []), ' being linear, quadratic and cubic in gauge potential ', TexMathModeEnv('$', [TexCmd('mathcal'), ' A_', TexCmd('mu')], []), '\nparts of the Yang-Mills equation correspondingly\n', TexNamedEnv('align', ['\n  ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), ')&=\n    ', TexCmd('Box'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '-', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), ', ', TexCmd('label', [BraceGroup('Max-part')]), ' \n  ', TexCmd('mathrm', [BraceGroup('YM')]), '^2(', TexCmd('mathcal'), ' A_', TexCmd('mu'), ')&=\n    ', TexCmd('partial'), '_', TexCmd('nu', [BracketGroup(TexCmd('mathcal'), ' A_', TexCmd('nu'), ',', TexCmd('mathcal'), ' A_', TexCmd('mu'))]), '+\n    ', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '-', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), ']', ', ', TexCmd('label', [BraceGroup('YM2-part')]), ' \n  ', TexCmd('mathrm', [BraceGroup('YM')]), '^3(', TexCmd('mathcal'), ' A_', TexCmd('mu'), ')&=', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), ',', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), ',', TexCmd('mathcal'), ' A_', TexCmd('mu'), ']', ']', '. ', TexCmd('label', [BraceGroup('YM3-part')]), '\n'], []), '\nThe symmetry of ', TexCmd('eqref', [BraceGroup('alg-YM')]), ' is\n', TexNamedEnv('equation', ['\n  ', TexCmd('delta'), TexCmd('mathcal'), '  A_', TexCmd('mu'), '=', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('varepsilon'), '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), ',', TexCmd('varepsilon'), ']', '\n'], []), '\nwith ', TexMathModeEnv('$', [TexCmd('varepsilon')], []), ' being an infinitesimal parameter of the symmetry.\nSeeking solution in a perturbation series in a coupling ', TexMathModeEnv('$', ['t'], []), '\n', TexNamedEnv('align', ['\n  ', TexCmd('mathcal'), ' A_', TexCmd('mu'), '&=t', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), '+t^2', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), '+..., \n  ', TexCmd('varepsilon'), '&=t', TexCmd('varepsilon'), '^', BraceGroup('(1)'), '+t^2', TexCmd('varepsilon'), '^', BraceGroup('(2)'), '+...\n'], []), '\nwe get the following equations\n', TexNamedEnv('align', ['\n  ', '&t^1:', '\\;', ' ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ')=0, ', TexCmd('label', [BraceGroup('YM1')]), ' \n  ', '&t^2:', '\\;', ' ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ')+', TexCmd('mathrm', [BraceGroup('YM')]), '^2(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ')=0, ', TexCmd('label', [BraceGroup('YM2')]), '  ', TexCmd('nonumber'), '\n  ', '&t^3:', '\\;', ' ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(3)'), ')+', TexCmd('mathrm', [BraceGroup('YM')]), '^3(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ')  ', TexCmd('nonumber'), '\n  ', '&', TexCmd('quad'), TexCmd('quad'), ' +2', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ']', '\n\t      +2', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ']', '\n\t      -', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ']', '\n\t      -', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ',', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ']', '\n  ', '&', TexCmd('quad'), TexCmd('quad'), ' -', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ']', '\n\t      -', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ']', '=0. ', TexCmd('label', [BraceGroup('YM3')]), '\n'], []), '\nand so on. Their symmetries are\n', TexNamedEnv('align', ['\n  ', TexCmd('delta'), TexCmd('mathcal'), '  A^', BraceGroup('(1)'), '_', TexCmd('mu'), ' ', '&= ', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('varepsilon'), '^', BraceGroup('(1)'), ', \n  ', TexCmd('delta'), TexCmd('mathcal'), '  A^', BraceGroup('(2)'), '_', TexCmd('mu'), ' ', '&= ', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('varepsilon'), '^', BraceGroup('(2)'), '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ']', ', \n  ', TexCmd('delta'), TexCmd('mathcal'), '  A^', BraceGroup('(3)'), '_', TexCmd('mu'), ' ', '&= ', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('varepsilon'), '^', BraceGroup('(3)'), '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(2)'), ']', '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ']', ' ', TexCmd('label', [BraceGroup('YM-symm-3')]), '\n'], []), '\nand so on.\n\nNext let us find a similar structures in the hMC equation and its symmetry.\nTo do this we again take an attempt to find a solution to the hMC equation ', TexCmd('eqref', [BraceGroup('hMC')]), ' as a perturbation series in the coupling ', TexMathModeEnv('$', ['t'], []), '\n', TexNamedEnv('equation', ['\n  V=tV_1+t^2V_2+...,\n'], []), '\nwhere each ', TexMathModeEnv('$', ['V_k'], []), ' is also a series in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '. This way we obtain the following equations\n', TexNamedEnv('align', ['\n  t^1: ', '\\;', '\\;', '& M_1(V_1)=0, ', TexCmd('label', [BraceGroup('hMC1')]), ' \n  t^2: ', '\\;', '\\;', '& M_1(V_2)+M_2(V_1,V_1)=0, ', TexCmd('label', [BraceGroup('hMC2')]), ' \n  t^3: ', '\\;', '\\;', '& M_1(V_3)+M_2(V_1,V_2)+M_2(V_2,V_1)-M_3(V_1,V_1,V_1)=0 ', TexCmd('label', [BraceGroup('hMC3')]), '\n'], []), '\nand so on.\nCorresponding equations on the UHP are\n', TexNamedEnv('align', ['\n  t^1: ', '\\;', '\\;', '& m_1(V_1)=0, ', TexCmd('label', [BraceGroup('hMC1-uhp')]), ' \n  t^2: ', '\\;', '\\;', '& m_1(V_2)+m_2^', TexCmd('epsilon'), '(V_1,V_1)=0, ', TexCmd('label', [BraceGroup('hMC2-uhp')]), ' \n  t^3: ', '\\;', '\\;', '& m_1(V_3)+m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(V_1,V_2)+m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(V_2,V_1)-m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(V_1,V_1,V_1)=0 ', TexCmd('label', [BraceGroup('hMC3-uhp')]), '\n'], []), '\nand so on.\nWe will be solving these particular equations in section ', TexCmd('ref', [BraceGroup('section:YM')]), '.\nAs long as the local operator becomes a series so do the parametrization ', TexMathModeEnv('$', ['A_', TexCmd('mu'), '=', TexCmd('sum'), '_', BraceGroup('k', TexCmd('ge'), '1'), 't^kA_', TexCmd('mu'), '^', BraceGroup('(k)')], []), '\nand the symmetry parameter ', TexMathModeEnv('$', ['H=', TexCmd('sum'), '_', BraceGroup('k', TexCmd('ge'), '1'), 't^kH^', BraceGroup('(k)')], []), '.\n\nLet us examine some properties that do not depend on a particular choice of parametrization.\nThe first equation is\n', TexNamedEnv('equation', ['\n  M_1(V_1)=0.\n'], []), '\nIt has a symmetry that is simply shift by an exact element\n', TexNamedEnv('equation', ['\n  ', TexCmd('delta'), ' V_1=M_1(H^', BraceGroup('(1)'), ').\n  ', TexCmd('label', [BraceGroup('dV1')]), '\n'], []), '\n', '\nThe second equation is\n', TexNamedEnv('equation', ['\n  M_1(V_2)+M_2(V_1,V_1)=0.\n'], []), '\nIt has more complicated symmetry containing apart from an exact element ', TexMathModeEnv('$', ['m_2'], []), '-commutator\n', TexNamedEnv('align', ['\n  ', TexCmd('delta'), ' V_1 &= M_1(H^', BraceGroup('(1)'), '), \n  ', TexCmd('delta'), ' V_2 &= M_1(H^', BraceGroup('(2)'), ') +M_2(V_1,H^', BraceGroup('(1)'), ')-M_2(H^', BraceGroup('(1)'), ',V_1).\n'], []), '\nSimilar reasoning could be done for a subsequent equations, but we better switch to a concrete example.\n\n\n', TexCmd('section', [BraceGroup('Emergence of the Yang-Mills equation')]), TexCmd('label', [BraceGroup('section:YM')]), '\n', '\n', '\nIn this section we present derivation of the Yang-Mills equation from the hMC equation ', TexCmd('eqref', [BraceGroup('hMC1-uhp')]), '-', TexCmd('eqref', [BraceGroup('hMC3-uhp')]), '.\nTo do this we start with the following parametrization of the local operator in the first order in the coupling~', TexMathModeEnv('$', ['t'], []), '\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('v1')]), '\n  V_1=cA_', TexCmd('mu'), '^', BraceGroup('(1)'), TexCmd('partial'), TexCmd('alpha'), "' X^", TexCmd('mu'), '-', TexCmd('frac'), '4', TexCmd('partial'), ' c', TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',\n'], []), '\nwhere ', TexMathModeEnv('$', ['A_', TexCmd('mu'), '^', BraceGroup('(1)'), '=A_', TexCmd('mu'), '^', BraceGroup('(1)'), '(X)'], []), ' is a functions on the target space.\nFor ', TexMathModeEnv('$', ['V_1'], []), ' we have\n', TexNamedEnv('align', ['\n  Q(V_1)&=', TexCmd('alpha'), "'", TexCmd('frac'), '4c', TexCmd('partial'), ' c', TexCmd('Bigl', [BracketGroup(' ', TexCmd('Box'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' -', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), TexCmd('Bigr'))]), TexCmd('partial'), ' X^', TexCmd('mu'), ',\n'], []), '\nso in this parametrization equation ', TexCmd('eqref', [BraceGroup('hMC1-uhp')]), ' takes form\n', TexNamedEnv('equation', ['\n  ', TexCmd('alpha'), "'", TexCmd('frac'), '4c', TexCmd('partial'), ' c', TexCmd('Bigl', [BracketGroup(' ', TexCmd('Box'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' -', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), TexCmd('Bigr'))]), TexCmd('partial'), ' X^', TexCmd('mu'), '=0.\n'], []), '\nWe see that ', TexMathModeEnv('$', ['V_1'], []), ' solves ', TexCmd('eqref', [BraceGroup('hMC1-uhp')]), ' when parametrization ', TexMathModeEnv('$', ['A_', TexCmd('mu'), '^', BraceGroup('(1)')], []), ' satisfy Maxwell equation.\nAs we discussed earlier ', TexCmd('eqref', [BraceGroup('dV1')]), ' this equation has a symmetry which is a shift by an exact element ', TexMathModeEnv('$', ['V_1', TexCmd('to'), ' V_1+Q(H^', BraceGroup('(1)'), ')'], []), '.\nThe form of the exact element is\n', TexNamedEnv('equation', ['\n  Q(H^', BraceGroup('(1)'), ')=c', TexCmd('partial'), '_', TexCmd('mu'), ' H^', TexCmd('alpha'), "'", BraceGroup('(1)'), TexCmd('partial'), ' X^', TexCmd('mu'), '-', TexCmd('frac'), '4', TexCmd('partial'), ' c', TexCmd('Box'), ' H^', BraceGroup('(1)'), '.\n'], []), '\nThis shift naturally generates Maxwell gauge transformation for ', TexCmd('eqref', [BraceGroup('v1')]), '\n', TexNamedEnv('equation', ['\n  ', TexCmd('delta'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), '=', TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(1)'), '.\n'], []), '\nThus the symmetry of the hMC equation at the first order in coupling ', TexMathModeEnv('$', ['t'], []), ' implies the symmetry of the Maxwell (or linear part of the Yang-Mills) equation.\n\nSo at the first order in ', TexMathModeEnv('$', ['t'], []), ' we have the following identifications of\ngauge potential ', TexMathModeEnv('$', [TexCmd('mathcal'), ' A'], []), ' and parameter of gauge transformation ', TexMathModeEnv('$', [TexCmd('varepsilon')], []), ' with\nparametrizations of local operators:\n', TexNamedEnv('align', ['\n  ', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), '&=A_', TexCmd('mu'), '^', BraceGroup('(1)'), ', \n  ', TexCmd('varepsilon'), '^', BraceGroup('(1)'), '&=H^', BraceGroup('(1)'), '\n'], []), '\ntogether with the Maxwell equation\n', TexNamedEnv('equation', ['\n  ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ')=0\n'], []), '\nand its gauge symmetry\n', TexNamedEnv('equation', ['\n  ', TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), '=', TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('varepsilon'), '^', BraceGroup('(1)'), '.\n'], []), '\nDue to a form of the parametrization, structure of the equation and the symmetry\nthere is no way for ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction to appear at this stage.\n\n\nSituation changes when we go to the second order in the coupling ', TexMathModeEnv('$', ['t'], []), '.\nIn order to find an obstruction we calculate ', TexMathModeEnv('$', ['m_2^', TexCmd('epsilon'), '(V_1,V_1)'], []), ' in ', TexCmd('eqref', [BraceGroup('hMC2-uhp')]), ' up to terms ', TexMathModeEnv('$', [TexCmd('alpha'), "'O(^3)"], []), '.\nThe obstruction may be written in the form\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('YM-corr')]), '\n', TexNamedEnv('split', ['\n  ', TexCmd('alpha'), "'", TexCmd('frac'), '4', TexCmd('Bigl', [BracketGroup(TexCmd('mathrm', [BraceGroup('Max')]), '(A_', TexCmd('mu'), '^', BraceGroup('(2)'), '-', TexCmd('frac'), TexCmd('ap'), '2A_', TexCmd('alpha'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), ')+', TexCmd('mathrm', [BraceGroup('YM')]), '^2(A_', TexCmd('mu'), '^', BraceGroup('(1)'), ') \n  +', TexCmd('ap'), '(\n    ', '[', TexCmd('partial'), '_', TexCmd('alpha'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('mu'), ' F_', BraceGroup(TexCmd('alpha'), TexCmd('beta')), '^', BraceGroup('(1)'))]), '\n    +', '[', TexCmd('mathrm', [BraceGroup('Max')]), '(A_', TexCmd('alpha'), '^', TexCmd('alpha'), "'", BraceGroup('(1)'), '),', TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), ']', '\n  ', ')\n  -', TexCmd('frac'), '2', TexCmd('Bigl', [BracketGroup('\n    2', '[', TexCmd('partial'), '_', TexCmd('alpha'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('alpha'), TexCmd('partial'), '_', TexCmd('beta'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'))]), '\n    -', '[', TexCmd('partial'), '_', TexCmd('alpha'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), TexCmd('alpha'), "',", TexCmd('partial'), '_', TexCmd('alpha'), TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), ']', '\n    -', '[', TexCmd('partial'), '_', TexCmd('alpha'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('alpha'), TexCmd('partial'), '_', TexCmd('beta'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), ']', TexCmd('Bigr'), ']', TexCmd('log'), TexCmd('epsilon'), '^2 +O(^2)', TexCmd('Bigr'), ']', TexCmd('partial'), ' X^', TexCmd('mu'), '=0.\n'], []), '\n'], []), '\nwith ', TexMathModeEnv('$', ['F_', BraceGroup(TexCmd('alpha'), TexCmd('beta')), '^', BraceGroup('(1)'), '=', TexCmd('partial'), '_', TexCmd('alpha'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), '-', TexCmd('partial'), '_', TexCmd('beta'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)')], []), ' being a prototype of a linear part of field strength.\n\nThe second line of ', TexCmd('eqref', [BraceGroup('YM-corr')]), ' coincides with ', TexMathModeEnv('$', [TexCmd('alpha'), "' ", TexCmd('partial'), '_', TexCmd('alpha', [BracketGroup(' F_', BraceGroup(TexCmd('mu'), TexCmd('beta')), '^', BraceGroup('(1)'), ',F_', BraceGroup(TexCmd('beta'), TexCmd('alpha')), '^', BraceGroup('(1)'))])], []), '\nthat is a ', TexMathModeEnv('$', [TexCmd('partial'), '^3A^2'], []), '-part of a variation of ', TexMathModeEnv('$', [TexCmd('mathrm', [BraceGroup('Tr')]), '(F^3)'], []), ' from the non-abelian generalization of Born-Infeld action\n', TexCmd('cite', [BraceGroup('Tseytlin-BI,YM-from-OSFT')]), '\nmodulo Maxwell equation on ', TexMathModeEnv('$', ['A_', TexCmd('mu'), '^', BraceGroup('(1)')], []), '.\nNamely our result differs from the variation of ', TexMathModeEnv('$', [TexCmd('mathrm', [BraceGroup('Tr')]), '(F^3)'], []), ' by ', TexMathModeEnv('$', ['[', TexCmd('partial'), '_', TexCmd('beta'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('mathrm', [BraceGroup('Max')]), '(A_', TexCmd('beta'), '^', BraceGroup('(1)'), ')', ']'], []), '.\nThus instead of the second line in ', TexCmd('eqref', [BraceGroup('YM-corr')]), ' we will write ', TexMathModeEnv('$', [TexCmd('alpha'), "' ", TexCmd('partial'), '_', TexCmd('alpha', [BracketGroup('F_', BraceGroup(TexCmd('mu'), TexCmd('beta')), '^', BraceGroup('(1)'), ',F_', BraceGroup(TexCmd('beta'), TexCmd('alpha')), '^', BraceGroup('(1)'))])], []), '.\n\nAs we can see this obstruction does depend on the splitting via ', TexMathModeEnv('$', [TexCmd('log'), TexCmd('epsilon')], []), '.\nBut structure with ', TexMathModeEnv('$', [TexCmd('log'), TexCmd('epsilon')], []), ' is similar to the ', TexMathModeEnv('$', [TexCmd('mathrm', [BraceGroup('YM')]), '^2'], []), '-part ', TexCmd('eqref', [BraceGroup('YM2-part')]), '.\nThis fact allow us to do a redefinition below that will help us to deal with ', TexMathModeEnv('$', [TexCmd('log'), TexCmd('epsilon')], []), '-terms.\n\nFor ', TexMathModeEnv('$', ['V_2'], []), ' we have the following expression\n', TexNamedEnv('align', [TexCmd('label', [BraceGroup('V2')]), '\n  V_2&=\n    cA_', TexCmd('mu'), '^', BraceGroup('(2)'), TexCmd('partial'), TexCmd('alpha'), "' X^", TexCmd('mu'), '-', TexCmd('frac'), '4', TexCmd('partial'), TexCmd('alpha'), "' c", TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('mu'), TexCmd('alpha'), "'^", BraceGroup('(2)'), '\n    +', TexCmd('frac'), '2 (', TexCmd('frac', [BraceGroup('c'), BraceGroup(TexCmd('epsilon'))]), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c'), BraceGroup('2')]), ')A_', TexCmd('mu'), '^', BraceGroup('(1)'), 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), '\n    +O(^2)\n'], []), '\nIts symmetry can be found this way. A variation of ', TexCmd('eqref', [BraceGroup('hMC2-uhp')]), ' is\n', TexNamedEnv('equation', ['\n  Q(', TexCmd('delta'), ' V_2)+m_2^', TexCmd('epsilon'), '(', TexCmd('delta'), ' V_1,V_1)+m_2^', TexCmd('epsilon'), '(V_1,', TexCmd('delta'), ' V_1)=0.\n'], []), '\nAs long as ', TexMathModeEnv('$', [TexCmd('delta'), ' V_1=QH^', BraceGroup('(1)')], []), ' and due to ', TexCmd('eqref', [BraceGroup('hMC1-uhp')]), ' we can write\n', TexNamedEnv('equation', ['\n  Q', TexCmd('Bigl'), '(', TexCmd('delta'), ' V_2-m_2^', TexCmd('epsilon'), '(V_1,H^', BraceGroup('(1)'), ')+m_2^', TexCmd('epsilon'), '(H^', BraceGroup('(1)'), ',V_1)', TexCmd('Bigr'), ')=0\n'], []), '\nso\n', TexNamedEnv('equation', ['\n  ', TexCmd('delta'), ' V_2=QH^', BraceGroup('(2)'), '+m_2^', TexCmd('epsilon'), '(V_1,H^', BraceGroup('(1)'), ')-m_2^', TexCmd('epsilon'), '(H^', BraceGroup('(1)'), ',V_1).\n'], []), '\nDoing some math we arrive to\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', TexCmd('delta'), ' V_2\n  &= c', TexCmd('Bigl', [BracketGroup(TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(2)'), '+', '[', 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',H^', BraceGroup('(1)'))]), TexCmd('Bigr'), ']', TexCmd('alpha'), "'", TexCmd('partial'), ' X^', TexCmd('mu'), '\n    -', TexCmd('frac'), '4 ', TexCmd('alpha'), "'", TexCmd('partial'), ' c', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('Bigl', [BracketGroup(TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(2)'), ' +', '[', 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',H^', BraceGroup('(1)'))]), TexCmd('Bigr'), ']', '\n  ', '&+', TexCmd('frac'), TexCmd('alpha'), "'2(", TexCmd('frac'), ' c', TexCmd('epsilon'), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c')]), '2)', '\\{', 'A_', TexCmd('alpha'), "'", TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(1)'), '\\}', '\n  +', TexCmd('alpha'), "'", TexCmd('delta'), '_', TexCmd('mathrm', [BraceGroup('Max')]), '( ', TexCmd('frac'), '2 cA_', TexCmd('alpha'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), ' ', ')', TexCmd('partial'), ' X^', TexCmd('mu'), ' \n  ', '&-', TexCmd('frac'), '2 c', '[', TexCmd('partial'), '_', TexCmd('alpha'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('alpha'), ' H^', BraceGroup('(1)'), ']', TexCmd('partial'), ' X^', TexCmd('mu'), ' ', TexCmd('log'), TexCmd('epsilon'), '^2\n    +O(^2),\n'], []), '\n'], []), '\nwhich besides a variation of ', TexCmd('eqref', [BraceGroup('V2')]), ' contains some other terms and ', TexMathModeEnv('$', [TexCmd('delta'), '_', TexCmd('mathrm', [BraceGroup('Max')]), 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), '=', TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(1)')], []), '.\n\nThe following redefinition\n', TexNamedEnv('equation', ['\n  ', TexCmd('tilde'), ' A_', TexCmd('mu'), TexCmd('alpha'), "'^", BraceGroup('(1)'), '= (1-', TexCmd('frac'), '4', TexCmd('log'), TexCmd('epsilon'), '^2', TexCmd('Box'), ')A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',\n'], []), '\nwhere ', TexMathModeEnv('$', [TexCmd('Box'), '=', TexCmd('eta'), '^', BraceGroup(TexCmd('mu'), TexCmd('nu')), TexCmd('partial'), '_', TexCmd('mu'), TexCmd('partial'), '_', TexCmd('nu')], []), " is d'Alambertian on the target space\nhelps us to deal with ", TexMathModeEnv('$', [TexCmd('log'), TexCmd('epsilon')], []), '.\nThe equation becomes\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('eq-after-redef')]), '\n', TexNamedEnv('split', [' \n  +O(', TexCmd('ap'), '^2)=0.\n'], [BracketGroup('1+', TexCmd('frac'), TexCmd('ap'), '4', TexCmd('log'), TexCmd('epsilon'), '^2 ', TexCmd('Box')), BracketGroup('\n  ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('tilde'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), '\n  -', TexCmd('frac'), TexCmd('ap'), '2', TexCmd('tilde'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('tilde'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), ')+\n  ', TexCmd('mathrm', [BraceGroup('YM')]), '^2(', TexCmd('tilde'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ')+', TexCmd('ap'), ' ', TexCmd('partial'), '_', TexCmd('alpha', [BracketGroup(TexCmd('tilde'), ' F_', BraceGroup(TexCmd('mu'), TexCmd('beta')), '^', BraceGroup('(1)'), ',', TexCmd('tilde'), ' F_', BraceGroup(TexCmd('beta'), TexCmd('alpha')), '^', BraceGroup('(1)'))]), '\n  ')]), '\n'], []), '\nAs long as ', TexMathModeEnv('$', ['1+', TexCmd('alpha'), "'", TexCmd('frac'), '4', TexCmd('log'), TexCmd('epsilon'), '^2', TexCmd('Box')], []), ' is invertible (at least perturbatively) we may omit it.\n\nDoing more contractions in ', TexMathModeEnv('$', ['m_2^', TexCmd('epsilon'), '(V_1,V_1)'], []), ' will only have the effect of the redefinition (see App. ', TexCmd('ref', [BraceGroup('section:redef')]), ').\nThe full redefinition is \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('A-redef-1')]), '\n  ', TexCmd('tilde'), ' A_', TexCmd('mu'), '^', TexCmd('alpha'), "'", BraceGroup('(1)'), '= ', TexCmd('exp'), '(-', TexCmd('frac'), '4', TexCmd('log'), TexCmd('epsilon'), '^2', TexCmd('Box'), ')A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',\n'], []), '\nwhich is similar to redefinition made in ', TexCmd('cite', [BraceGroup('YM-from-OSFT')]), ' while deriving the Yang-Mills action from the bosonic open string field theory action.\nAlso, the Yang-Mills equation was obtained form the open superstring field theory in ', TexCmd('cite', [BraceGroup('YM-from-Super')]), '.\n\nAfter this redefinition the symmetry becomes\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('symm-after-redef')]), '\n', TexNamedEnv('split', ['\n  ', TexCmd('delta'), ' V_2\n  &= c', TexCmd('Bigl', [BracketGroup(TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(2)'), '+', '[', TexCmd('tilde'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',H^', BraceGroup('(1)'))]), TexCmd('Bigr'), ']', TexCmd('alpha'), "'", TexCmd('partial'), ' X^', TexCmd('mu'), '\n    -', TexCmd('frac'), '4 ', TexCmd('alpha'), "'", TexCmd('partial'), ' c', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('Bigl', [BracketGroup(TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(2)'), ' +', '[', TexCmd('tilde'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',H^', BraceGroup('(1)'))]), TexCmd('Bigr'), ']', '\n  ', '&+', TexCmd('frac'), '2(', TexCmd('alpha'), "'", TexCmd('frac'), ' c', TexCmd('epsilon'), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c')]), '2)', '\\{', TexCmd('tilde'), ' A_', TexCmd('mu'), TexCmd('alpha'), "'^", BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('mu'), ' H^', BraceGroup('(1)'), '\\}', '\n  +', TexCmd('delta'), '_', TexCmd('mathrm', [BraceGroup('Max')]), '( ', TexCmd('frac'), '2 c', TexCmd('tilde'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('tilde'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), ' ', ')', TexCmd('partial'), ' X^', TexCmd('mu'), '\n    +O(^2).\n'], []), '\n'], []), '\n', '\nThe form of the equation ', TexCmd('eqref', [BraceGroup('eq-after-redef')]), ' and its symmetry ', TexCmd('eqref', [BraceGroup('symm-after-redef')]), ' forces us to do\nthe following identifications at the second order in the coupling ', TexMathModeEnv('$', ['t'], []), '\n', TexNamedEnv('align', [TexCmd('label', [BraceGroup('A-redef-2')]), '\n  ', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ' ', TexCmd('alpha'), "'&= ", TexCmd('tilde'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), '-', TexCmd('frac'), '2', TexCmd('tilde'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('tilde'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), ', \n  ', TexCmd('varepsilon'), '^', BraceGroup('(2)'), '&=H^', BraceGroup('(2)'), '.\n'], []), '\nIn this terms quadratic part of the Yang-Mills equation is\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('alpha-corr')]), '\n  ', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), TexCmd('alpha'), "')+", TexCmd('mathrm', [BraceGroup('YM')]), TexCmd('alpha'), "'^2(", TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ')\n  + ', TexCmd('partial'), '_', TexCmd('alpha', [BracketGroup(TexCmd('mathcal'), ' F_', BraceGroup(TexCmd('mu'), TexCmd('beta')), '^', BraceGroup('(1)'), ',', TexCmd('mathcal'), ' F_', BraceGroup(TexCmd('beta'), TexCmd('alpha')), '^', BraceGroup('(1)'))]), '+O(^2)=0,\n'], []), '\nwhere\n', TexNamedEnv('equation', ['\n  ', TexCmd('mathcal'), ' F_', BraceGroup(TexCmd('alpha'), TexCmd('beta')), '^', BraceGroup('(1)'), '=\n    ', TexCmd('partial'), '_', TexCmd('alpha'), TexCmd('mathcal'), ' A_', TexCmd('beta'), '^', BraceGroup('(1)'), '-', TexCmd('partial'), '_', TexCmd('beta'), TexCmd('mathcal'), ' A_', TexCmd('alpha'), '^', BraceGroup('(1)'), '\n'], []), '\nis a linear part of field strength\nand the gauge symmetry is\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), '&=', TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ',\n  ', TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), '&=', TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('varepsilon'), '^', BraceGroup('(2)'), '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ']', '.\n'], []), '\n'], []), '\nSo we see that using approach based on solving the hMC equation we have reproduced quadratic part of the Yang-Mills equation together\nwith ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction that is linear in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), ' which arises from the ', TexMathModeEnv('$', [TexCmd('mathrm', [BraceGroup('Tr')]), '(', TexCmd('mathcal'), ' F^3)'], []), ' term\nin the non-abelian generalization of Born-Infeld action.\n\nThus we are able to propose a general method for calculating ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-corrections to the Yang-Mills equation from the hMC equation.\nOne should calculate a result of each map up to desired order in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), ' or in other words do a proper number of contractions.\nIn general one should keep regular terms in the splittings which may cancel out singular terms,\nhowever in our calculations they have never contributed to the equation.\nThen exact terms may be absorbed by ', TexMathModeEnv('$', ['V_k'], []), ' and non-exact terms form an obstruction that\nafter proper redefinition of the parametrization provide us with the equation and desired ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-corrections to it.\n\n\nLet us get a cubic term of the Yang-Mills equation form the hMC equation.\nIn order to do this we have to find an obstruction to the equation\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('KS-3-order')]), '\n  Q(V_3)+m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(V_1,V_2)+m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(V_2,V_1)-m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(V_1,V_1,V_1)=0\n'], []), '\nwith ', TexMathModeEnv('$', ['m_3'], []), ' given by ', TexCmd('eqref', [BraceGroup('m3-uhp-mapping')]), '.\nIn order to calculate ', TexMathModeEnv('$', ['m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(V_2,V_1)'], []), ' we note that ', TexMathModeEnv('$', ['V_2'], []), " consists of two parts:\nthe first has zero conformal dimension thus doesn't transform,\nthe second part ", TexMathModeEnv('$', ['cA^2/', TexCmd('epsilon')], []), ' with ', TexMathModeEnv('$', [TexCmd('epsilon'), TexCmd('sim'), ' e^', BraceGroup('-', TexCmd('tau'), '+o(', TexCmd('tau'), ')')], []), ' has nonzero dimension and under the mapping\nbecomes ', TexMathModeEnv('$', ['cA^2/', TexCmd('epsilon'), '_1'], []), ' with ', TexMathModeEnv('$', [TexCmd('epsilon'), '_1', TexCmd('sim'), ' e^', BraceGroup('-2', TexCmd('tau'), '+o(', TexCmd('tau'), ')')], []), '.\nResult of each map\n', TexNamedEnv('align', [' ', TexCmd('nonumber'), '\n  ', '&m_3^', TexCmd('alpha'), "'", BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(V_1,V_1,V_1) = \n    &', TexCmd('quad'), '=', TexCmd('frac'), '2c', TexCmd('partial'), ' c', '[', ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ' + (A_', TexCmd('nu'), '^', BraceGroup('(1)'), 'A_', TexCmd('alpha'), "'", TexCmd('nu'), '^', BraceGroup('(1)'), 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' +A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), 'A_', TexCmd('nu'), '^', BraceGroup('(1)'), ')\n    (', TexCmd('frac', [BraceGroup(TexCmd('epsilon'), '_2'), BraceGroup(TexCmd('epsilon'), '_1')]), '-1) ', ']', TexCmd('partial'), ' X^', TexCmd('mu'), '  ', TexCmd('nonumber'), '\n    ', '&', TexCmd('quad'), TexCmd('quad'), '+O(', TexCmd('mbox', [BraceGroup('splittings')]), ')+O(^2), ', TexCmd('nonumber'), '\n'], []), '\n', TexNamedEnv('align', [TexCmd('nonumber'), '\n  ', '&m_2^', TexCmd('alpha'), "'", BraceGroup(TexCmd('epsilon'), '_2'), '(V_2,V_1) = +', TexCmd('frac'), '2c', TexCmd('partial'), ' c', '[', ' ', TexCmd('frac', [BraceGroup(TexCmd('epsilon'), '_2'), BraceGroup(TexCmd('epsilon'), '_1')]), '-', TexCmd('frac'), '12', ']', 'A_', TexCmd('alpha'), "'", TexCmd('nu'), '^', BraceGroup('(1)'), 'A_', TexCmd('nu'), '^', BraceGroup('(1)'), 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), TexCmd('partial'), ' X^', TexCmd('mu'), ' ', TexCmd('nonumber'), '\n    ', '&', TexCmd('quad'), '+', TexCmd('frac'), '4', '[', ' 2A_', TexCmd('nu'), '^', BraceGroup('(2)'), TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' -2', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('alpha'), "' A_", TexCmd('mu'), '^', BraceGroup('(2)'), 'A_', TexCmd('nu'), '^', TexCmd('alpha'), "'", BraceGroup('(1)'), '\n    +', TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ' -A_', TexCmd('nu'), '^', BraceGroup('(2)'), TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), '\n    +', TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ' -A_', TexCmd('mu'), '^', BraceGroup('(2)'), TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ']', ' \n    ', '&', TexCmd('quad'), '+Q', '[', '-', TexCmd('frac'), '2(', TexCmd('frac', [BraceGroup('c'), BraceGroup(TexCmd('epsilon'), '_2')]), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c')]), '2)A_', TexCmd('mu'), '^', BraceGroup('(2)'), 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), ']', '+O(', TexCmd('mbox', [BraceGroup('splittings')]), ')+O(^2),\n'], []), '\n', TexNamedEnv('align', [TexCmd('nonumber'), '\n  ', '&m_2^', TexCmd('alpha'), "'", BraceGroup(TexCmd('epsilon'), '_2'), '(V_1,V_2) = +', TexCmd('frac'), '2c', TexCmd('partial'), ' c', '[', ' ', TexCmd('frac', [BraceGroup(TexCmd('epsilon'), '_2'), BraceGroup(TexCmd('epsilon'), '_1')]), '-', TexCmd('frac'), '12', ']', 'A_', TexCmd('alpha'), "'", TexCmd('mu'), '^', BraceGroup('(1)'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), 'A_', TexCmd('nu'), '^', BraceGroup('(1)'), TexCmd('partial'), ' X^', TexCmd('mu'), ' ', TexCmd('nonumber'), '\n    ', '&', TexCmd('quad'), '+', TexCmd('frac'), '4', '[', ' 2A_', TexCmd('nu'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ' -2', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('alpha'), "' A_", TexCmd('mu'), '^', BraceGroup('(1)'), 'A_', TexCmd('nu'), '^', TexCmd('alpha'), "'", BraceGroup('(2)'), '\n    +', TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ' -A_', TexCmd('nu'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), '\n    +', TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ' -A_', TexCmd('mu'), '^', BraceGroup('(1)'), TexCmd('partial'), '_', TexCmd('nu'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ']', '\n    ', '&', TexCmd('quad'), '+Q', '[', '-', TexCmd('frac'), '2(', TexCmd('frac', [BraceGroup('c'), BraceGroup(TexCmd('epsilon'), '_2')]), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c')]), '2)A_', TexCmd('mu'), '^', BraceGroup('(1)'), 'A_', TexCmd('mu'), '^', BraceGroup('(2)'), ']', '+O(', TexCmd('mbox', [BraceGroup('splittings')]), ')+O(^2),\n'], []), '\nwhere ', TexMathModeEnv('$', ['O(', TexCmd('mathrm', [BraceGroup('splittings')]), ')'], []), ' is a term which vanishes as splittings go to zero according to ', TexCmd('eqref', [BraceGroup('hierarchy-m3-mapping')]), '.\nThough each term diverges, their sum is finite\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('3-pt-hMC')]), '\n', TexNamedEnv('split', ['\n  ', '& m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(V_1,V_2)+m_2^', TexCmd('alpha'), "'", BraceGroup(TexCmd('epsilon'), '_2'), '(V_2,V_1)-m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(V_1,V_1,V_1) \n  & =', TexCmd('frac'), TexCmd('alpha'), "'4c", TexCmd('partial'), ' c', TexCmd('Bigl', [BracketGroup(' ', TexCmd('mathrm', [BraceGroup('Max')]), '(A^', BraceGroup('(3)'), ')+ ', TexCmd('mathrm', [BraceGroup('YM')]), '^2(A^', BraceGroup('(2)'), ',A^', BraceGroup('(1)'), ')+', TexCmd('mathrm', [BraceGroup('YM')]), '^2(A^', BraceGroup('(1)'), ',A^', BraceGroup('(2)'), ')\n  +', TexCmd('mathrm', [BraceGroup('YM')]), '^3(A^', BraceGroup('(1)'), ') ', TexCmd('Bigr'))]), TexCmd('partial'), ' X^', TexCmd('alpha'), "'", TexCmd('mu'), ' \n  ', '&+Q', '[', '-', TexCmd('frac'), '2(', TexCmd('frac', [BraceGroup('c'), BraceGroup(TexCmd('epsilon'), '_2')]), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c')]), '2)', '\\{', 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',A_', TexCmd('mu'), '^', BraceGroup('(2)'), '\\}', ']', '+O(^2).\n'], []), '\n'], []), '\nThus\n', TexNamedEnv('align', ['\n  V_3 =cA_', TexCmd('mu'), '^', BraceGroup('(3)'), TexCmd('partial'), TexCmd('alpha'), "' X^", TexCmd('mu'), '-', TexCmd('frac'), '4', TexCmd('partial'), ' c', TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('mu'), TexCmd('alpha'), "'^", BraceGroup('(3)'), '+\n    ', TexCmd('frac', [BraceGroup(TexCmd('ap'))]), '2(', TexCmd('frac', [BraceGroup('c'), BraceGroup(TexCmd('epsilon'), '_2')]), '+', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' c')]), '2)', '\\{', 'A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',A_', TexCmd('mu'), '^', BraceGroup('(2)'), '\\}', '+O(^2).\n'], []), '\n', '\nThe symmetry ', TexMathModeEnv('$', [TexCmd('delta'), ' V_3'], []), ' contains besides expected terms that provide us with ', TexCmd('eqref', [BraceGroup('YM-symm-3')]), ',\na few terms that go to a redefinitions in a similar to ', TexCmd('eqref', [BraceGroup('A-redef-1')]), ' and ', TexCmd('eqref', [BraceGroup('A-redef-2')]), ' way,\nbut in order to obtain cubic term of the Yang-Mills equation the 0-th order in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), ' is enough.\nThus at the third order in coupling ', TexMathModeEnv('$', ['t'], []), ' we have the following identifications\n', TexNamedEnv('align', ['\n  ', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', TexCmd('alpha'), "'", BraceGroup('(3)'), '&=A_', TexCmd('mu'), '^', BraceGroup('(3)'), '+O(), \n  ', TexCmd('varepsilon'), '^', BraceGroup('(3)'), '&=H^', BraceGroup('(3)'), '\n'], []), '\ntogether with a cubic part ', TexCmd('eqref', [BraceGroup('YM3')]), ' of the Yang-Mills equation\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', '&', TexCmd('mathrm', [BraceGroup('Max')]), '(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(3)'), ')+', TexCmd('mathrm', [BraceGroup('YM')]), '^3(', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ') \n  &', TexCmd('quad'), ' +2', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ']', '\n\t      +2', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ']', '\n\t      -', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), TexCmd('alpha'), "'^", BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ']', '\n\t      -', '[', TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ',', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ']', '\n  ', '&', TexCmd('quad'), ' -', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(2)'), ']', '\n\t      -', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ',', TexCmd('partial'), '_', TexCmd('nu'), TexCmd('mathcal'), ' A_', TexCmd('nu'), '^', BraceGroup('(1)'), ']', '+O()=0\n'], []), '\n'], []), '\nand its gauge symmetry\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), '&=', TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ',\n  ', TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), '&=', TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('varepsilon'), '^', BraceGroup('(2)'), '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ']', ',\n  ', TexCmd('delta'), TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(3)'), '&=', TexCmd('partial'), '_', TexCmd('mu'), ' ', TexCmd('varepsilon'), '^', BraceGroup('(3)'), '\n    +', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(2)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(1)'), ']', '+', '[', TexCmd('mathcal'), ' A_', TexCmd('mu'), '^', BraceGroup('(1)'), ',', TexCmd('varepsilon'), '^', BraceGroup('(2)'), ']', '.\n'], []), '\n'], []), '\nIt is not hard to show that the hMC equation will reproduce the Yang-Mills equation order by order in the coupling ', TexMathModeEnv('$', ['t'], []), '.\nMoreover, in each order in ', TexMathModeEnv('$', ['t'], []), ' only a few terms in the hMC equation will contribute.\nThis happens because a contribution of the maps ', TexMathModeEnv('$', ['m_k'], []), ' with ', TexMathModeEnv('$', ['k', TexCmd('ge'), ' 4'], []), ' are of ', TexMathModeEnv('$', [TexCmd('alpha'), "'^2"], []), ' order.\nFor example let us calculate the following map\n', TexNamedEnv('align', ['\n  ', '& m_4^', BraceGroup(TexCmd('tilde'), TexCmd('epsilon'), '_1,', TexCmd('tilde'), TexCmd('epsilon'), '_2,', TexCmd('tilde'), TexCmd('epsilon'), '_3'), '(V_1,V_1,V_1,V_1)= ', TexCmd('nonumber'), ' \n  ', TexCmd('alpha'), "'& -(cA_", TexCmd('mu'), TexCmd('partial'), ' X^', TexCmd('mu'), '-', TexCmd('frac'), '4', TexCmd('partial'), ' c', TexCmd('partial'), '_', TexCmd('mu'), ' A_', TexCmd('mu'), ')(x)\n    ', TexCmd('alpha'), "'", TexCmd('int'), '_', BraceGroup('D_4'), ' dydz ', '\\;', ' A_', TexCmd('nu'), TexCmd('partial'), ' X^', TexCmd('nu'), '(y)\n    A_', TexCmd('alpha'), TexCmd('partial'), ' X^', TexCmd('alpha'), '(z)\n    (cA_', TexCmd('beta'), TexCmd('partial'), ' X^', TexCmd('beta'), '-', TexCmd('frac'), '4', TexCmd('partial'), ' c', TexCmd('partial'), '_', TexCmd('beta'), ' A_', TexCmd('beta'), ')(w).\n'], []), '\nHere ', TexMathModeEnv('$', ['D_4'], []), ' is a two-dimensional domain defined by the following constraints,\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('D4')]), ' \n', TexNamedEnv('split', ['\n  ', '&y-x>', TexCmd('tilde'), TexCmd('epsilon'), '_1,', TexCmd('quad'), '\n  z-y>', TexCmd('tilde'), TexCmd('epsilon'), '_1,', TexCmd('quad'), '\n  w-z>', TexCmd('tilde'), TexCmd('epsilon'), '_1,\n  &z-x>', TexCmd('tilde'), TexCmd('epsilon'), '_2,', TexCmd('quad'), '\n  w-y>', TexCmd('tilde'), TexCmd('epsilon'), '_2\n'], []), '\n'], []), '\nwhere ', TexMathModeEnv('$', ['x'], []), ', ', TexMathModeEnv('$', ['w'], []), ' are fixed with ', TexMathModeEnv('$', ['w-x=', TexCmd('tilde'), TexCmd('epsilon'), '_3'], []), ' and ', TexMathModeEnv('$', ['y'], []), ', ', TexMathModeEnv('$', ['z'], []), ' are coordinates describing ', TexMathModeEnv('$', ['D_4'], []), '.\nWe propose that splittings satisfy the following conditions:\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('hierarchy-m4')]), '\n', TexNamedEnv('split', ['\n', '&', TexCmd('tilde'), TexCmd('epsilon'), '_1', TexCmd('ll'), ' ', TexCmd('tilde'), TexCmd('epsilon'), '_2', TexCmd('ll'), ' ', TexCmd('tilde'), TexCmd('epsilon'), '_3,\n&', TexCmd('frac', [BraceGroup(TexCmd('tilde'), TexCmd('epsilon'), '_2^2'), BraceGroup(TexCmd('tilde'), TexCmd('epsilon'), '_1')]), TexCmd('to'), ' 0,', TexCmd('quad'), TexCmd('frac', [BraceGroup(TexCmd('tilde'), TexCmd('epsilon'), '_3^2'), BraceGroup(TexCmd('tilde'), TexCmd('epsilon'), '_2')]), TexCmd('to'), ' 0.\n'], []), '\n'], []), '\nIntegration over ', TexMathModeEnv('$', ['D_4'], []), ' can be rewritten as a double integral:\n', TexNamedEnv('equation', ['\n  ', TexCmd('int'), '_', BraceGroup('D_4'), ' dy dz =\n  ', TexCmd('int'), '_', BraceGroup('x+', TexCmd('tilde'), TexCmd('epsilon'), '_1'), '^', BraceGroup('x+', TexCmd('tilde'), TexCmd('epsilon'), '_2-', TexCmd('tilde'), TexCmd('epsilon'), '_1'), 'dy', TexCmd('int'), '_', BraceGroup('x+', TexCmd('tilde'), TexCmd('epsilon'), '_2'), '^', BraceGroup('w-', TexCmd('tilde'), TexCmd('epsilon'), '_1'), 'dz +\n  ', TexCmd('int'), '_', BraceGroup('x+', TexCmd('tilde'), TexCmd('epsilon'), '_2-', TexCmd('tilde'), TexCmd('epsilon'), '_1'), '^', BraceGroup('w-', TexCmd('tilde'), TexCmd('epsilon'), '_2'), 'dy', TexCmd('int'), '_', BraceGroup('y+', TexCmd('tilde'), TexCmd('epsilon'), '_1'), '^', BraceGroup('w-', TexCmd('tilde'), TexCmd('epsilon'), '_1'), 'dz.\n'], []), '\nDoing some math this ', TexMathModeEnv('$', ['m_4'], []), '-contribution can be estimated as\n', TexNamedEnv('align', ['\n  m_4^', BraceGroup(TexCmd('epsilon'), ',E,E_1'), TexCmd('alpha'), "'(V_1,V_1,V_1,V_1) = O(", TexCmd('alpha'), "'", TexCmd('mathrm', [BraceGroup('splittings')]), ')+ O(', TexCmd('mathrm', [BraceGroup('splittings')]), ')+O(^2),\n'], []), '\nwhere ', TexMathModeEnv('$', ['O(', TexCmd('mathrm', [BraceGroup('splittings')]), ')'], []), ' is a term which vanishes as splittings go to zero according to ', TexCmd('eqref', [BraceGroup('hierarchy-m4')]), '.\nThus we conclude that due to lack of singularity in splittings at one contraction\nand plenty of integrations the Yang-Mills equation is not affected by the ', TexMathModeEnv('$', ['m_4'], []), '-contribution.\nSimilar reasoning is valid for ', TexMathModeEnv('$', ['m_k'], []), '-contribution with ', TexMathModeEnv('$', ['k', TexCmd('ge'), ' 5'], []), ' and\ntheir compositions.\nThus we arrive to a conclusion that ', TexMathModeEnv('$', ['m_k'], []), '-contribution with ', TexMathModeEnv('$', ['k', TexCmd('ge'), '4'], []), ' and their compositions \ndo not affect the Yang-Mills equation \nat the leading order in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), ', although contribute to ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-corrections.\n\n\n\n', TexCmd('section', [BraceGroup('Conclusion')]), '\nIn this paper we have constructed the maps that form ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra with a parameter.\nBy means of these maps it is possible to define the homotopical Maurer-Cartan equation,\nfind its symmetry and explore its properties.\nThen using suitable parametrization we have reproduced the Yang-Mills equation\nin a particular limit of the parameter.\nAlso we have identified ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction linear in ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), ' and\nhave suggested a calculation method for ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-corrections.\nThough calculations using this method becomes very complicated as we are trying to\nfind higher order ', TexMathModeEnv('$', [TexCmd('alpha'), "'"], []), '-correction,\nwe believe that there still exists a way that is able to take into account all corrections.\nThis approach with slight modification can be applied to the local operators inserted in the bulk of the worldsheet\nthus providing an interpretation of string gravity equations in the same spirit.\n\nPresented approach may be seen as a "string field theory" in sense that local operator ', TexMathModeEnv('$', ['V'], []), '\nmay be considered as a conformal representation of a string field.\nThus expressions for ', TexMathModeEnv('$', ['V_k'], []), ' may serve as appropriate basis for string field expansion.\n\n', TexCmd('section', [BraceGroup('Acknowledgments')]), '\nWe are grateful to A.S. Losev for motivation, inspiration and illuminating discussions during the work on the project.\nWork of DG and PK was supported in part by \nthe Russian Ministry of Science and Education (contract No 14.740.11.0710)\nand \ngrant RFBR 08-01-00798.\n\n', TexNamedEnv('appendix', ['\n', TexCmd('section', [BraceGroup('Verification of the quadratic relations of ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra')]), ' ', TexCmd('label', [BraceGroup('section:quad-rel')]), '\nIn this section we check that the maps ', TexMathModeEnv('$', ['m_k'], []), ' do form ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra by verifying the first three quadratic relations of ', TexMathModeEnv('$', ['A_', TexCmd('infty')], []), '-algebra.\nWe note that this derivation can be easily adapted to proving quadratic relations for ', TexMathModeEnv('$', ['M_k'], []), ' by drawing paths of integration on corresponding surface instead of the UHP.\nThis technique can be easily generalized to proving of all quadratic relations, not just three of them.\nThe first relation ', TexMathModeEnv('$', ['Q^2=0'], []), ' is obvious. The second relation:\n', TexNamedEnv('equation', ['\n  Qm_2^', TexCmd('epsilon'), '(A,B)=m_2^', TexCmd('epsilon'), '(QA,B)+(-1)^Bm_2^', TexCmd('epsilon'), '(A,QB).\n'], []), '\nTo prove it we can write ', TexMathModeEnv('$', ['Q'], []), ' as a half-contour integral ', TexMathModeEnv('$', ['Q=', TexCmd('int'), ' j_', BraceGroup('BRST')], []), '. Since ', TexMathModeEnv('$', ['A'], []), ' and ', TexMathModeEnv('$', ['B'], []), ' are inserted at distinct points we\ncan rewrite the integral as a sum of two integrals (See fig. ', TexCmd('ref', [BraceGroup('fig:Q-m2-uhp')]), '). The path of the first integral goes\naround the point where ', TexMathModeEnv('$', ['A'], []), ' is inserted, and the second path goes around point where ', TexMathModeEnv('$', ['B'], []), ' is inserted.\nOne method to prove that we can move the path of integrations is doubling trick. It proves that we can move the path as long as\nboth ends of the path remain on real axis.\n', TexNamedEnv('figure', ['\n', TexNamedEnv('center', ['\n  ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('Q-m2-uhp_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(12624,5833)(-11,-5327)\n', TexCmd('put'), '(5131,-1546)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(6991,-1546)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(5311,119)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n', TexCmd('put'), '(3376,-5191)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(9796,-3346)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n', TexCmd('put'), '(8776,-5191)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(10576,-5191)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(1576,-5191)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(1576,-3331)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n'], []), '  ', TexCmd('caption', [BraceGroup('The second relation.')]), '\n  ', TexCmd('label', [BraceGroup('fig:Q-m2-uhp')]), '\n'], []), '\n'], [BracketGroup('h!')]), '\n', '\nThe third relation is\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', '&Q m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,C)= -m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(QA,B,C)-(-1)^Am_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,QB,C)-(-1)^', BraceGroup('A+B'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,QC) \n    &', TexCmd('quad'), TexCmd('quad'), TexCmd('quad'), ' + m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(A,m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(B,C))-m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(A,B),C)\n'], []), '\n'], []), '\nWe use the same techinque to rewrite ', TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []), ' into a sum of several integrals (see fig. ', TexCmd('ref', [BraceGroup('fig:Q-m3-uhp')]), ').\nThis figure illustrates the following derivation:\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\n  ', '&Q m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,C)=\n  &', TexCmd('quad'), ' -m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(QA,B,C)-(-1)^', BraceGroup('A+B'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,QC)+A(x)Q', TexCmd('Bigl'), '(', TexCmd('int'), ' dzb(z) ', TexCmd('int'), ' dyB(y)', TexCmd('Bigr'), ')C(u)=\n  &', TexCmd('quad'), ' -m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(QA,B,C)-(-1)^', BraceGroup('A+B'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,QC)+A(x)', TexCmd('int'), ' dzT(z) ', TexCmd('int'), ' dyB(y)C(u)\n    &', TexCmd('quad'), TexCmd('quad'), '-(-1)^Am_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,QB,C)=\n  &', TexCmd('quad'), ' -m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(QA,B,C)-(-1)^Am_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,QB,C)-(-1)^', BraceGroup('A+B'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,QC)\n    &', TexCmd('quad'), TexCmd('quad'), '+A(x)', TexCmd('int'), ' dy', TexCmd('partial'), ' B(y)C(u)=\n  &', TexCmd('quad'), ' -m_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(QA,B,C)-(-1)^Am_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,QB,C)-(-1)^', BraceGroup('A+B'), 'm_3^', BraceGroup(TexCmd('epsilon'), '_1,', TexCmd('epsilon'), '_2'), '(A,B,QC)\n    &', TexCmd('quad'), TexCmd('quad'), '+m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(A,m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(B,C))-m_2^', BraceGroup(TexCmd('epsilon'), '_2'), '(m_2^', BraceGroup(TexCmd('epsilon'), '_1'), '(A,B),C)\n'], []), '\n'], []), "\nWe note that this derivation is correct for any finite values of splittings, it doesn't require any hierarchy of the splittings.\n", TexNamedEnv('figure', ['\n', TexNamedEnv('center', ['\n  ', TexNamedEnv('picture', ['(0,0)', TexCmd('includegraphics', [BraceGroup('Q-m3-uhp_pspdftex')])], []), TexCmd('setlength', [BraceGroup(TexCmd('unitlength')), BraceGroup('1243sp')]), TexCmd('begingroup'), TexCmd('makeatletter'), TexCmd('ifx'), TexCmd('SetFigFont'), TexCmd('undefined'), TexCmd('gdef'), TexCmd('SetFigFont'), '#1#2#3#4#5', BraceGroup('  ', TexCmd('reset'), '@font', TexCmd('fontsize', [BraceGroup('#1'), BraceGroup('#2pt')]), '  ', TexCmd('fontfamily', [BraceGroup('#3')]), TexCmd('fontseries', [BraceGroup('#4')]), TexCmd('fontshape', [BraceGroup('#5')]), '  ', TexCmd('selectfont')), TexCmd('fi'), TexCmd('endgroup'), TexNamedEnv('picture', ['(17595,7558)(-932,-5552)\n', TexCmd('put'), '(451,-1096)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(1576,1619)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n', TexCmd('put'), '(2476,614)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' b'], []))])))]))), '\n', TexCmd('put'), '(5896,-1096)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['C'], []))])))]))), '\n', TexCmd('put'), '(3016,-1366)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(10351,-1096)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(12376,614)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' b'], []))])))]))), '\n', TexCmd('put'), '(15796,-1096)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['C'], []))])))]))), '\n', TexCmd('put'), '(12916,-1366)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(9676,719)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n', TexCmd('put'), '(9676,-5146)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(15121,-5146)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['C'], []))])))]))), '\n', TexCmd('put'), '(12241,-5416)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(12211,-3391)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' b'], []))])))]))), '\n', TexCmd('put'), '(11926,-2431)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n', TexCmd('put'), '(451,-5146)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['A'], []))])))]))), '\n', TexCmd('put'), '(2476,-3436)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' b'], []))])))]))), '\n', TexCmd('put'), '(5896,-5146)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['C'], []))])))]))), '\n', TexCmd('put'), '(3016,-5416)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', ['B'], []))])))]))), '\n', TexCmd('put'), '(5176,-3331)', BraceGroup(TexCmd('makebox'), '(0,0)', '[', 'lb', ']', BraceGroup(TexCmd('smash', [BraceGroup(BraceGroup(TexCmd('SetFigFont', [BraceGroup('9'), BraceGroup('10.8'), BraceGroup(TexCmd('rmdefault')), BraceGroup(TexCmd('mddefault')), BraceGroup(TexCmd('updefault')), BraceGroup(TexCmd('color', [BracketGroup('rgb'), BraceGroup('0,0,0')]), TexMathModeEnv('$', [TexCmd('int'), ' j_', BraceGroup('BRST')], []))])))]))), '\n'], []), '  ', TexCmd('caption', [BraceGroup('The third relation.')]), '\n  ', TexCmd('label', [BraceGroup('fig:Q-m3-uhp')]), '\n'], []), '\n'], [BracketGroup('h!')]), '\n', '\n', TexCmd('section', [BraceGroup('Note on redefinition')]), TexCmd('label', [BraceGroup('section:redef')]), '\nHere we denote ', TexMathModeEnv('$', [TexCmd('lambda'), '=', TexCmd('alpha'), "'", TexCmd('frac'), '2', TexCmd('log'), TexCmd('epsilon'), '^2'], []), '.\nConsider\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\nU&=f(X)g(X)+', TexCmd('lambda'), TexCmd('partial'), '_', TexCmd('mu'), ' f(X)', TexCmd('partial'), '_', TexCmd('mu'), ' g(X)+', TexCmd('frac', [BraceGroup(TexCmd('lambda'), '^2'), BraceGroup('2')]), TexCmd('partial'), '_', TexCmd('mu'), TexCmd('partial'), '_', TexCmd('nu'), ' f(X)', TexCmd('partial'), '_', TexCmd('mu'), TexCmd('partial'), '_', TexCmd('nu'), ' g(X)+', TexCmd('ldots'), '\n', '&=', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('lambda'), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' Y^', TexCmd('mu'))]), TexCmd('Bigr'), ')', TexCmd('bigl'), '(f(X)g(Y)', TexCmd('bigr'), ')', TexCmd('Bigr'), '|_', BraceGroup('Y=X'), '\n'], []), '\n'], []), '\nwhere ', TexMathModeEnv('$', ['f(X)'], []), ' and ', TexMathModeEnv('$', ['g(X)'], []), ' are functions.\nUsing the following redefinition:\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\nf(X)&=', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('frac', [BraceGroup(TexCmd('lambda')), BraceGroup('2')]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('Bigr'), ')', TexCmd('tilde'), ' f(X)\ng(X)&=', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('frac', [BraceGroup(TexCmd('lambda')), BraceGroup('2')]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('Bigr'), ')', TexCmd('tilde'), ' g(X)\n'], []), '\n'], []), '\nwe can rewrite ', TexMathModeEnv('$', ['U'], []), ' as\n', TexNamedEnv('equation', ['\nU=', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('frac', [BraceGroup(TexCmd('lambda')), BraceGroup('2')]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('Bigr'), ')', TexCmd('bigl'), '(', TexCmd('tilde'), ' f(X)', TexCmd('tilde'), ' g(X)', TexCmd('bigr'), ')\n'], []), '\nThis is also true for product of three and more functions:\n', TexNamedEnv('equation', ['\n', TexNamedEnv('split', ['\nU&=f(X)g(X)h(X)+', TexCmd('lambda'), TexCmd('partial'), '_', TexCmd('mu'), ' f(X)', TexCmd('partial'), '_', TexCmd('mu'), ' g(X)h(X)\n&', TexCmd('quad'), '+', TexCmd('lambda'), TexCmd('partial'), '_', TexCmd('mu'), ' f(X)g(X)', TexCmd('partial'), '_', TexCmd('mu'), ' h(X)+', TexCmd('lambda'), ' f(X)', TexCmd('partial'), '_', TexCmd('mu'), ' g(X)', TexCmd('partial'), '_', TexCmd('mu'), ' h(X)+', TexCmd('ldots'), '\n', '&=', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('lambda'), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' Y^', TexCmd('mu'))]), TexCmd('Bigr'), ')\n  ', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('lambda'), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' Z^', TexCmd('mu'))]), TexCmd('Bigr'), ')\n  ', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('lambda'), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' Y^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' Z^', TexCmd('mu'))]), TexCmd('Bigr'), ')\n  ', TexCmd('bigl'), '(f(X)g(Y)h(Z)', TexCmd('bigr'), ')', TexCmd('Bigr'), '|_', BraceGroup('Z=Y=X'), '\n', '&=', TexCmd('exp'), TexCmd('Bigl'), '(', TexCmd('frac', [BraceGroup(TexCmd('lambda')), BraceGroup('2')]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' X^', TexCmd('mu'))]), TexCmd('Bigr'), ')', TexCmd('bigl'), '(', TexCmd('tilde'), ' f(X)', TexCmd('tilde'), ' g(X)', TexCmd('tilde'), ' h(X)', TexCmd('bigr'), ')\n'], []), '\n'], []), '\nThe redefinition ', TexMathModeEnv('$', ['f', TexCmd('to'), TexCmd('tilde'), ' f'], []), ' is similar to redefinitions made in ', TexCmd('cite', [BraceGroup('YM-from-OSFT')]), ' when obtaining the Yang-Mills action from the\nbosonic open string field theory.\n\n'], []), '\n', '\n', TexNamedEnv('thebibliography', ['\n  ', TexCmd('bibitem', [BraceGroup('FT-1')]), ' E. S. Fradkin and A. A. Tseytlin, "Effective Field Theory from Quantized Strings", Phys.Lett. B158:316, 1985.\n  ', TexCmd('bibitem', [BraceGroup('FT-2')]), ' E. S. Fradkin and A. A. Tseytlin, "Effective Action Approach to Superstring Theory", Phys.Lett. B160:69-76, 1985.\n  ', TexCmd('bibitem', [BraceGroup('FT-3')]), ' E. S. Fradkin and A. A. Tseytlin, ”Non-linear electrodynamics from quantized strings”, Phys. Lett. B163 (1985) 123.\n  ', TexCmd('bibitem', [BraceGroup('FT-4')]), ' E.S. Fradkin, A.A. Tseytlin, "Quantum String Theory Effective Action",\n    Nucl.Phys.B261:1-27,1985.\n  ', TexCmd('bibitem', [BraceGroup('Callan1')]), '  C.G. Callan, D. Friedan, E.J. Martinec, M.J. Perry, "Strings in Background Fields", Nucl.Phys. B262:365, 1985.\n  ', TexCmd('bibitem', [BraceGroup('Callan2')]), ' C.G. Callan, I.R. Klebanov, M.J. Perry, "String Theory Effective Actions", Nucl.Phys. B278:78, 1986.\n  ', TexCmd('bibitem', [BraceGroup('Maxwell-1')]), ' A. Abouelsaood, C. G. Callan, C. R. Nappi and S. A. Yost "Open strings in background gauge fields"\n    Nucl. Phys. B280 1987 599-624.\n  ', TexCmd('bibitem', [BraceGroup('Maxwell-2')]), '\n    C. G. Callan, C. Lovelace, C. R. Nappi and S. A. Yost "String loop corrections to beta functions"\n    Nucl. Phys. B288, 1987, 525-550.\n  ', TexCmd('bibitem', [BraceGroup('Polyakov')]), ' A.M. Polyakov, "Gauge fields and Strings," Harwood Academic\n    Publishers 1987, Nucl. Phys. B396, 367 (1993).\n  ', TexCmd('bibitem', [BraceGroup('Tseytlin')]), ' A.A. Tseytlin "Sigma Model Approach to String Theory",\n    IJMPA Vol.4, 6(1989) 1257-1318.\n  ', TexCmd('bibitem', [BraceGroup('Stasheff-1')]), ' J. D. Stasheff, "Homotopy associativity of H-spaces, I",\n    Trans. Amer. Math. Soc. 108 (1963), 275–292. \n  J. D. Stasheff, "Homotopy associativity of H-spaces, II",\n    Trans. Amer. Math. Soc. 108 (1963), 293–312.\n  ', TexCmd('bibitem', [BraceGroup('A-inf')]), ' B. Keller "Introduction to A-infinity algebras and modules"\n    arXiv:math/9910179v2 ', '[', 'math.RA', ']', '.\n  ', TexCmd('bibitem', [BraceGroup('Zwiebach')]), ' B. Zwiebach "Closed String Field Theory: Quantum Action and the BV Master Equation"\n    Nucl.Phys.B390:33-152,1993, arXiv:hep-th/9206084v1.\n  ', TexCmd('bibitem', [BraceGroup('Kontsevich')]), ' M. Kontsevich "Homological Algebra of Mirror Symmetry", arXiv:alg-geom/9411018v1.\n  ', TexCmd('bibitem', [BraceGroup('Tomasiello')]), ' A. Tomasiello "A-infinity structure and superpotentials", JHEP 0109:030,2001, arXiv:hep-th/0107195v2.\n  ', TexCmd('bibitem', [BraceGroup('1-formalism')]), ' A.S. Losev, A. Marshakov, A.M. Zeitlin "On First Order Formalism in String Theory"\n    Phys.Lett.B633:375-381,2006, arXiv:hep-th/0510065v2.\n  ', TexCmd('bibitem', [BraceGroup('KS-1')]), ' O. Gamayun, A.S. Losev, A. Marshakov "First Order String Theory and the Kodaira-Spencer Equations. I"\n    JHEP 0909:028,2009, arXiv:0906.4746v1 ', '[', 'hep-th', ']', '.\n  ', TexCmd('bibitem', [BraceGroup('KS-2')]), ' O. Gamayun, A. Marshakov "First Order String Theory and the Kodaira-Spencer Equations. II"\n    FIAN/TD-09/09, ITEP/TH-26/09, arXiv:0907.1503v1 ', '[', 'hep-th', ']', '.\n  ', TexCmd('bibitem', [BraceGroup('Zeitlin')]), ' A. M. Zeitlin "Quasiclassical Lian-Zuckerman Homotopy Algebras, Courant Algebroids and Gauge Theory", arXiv:0910.3652. \n    A. M. Zeitlin "Conformal Field Theory and Algebraic Structure of Gauge Theory", JHEP 1003:056,2010, arXiv:0812.1840 ', '[', 'hep-th', ']', ' \n    A. M. Zeitlin "Extensions of the homotopy Lie algebra of the Yang-Mills theory: Important examples", arXiv:0711.3843 ', '[', 'hep-th', ']', ' \n    A. M. Zeitlin "Homotopy Lie Superalgebra in Yang-Mills Theory", JHEP 0709:068,2007, arXiv:0708.1773 ', '[', 'hep-th', ']', ' \n    A. M. Zeitlin "Formal Maurer-Cartan Structures: From CFT to Classical Field Equations", JHEP 0712:098,2007, arXiv:0708.0955 ', '[', 'hep-th', ']', '\n    A. M. Zeitlin "BRST, Generalized Maurer-Cartan Equations and CFT", Nucl.Phys.B759:370-398,2006, arXiv:hep-th/0610208v3.\n  ', TexCmd('bibitem', [BraceGroup('Witten-sft')]), ' E. Witten, "Noncommutative Geometry And String Field Theory", Nucl. Phys. B 268 (1986) 253.\n  ', TexCmd('bibitem', [BraceGroup('Tseytlin-BI')]), '  A. A. Tseytlin, ”On nonabelian generalization of Born-Infeld action in string theory”,\n    Nucl. Phys. B501:41-52,1997, hep-th/9701125.\n  ', TexCmd('bibitem', [BraceGroup('YM-from-OSFT')]), ' E. Coletti, I. Sigalov, W. Taylor "Abelian and nonAbelian vector field effective actions from string field theory",\n    JHEP 0309:050,2003, hep-th/0306041.\n  ', TexCmd('bibitem', [BraceGroup('YM-from-Super')]), ' N. Berkovits, M. Schnabl "Yang-Mills action from open superstring field theory",\n    JHEP 0309:022,2003, hep-th/0307019.\n\n'], [BraceGroup('99')]), '\n', '\n'], [])]


5003 **SUCCESS 16507.tex

5004 ***Failed to finish morproc3.tex: [Line: 0, Offset: 3064] "eqnarray" env expecting \end{eqnarray}. Reached end of file.


5005 **SUCCESS NOHIDEZ50paper.tex

5006 **SUCCESS yatanaka-amsart.tex

5007 **SUCCESS MN.tex

5008 ***Failed to finish Topologyss_apr28.tex: 'utf-8' codec can't decode byte 0xa0 in position 86100: invalid start byte


5009 **SUCCESS Hoyos-Jaime.tex

5010 **SUCCESS nanobubble_phasespace_v4_arxiv_withbbl.tex

5011 ***Failed to finish multiorbital_impsolver2_Feng2.tex: 'utf-8' codec can't decode byte 0xa1 in position 75657: invalid start byte


5012 **SUCCESS Creation.tex

5013 ***Failed to finish lgrh2.tex: 


5014 ***Failed to finish dempb.tex: [Line: 0, Offset: 6145] "$" env expecting $. Reached end of file.


5015 ***Failed to finish papjfmlanl.tex: [Line: 0, Offset 303389] Malformed argument. First and last elements must match a valid argument format. In this case, TexSoup could not find matching punctuation for: {.
Just finished parsing: ['{', '\n', TexCmd('Big(1'), ' + ', TexCmd('frac', [BraceGroup(TexCmd('omega'), '^2'), BraceGroup('[', 'k^2(', TexCmd('gamma'), '_', BraceGroup('+'), '+', TexCmd('gamma'), '_', BraceGroup('-'), ')', ']', '^2')]), TexCmd('big)'), TexCmd('big(1'), ' + ', TexCmd('frac', [BraceGroup(TexCmd('omega'), '^2'), BraceGroup('[', 'k^2(', TexCmd('gamma'), '_', BraceGroup('+'), '-', TexCmd('gamma'), '_', BraceGroup('-'), ')', ']', '^2')]), ' ', TexCmd('Big)}'), '.\n', TexCmd('end', [BraceGroup('equation')]), '\nWe make no special distinction between functions of ', TexMathModeEnv('$', [TexCmd('gamma'), '_', BraceGroup('+'), ',', TexCmd('gamma'), '_', BraceGroup('-')], []), ' and\nfunctions of ', TexMathModeEnv('$', [TexCmd('nu'), ',', TexCmd('nu'), '_B'], []), ', since these viscosity and resistivity\nparameters are linearly related \nvia Eq. (', TexCmd('ref', [BraceGroup('gammanu')]), '), and are freely interchangeable.\n\n', BraceGroup(), 'From Eq. (', TexCmd('ref', [BraceGroup('prodresponse')]), ') and the commutativity of the block matrices, we\ncan express Eq. (', TexCmd('ref', [BraceGroup('corrhel')]), ') as\n', TexNamedEnv('eqnarray', ['_', BraceGroup('mn'), ' ', '&=&\n', '[', ' ', TexCmd('matrix', [BraceGroup(TexCmd('langle'), ' PP ', TexCmd('rangle'), ' ', '& ', TexCmd('langle'), ' PQ ', TexCmd('rangle'), ' ', TexCmd('cr'), '   \n         ', TexCmd('langle'), ' QP ', TexCmd('rangle'), ' ', '& ', TexCmd('langle'), ' QQ ', TexCmd('rangle'), ' ')]), ' ', ']', '_', BraceGroup('mn'), ', ', TexCmd('nonumber'), ' \n', '&=& f(', TexCmd('nu'), ',', TexCmd('nu'), '_B; k,', TexCmd('omega'), ') \n', '\\{', ' 2k^', BraceGroup('-y'), '[', ' ', TexCmd('matrix', [BraceGroup('A&B', TexCmd('cr'), '   \n         B&A')]), ' ', ']', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('mn'), '(', TexCmd('vec'), ' k) +\n2h_B k^', BraceGroup('-w'), '[', ' ', TexCmd('matrix', [BraceGroup('1&-1', TexCmd('cr'), '   \n         -1&1')]), ' ', ']', '\n', TexCmd('epsilon'), '_', BraceGroup('mnl'), 'k_l ', '\\}', '.\n'], [BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' C')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')')]), '\nOf course, the term proportional to ', TexMathModeEnv('$', ['h_B'], []), ' holds only in ', TexMathModeEnv('$', ['d=3'], []), ', while the remainder\nof this expression can be \nevaluated in any spatial dimension. \nThis yields the individual correlations in terms of the Elsasser fields, but we can skip\nimmediately to the quadratic correlations involving the fluid velocity and magnetic fields \nby means of the linear relations \ngiven in Eq. (', TexCmd('ref', [BraceGroup('Elbasis')]), '). ', BraceGroup(), 'From this, it implies\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('individualv')]), '\n', TexCmd('langle'), ' v_i v_j ', TexCmd('rangle'), ' ', '&=& f(', TexCmd('nu'), ',', TexCmd('nu'), '_B; k,', TexCmd('omega'), ')', '\\,', ' \n', '(A+B) k^', BraceGroup('-y'), ' ', '\\{', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ij'), '(', TexCmd('vec'), ' k) + ', TexCmd('frac', [BraceGroup('h_B'), BraceGroup('A + B')]), '\\,', '\nk^', BraceGroup('y-w'), '\\,', ' ', TexCmd('epsilon'), '_', BraceGroup('ijm'), 'k_m ', '\\}', ', \n', TexCmd('label', [BraceGroup('individualB')]), '\n', TexCmd('langle'), ' B_i B_j ', TexCmd('rangle'), ' ', '&=& f(', TexCmd('nu'), ',', TexCmd('nu'), '_B; k,', TexCmd('omega'), ')', '\\,', ' \n', '(A-B) k^', BraceGroup('-y'), ' ', '\\{', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ij'), '(', TexCmd('vec'), ' k) + ', TexCmd('frac', [BraceGroup('h_B'), BraceGroup('A - B')]), '\\,', '\nk^', BraceGroup('y-w'), '\\,', ' ', TexCmd('epsilon'), '_', BraceGroup('ijm'), 'k_m ', '\\}', ', \n', TexCmd('label', [BraceGroup('individualvB')]), '\n', TexCmd('langle'), ' v_i B_j ', TexCmd('rangle'), ' ', '&=& f(', TexCmd('nu'), ',', TexCmd('nu'), '_B; k,', TexCmd('omega'), ')', '\\,', ' \nh_B', '\\,', ' k^', BraceGroup('-w'), '\\,', ' ', TexCmd('epsilon'), '_', BraceGroup('ijm'), ' k_m.\n'], []), '\n', '\nThe improved correlations are obtained immediately upon making the\nreplacements mentioned above. We see that this operation affects\nonly the overall factor ', TexMathModeEnv('$', ['f(', TexCmd('nu'), ',', TexCmd('nu'), '_B; k,', TexCmd('omega'), ')'], []), ', which is common to each\nindividual correlation function.  As such, this is the only function that\nneeds to be improved, with the correlations in \nEqs. (', TexCmd('ref', [BraceGroup('individualv')]), '), (', TexCmd('ref', [BraceGroup('individualB')]), '),\nand (', TexCmd('ref', [BraceGroup('individualvB')]), ') improved\nby replacing\n', TexNamedEnv('equation', ['\nf(', TexCmd('nu'), ',', TexCmd('nu'), '_B; k,', TexCmd('omega'), ') arrow \nf(', TexCmd('nu'), '(k),', TexCmd('nu'), '_B(k); k,', TexCmd('omega'), ').\n'], []), BraceGroup(), 'From Eqs. (', TexCmd('ref', [BraceGroup('prodresponse')]), '), (', TexCmd('ref', [BraceGroup('nukay')]), ') and (', TexCmd('ref', [BraceGroup('nubkay')]), '), we find that\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('fimp')]), '\nf(', TexCmd('nu'), '(k),', TexCmd('nu'), '_B(k); k,', TexCmd('omega'), ') &=& ', TexCmd('frac', [BraceGroup(TexCmd('big(\'), 'nu', '(k) + ', TexCmd('nu'), '_B(k) ', TexCmd('big)^'), '2 k^', BraceGroup('-4')), BraceGroup('\n4 ', TexCmd('nu'), '(k)^2 ', TexCmd('nu'), '_B(k)^2')]), '\\,', ' C', TexCmd('Big('), TexCmd('frac', [BraceGroup(TexCmd('omega')), BraceGroup('k^z')]), ' ', TexCmd('Big),'), TexCmd('nonumber'), ' \n', '&=& ', TexCmd('frac', [BraceGroup('(a + b)^2'), BraceGroup('4(a^2', '\\,', ' b^2)')]), '\\,', ' k^', BraceGroup('-4 + ', TexCmd('frac', [BraceGroup('2'), BraceGroup('3')]), '(4 + y -d)'), '\\,', '\nC', TexCmd('Big('), TexCmd('frac', [BraceGroup(TexCmd('omega')), BraceGroup('k^z')]), ' ', TexCmd('Big),'), ' \n'], []), '\nwhere the constants \n', TexNamedEnv('equation', ['\na = ', TexCmd('Big('), TexCmd('frac', [BraceGroup('6 A_d (A+B)'), BraceGroup('4+y-d')]), ' ', TexCmd('Big)^', [BraceGroup(TexCmd('frac', [BraceGroup('1'), BraceGroup('3')]))]), ', ', TexCmd('qquad'), '\nb = ', TexCmd('Big('), TexCmd('frac', [BraceGroup('6 A_d (A-B)'), BraceGroup('4+y-d')]), ' ', TexCmd('Big)^', [BraceGroup(TexCmd('frac', [BraceGroup('1'), BraceGroup('3')]))]), '.\n'], []), '\nWe point out that the scaling function ', TexMathModeEnv('$', ['C'], []), ' is also modified by the\nrunning of the viscosity and resistivity as should be clear from\nEq. (', TexCmd('ref', [BraceGroup('bigC')]), '), and this is accounted for by the exponent ', TexMathModeEnv('$', ['z'], []), '.  \n\nSubstituting Eq. (', TexCmd('ref', [BraceGroup('fimp')]), ') into \nEqs. (', TexCmd('ref', [BraceGroup('individualv')]), '), (', TexCmd('ref', [BraceGroup('individualB')]), '), and (', TexCmd('ref', [BraceGroup('individualvB')]), ')\ngives the complete structure of the correlation functions correct at one-loop\norder. Note that the net exponent \n', TexMathModeEnv('$', ['-4 + ', TexCmd('frac', [BraceGroup('2'), BraceGroup('3')]), '(4 + y - d) - y ', TexCmd('equiv'), ' -d -2', TexCmd('chi'), ' -z'], []), ', so \nthat Eqs. (', TexCmd('ref', [BraceGroup('individualv')]), ') and (', TexCmd('ref', [BraceGroup('individualB')]), ') \nreproduce the same scaling\n(for ', TexMathModeEnv('$', ['h_B = 0'], []), ', i.e. zero helicity) as we found in Eqs. (', TexCmd('ref', [BraceGroup('pipi')]), ') and\n(', TexCmd('ref', [BraceGroup('pipsi')]), '). However, we also explicitly obtain the associated\nscaling functions. We see that the presence of random magnetic helicity\nmodifies these correlations, since the helical contribution scales\nas ', TexMathModeEnv('$', ['k^', BraceGroup('y-w+1')], []), ' ', BraceGroup(TexCmd('it'), ' relative'), ' to the non-helical part.\n', BraceGroup(), 'Furthermore, the relative\nstrength of this term goes as the ratio of the amplitudes of the helical \nto the non-helical fluctuations: ', TexMathModeEnv('$', ['h_B/(A+B), h_B/(A-B)'], []), '. \n\n\n\n', TexCmd('section', [BraceGroup('The Callan-Symanzik equation')]), '\n', TexCmd('label', [BraceGroup('sect7')]), '\n', '\n', '\nIn this section, we derive the scaling behavior of the correlation functions \nin the Fourier domain from\na distinct but entirely complementary point-of-view provided by the methods of field theory.\nIn this approach, the renormalization of the ultraviolet \n(short-distance) divergences\nof the stochastic field theory for MHD formulated in Appendix A leads\nto certain partial differential equations, frequently \nreferred to as Callan-Symanzik\nequations', TexCmd('footnote', [BraceGroup("Equations of this type are typically referred to as\nCallan-Symanzik equations, though strictly speaking, this name refers\nto a specific type of renormalization group equation resulting from so-called\nmass-subtraction (in quantum field theory). \nA mass-independent subtraction leads to a different\nequation, similar to the one actually derived here, and might be more\nproperly called a t'Hooft-Weinberg equation. A clear distinction\nbetween Gell-Mann-Low, Callan-Symanzik and t'Hooft-Weinberg renormalization\ngroup equations is drawn by (Gross 1981).")]), ' \nfor the one-particle\nirreducible (1PI) Green functions.  The exact solutions \nof these equations provide\nconsiderable information that goes well beyond perturbation theory. \nThese solutions tell us how the 1PI functions scale near\nthe fixed points\nof the theory and permit one to quantify the approach to the fixed\npoints. Moreover, the concept and mechanics of RG-improvement is given\na rigorous basis by means of the Callan-Symanzik equation. \nWe therefore devote some space in the present section to \nan application of these ideas to stochastic MHD field theory. \nIn what follows, we consider non-helical MHD. The extension to the helical\ncase is straightforward but will not be carried out here.\n\n\nTo begin, we first tabulate the \ncanonical dimensions (in units of momentum) of all the parameters\nand fields \nappearing in the\ngenerating functional for MHD. These are easily obtained by noting that the\naction ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' A')], []), ' in the dynamic functional, \n', TexNamedEnv('equation', ['\nZ = ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), TexCmd('vec'), ' ', TexCmd('sigma')), BracketGroup(BraceGroup(TexCmd('cal'), ' D'), TexCmd('bf'), ' ', TexCmd('Phi'))]), TexCmd('exp'), ' ', '(', BraceGroup(TexCmd('cal'), ' A'), ') ,\n'], []), '\nmust be dimensionless: ', TexMathModeEnv('$', ['[', BraceGroup(TexCmd('cal'), ' A'), ']', ' = 0.'], []), ' \nWe recall that we have employed a short-hand notation for the pair\nof Elsasser fields: \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' = (', TexCmd('vec'), ' P, ', TexCmd('vec'), ' Q)'], []), ', and the conjugate fields\n', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('sigma')], []), ' are defined in Appendix A.\nWe can read off the explicit structure\nof the action ', TexMathModeEnv('$', [TexCmd('cal'), ' A'], []), ' directly from Eqs. (', TexCmd('ref', [BraceGroup('full')]), '), (', TexCmd('ref', [BraceGroup('firstpass')]), '),\n(', TexCmd('ref', [BraceGroup('inverseresponse')]), ') and (', TexCmd('ref', [BraceGroup('covariance')]), ').\n', BraceGroup(), 'From this zero-dimensionality condition we therefore find \nthat (where ', TexMathModeEnv('$', ['[', 'X', ']', ' = d_X'], []), ' denotes the dimension of ', TexMathModeEnv('$', ['X'], []), ' in units of momentum)\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('paramdims'), BracketGroup(TexCmd('gamma'), '_', BraceGroup(TexCmd('pm')))]), ' = d_', BraceGroup(TexCmd('gamma')), ', ', TexCmd('qquad', [BracketGroup(TexCmd('omega'))]), ' = d_', BraceGroup(TexCmd('omega')), ' = 2 + d_', BraceGroup(TexCmd('gamma')), ', \n'], []), '\n', TexNamedEnv('equation', [' = ', '[', 'B', ']', ' = d_A = d_B, ', TexCmd('qquad', [BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]))]), ' = d_', BraceGroup(TexCmd('Gamma')), ' = d_A - y,\n'], [BracketGroup('A')]), '\n', TexNamedEnv('equation', [' = d_', BraceGroup(TexCmd('lambda')), ' = ', TexCmd('frac', [BraceGroup('(4-d+y)'), BraceGroup('2')]), ' +', TexCmd('frac', [BraceGroup('3'), BraceGroup('2')]), 'd_', BraceGroup(TexCmd('gamma')), ' -\n', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), 'd_A, ', TexCmd('qquad', [BracketGroup('g_', BraceGroup(TexCmd('pm')))]), ' = 0.\n'], [BracketGroup(TexCmd('lambda'))]), '\nThe Elsasser and conjugate fields have dimensions\n', TexNamedEnv('equation', [' = d_', BraceGroup(TexCmd('Phi')), ' = -3 -', TexCmd('frac', [BraceGroup('d'), BraceGroup('2')]), ' -', TexCmd('frac', [BraceGroup('3'), BraceGroup('2')]), 'd_', BraceGroup(TexCmd('gamma')), '\n+ ', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), 'd_', BraceGroup(TexCmd('Gamma')), ', ', TexCmd('qquad', [BracketGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' = d_', BraceGroup(TexCmd('sigma')), ' = -1 -', TexCmd('frac', [BraceGroup('d'), BraceGroup('2')]), ' -', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), 'd_', BraceGroup(TexCmd('gamma')), ' -\n', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), 'd_', BraceGroup(TexCmd('Gamma')), ',\n'], [BracketGroup(BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')))]), ' \nrespectively. Note that the canonical dimension\nof the fields depends on the noise exponent ', TexMathModeEnv('$', ['y'], []), ' since \n', TexMathModeEnv('$', ['d_', BraceGroup(TexCmd('Gamma')), ' = d_A - y'], []), '.\n', BraceGroup(), 'Finally, the two 1PI functions of particular interest to us are the\nresponse function and the noise spectral function. \nThe response function\nhas dimension\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('11'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'), '_', BraceGroup('11'))]))]), ' = d_', BraceGroup('11'), ' = \n', '[', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '^', BraceGroup('-1'), '_0)_', BraceGroup('ij'), ']', ' =\n(2 + d_', BraceGroup(TexCmd('gamma')), '),\n'], []), '\nwhile the non-helical part of the noise spectral function has dimension\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('02'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'), '_', BraceGroup('02'))]))]), ' = d_', BraceGroup('02'), '\n= ', '[', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ')_', BraceGroup('ij'), ']', ' =\nd_A - y.\n'], []), '\nWe remark that it is \ncustomary to denote the 1PI Green functions by a capital ', TexMathModeEnv('$', [TexCmd('Gamma')], []), ', which is not to be\nconfused with the block array of noise correlation functions. These 1PI functions\nare built up out of certain numbers of conjugate fields and physical fields: the\nindices on the first two terms \non left hand side of Eq. (', TexCmd('ref', [BraceGroup('11')]), ') indicate that one (1) \nconjugate and one (1) physical\nfield are involved, while in Eq. (', TexCmd('ref', [BraceGroup('02')]), '), no conjugate field (0) and two (2) physical\nfields are involved. We suppress the latin indices here to avoid clutter.   \nNote all canonical dimensions can be expressed in terms of the dimension of the \nviscosity (and resistivity)\n', TexMathModeEnv('$', ['d_', BraceGroup(TexCmd('gamma'))], []), ', the noise amplitude ', TexMathModeEnv('$', ['d_A=d_B'], []), ', and\nexponent ', TexMathModeEnv('$', ['y'], []), '.\n\n\nThe one-loop corrections to the MHD \nparameters calculated in the Appendices \nhave been cut-off \nwith a momentum or wavenumber regulator ', TexMathModeEnv('$', [TexCmd('Lambda')], []), '.\nRecall, this actually is a physical cut-off \nin momentum.  It is associated with the\nsmallest length scale below which the continuum description of the\nfluid breaks down and must be replaced by\nan atomic/molecular \ndescription.\nIf this short-distance \ncutoff is taken to zero (', TexMathModeEnv('$', [TexCmd('Lambda'), '^', BraceGroup('-1'), ' arrow 0'], []), '), \ni.e. take ', TexMathModeEnv('$', [TexCmd('Lambda'), ' arrow\n', TexCmd('infty')], []), ', it would result in\nshort distance or ultraviolet \ndivergences showing up in the one-loop response and correlation\nfunctions that are calculated in the Appendices. \nTo systematically remove these ultraviolet divergences,\nrenormalization \nconstants would have to be introduced in the parameters and fields that\nappear in the above action ', TexMathModeEnv('$', [TexCmd('cal'), ' A'], []), '. \nThis may be implemented by \nintroducing renormalized parameters (denoted by ', TexMathModeEnv('$', ['Z_a, Z_', BraceGroup(TexCmd('Phi')), ', Z_', BraceGroup(TexCmd('sigma'))], []), ')\nand renormalized fields (denoted by an ', TexMathModeEnv('$', ['R'], []), ') as \n(Gross 1981; Amit 1978)\n', TexNamedEnv('eqnarray', ['\n', TexCmd('xi'), '_a &=& Z^', BraceGroup('-1'), '_a ', '\\,', ' ', TexCmd('xi'), '^R_a, \n', TexCmd('label', [BraceGroup('zedphi'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' ', '&=& Z_', BraceGroup(TexCmd('Phi')), '^', BraceGroup('1/2'), ' ', '\\,', ' ', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), '^R, \n', TexCmd('label', [BraceGroup('zedsigma'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' ', '&=& Z_', BraceGroup(TexCmd('sigma')), '^', BraceGroup('1/2'), ' ', '\\,', ' ', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), '^R .\n'], []), ' \nHere the symbol ', TexMathModeEnv('$', [TexCmd('xi'), '_a'], []), ' is a shorthand notation denoting the collection\nof all parameters that appear in the\ndynamical equations, ', TexMathModeEnv('$', [TexCmd('xi'), '_a=(A,B,', TexCmd('gamma'), '_', BraceGroup('+'), ',', TexCmd('gamma'), '_', BraceGroup('-'), ',', TexCmd('lambda'), ')'], []), ', with the \nlabel running from\n', TexMathModeEnv('$', ['a =1,..,5'], []), '. We will be able to draw some general conclusions about\nthe asymptotic properties of the correlation functions without having to\nexplicitly calculate these renormalization parameters.  \n\n\nIn the following, we first consider an arbitrary 1PI function, and then specialize\nto our response and noise functions to obtain information regarding the\ncorrelation function. \nKeep in mind that for the MHD theory considered here, \nthese functions\nall have the structure of two-by-two block arrays \nmultiplied by a ', TexMathModeEnv('$', ['d'], []), '-by-', TexMathModeEnv('$', ['d'], []), ' tensor\nfactor. We suppress the tensor indices in what follows.  \nThe renormalization of the 1PI functions containing ', TexMathModeEnv('$', ['N'], []), ' factors\nof the physical field and ', TexMathModeEnv('$', [TexCmd('tilde'), ' N'], []), ' factors of the conjugate field is given by\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('renorm1')]), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N,', TexCmd('tilde'), ' N'), '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '^R_a', '\\}', ',g;', TexCmd('mu'), ') =\nZ^', BraceGroup('N/2'), '_', BraceGroup(TexCmd('Phi')), '\\,', 'Z^', BraceGroup(TexCmd('tilde'), ' N/2'), '_', BraceGroup(TexCmd('sigma')), ' \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '_', BraceGroup('N,', TexCmd('tilde'), ' N'), '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '_a', '\\}', ',g_0;', TexCmd('Lambda'), ').\n'], []), '\nIn arriving at this expression, we have expressed the bare fields\nin terms of the \nrenormalized fields by means of Eqs. (', TexCmd('ref', [BraceGroup('zedphi')]), ') \nand (', TexCmd('ref', [BraceGroup('zedsigma')]), ').\nThe label ', TexMathModeEnv('$', ['R'], []), ' denotes a renormalized quantity. \nMost importantly, the renormalization requires introducing a finite but\narbitrary\nmomentum scale ', TexMathModeEnv('$', [TexCmd('mu')], []), ', which remains in the finite, renormalized expressions. \nAs it stands, this equation merely expresses the fact that the function in\nquestion is renormalizable.  In other words, \nthe UV divergences can be consistently\nsubtracted out. This subtraction is done at some arbitrarily chosen\nscale ', TexMathModeEnv('$', [TexCmd('mu')], []), ', and this fact must be recorded in \nthe resulting finite renormalized\nfunction. \nUsing the fact that the bare, unrenormalized 1PI function does ', BraceGroup(TexCmd('it'), ' not'), ' depend on this\narbitrary momentum scale ', TexMathModeEnv('$', [TexCmd('mu')], []), ' ', '(it depends only on the \nultraviolet cut-off ', TexMathModeEnv('$', [TexCmd('Lambda')], []), '), \nwe can easily derive a differential equation for the\nrenormalized 1PI function as follows:\n', TexNamedEnv('equation', ['\n', TexCmd('Big('), TexCmd('mu'), ' ', TexCmd('frac', [BraceGroup('d'), BraceGroup('d', TexCmd('mu'))]), TexCmd('Big)_'), '0 \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '_', BraceGroup('N,', TexCmd('tilde'), ' N'), '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '_a', '\\}', ',g_0;', TexCmd('Lambda'), ')\n= 0 .\n'], []), '\nThis implies (see footnote 1)\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('tHW')]), '\n', TexCmd('Big(\'), 'mu', ' ', TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' ', TexCmd('mu'))]), ' + ', TexCmd('beta'), '(g) ', TexCmd('frac', [BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' g')]), '\n+ ', TexCmd('sum'), '_a ', TexCmd('Delta'), '_a ', TexCmd('xi'), '_a^R ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' '), BraceGroup(TexCmd('partial'), ' ', TexCmd('xi'), '^R_a')]), ' \n-', TexCmd('frac', [BraceGroup('N'), BraceGroup('2')]), ' ', TexCmd('gamma'), ' -', TexCmd('frac', [BraceGroup(TexCmd('tilde'), ' N'), BraceGroup('2'), BraceGroup(TexCmd('tilde'), ' ', TexCmd('gamma'))]), ' ', TexCmd('Big)'), TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N,', TexCmd('tilde'), ' N'), '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '^R_a', '\\}', ',g;', TexCmd('mu'), ') = 0,\n'], []), '\nwhere the coefficient functions appearing in this differential equation are defined by\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('Delta')]), '\n', TexCmd('Delta'), '_a &=& ', TexCmd('big(\'), 'mu', ' ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' ', TexCmd('ln'), ' Z_a'), BraceGroup(TexCmd('partial'), ' ', TexCmd('mu'))]), TexCmd('big)_'), '0, \n', TexCmd('label', [BraceGroup('beta')]), '\n', TexCmd('beta'), '(g) &=& ', TexCmd('big(\'), 'mu', ' ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' g'), BraceGroup(TexCmd('partial'), ' ', TexCmd('mu'))]), TexCmd('big)_'), '0, \n', TexCmd('label', [BraceGroup('gamma')]), '\n', TexCmd('gamma'), '  ', '&=& ', TexCmd('big(\'), 'mu', ' ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' ', TexCmd('ln'), ' Z_', BraceGroup(TexCmd('Phi'))), BraceGroup(TexCmd('partial'), ' ', TexCmd('mu'))]), TexCmd('big)_'), '0, ', '\\,', '\\,', '\\,', '\n', BraceGroup(TexCmd('tilde'), ' ', TexCmd('gamma')), '  = ', TexCmd('big(\'), 'mu', ' ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' \n', TexCmd('ln'), ' Z_', BraceGroup(TexCmd('sigma'))), BraceGroup(TexCmd('partial'), ' ', TexCmd('mu'))]), TexCmd('big)_'), '0.\n'], []), '\nThe zero-subscript (0) indicates the derivatives \nare taken while holding fixed the bare parameters\nThis equation Eq. (', TexCmd('ref', [BraceGroup('tHW')]), ') indicates that a change in the arbitrary\nbut finite \nsubtraction scale ', TexMathModeEnv('$', [TexCmd('mu')], []), ' \nis compensated for by corresponding changes in the\nphysical parameters.  \nAs Eq. (', TexCmd('ref', [BraceGroup('tHW')]), ') is a linear first-order partial differential\nequation, it can be readily solved by \nmeans of characteristics (Amit 1978). The \nexact solution is given by\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('solution')]), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N,', TexCmd('tilde'), ' N'), '\n', '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '^R_a', '\\}', ',g;', TexCmd('mu'), ') = \n', TexCmd('exp'), TexCmd('Big(-'), ' ', TexCmd('int'), '_1^b ', TexCmd('frac', [BraceGroup('du'), BraceGroup('u'), BracketGroup(TexCmd('frac', [BraceGroup('N'), BraceGroup('2')]), TexCmd('gamma'), '(u) + ', TexCmd('frac', [BraceGroup(TexCmd('tilde'), ' N'), BraceGroup('2'), BraceGroup(TexCmd('tilde'), ' ', TexCmd('gamma'))]), '(u)')]), ' ', TexCmd('Big)\'), ',\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N,', TexCmd('tilde'), ' N'), '\n', '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '^R_a(b)', '\\}', ',g(b); b', TexCmd('mu'), '),\n'], []), '\nwhere the equations for the characteristics are \n', TexNamedEnv('eqnarray', ['\n', TexCmd('label', [BraceGroup('beta2')]), '\n', TexCmd('beta'), '(g(b)) &=& b', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' g(b)'), BraceGroup(TexCmd('partial'), ' b')]), ', \n', TexCmd('label', [BraceGroup('params')]), '\n', TexCmd('Delta'), '_a(g(b)) &=& b', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' ', TexCmd('ln'), ' ', TexCmd('xi'), '_a^R(b)'), BraceGroup(TexCmd('partial'), ' b')]), '.\n'], []), '\nThese equations are subject to the boundary conditions at ', TexMathModeEnv('$', ['b=1'], []), ',  \n', TexMathModeEnv('$', ['g(1) = g'], []), ' and ', TexMathModeEnv('$', [TexCmd('xi'), '^R_a(1) = ', TexCmd('xi'), '^R_a'], []), '.\nThe solution \ncan be readily verified by differentiating \nEq. (', TexCmd('ref', [BraceGroup('solution')]), ') \non both sides with respect to ', TexMathModeEnv('$', ['b'], []), ' and using the chain rule.  \nThe set of characteristics define a ruled (hyper) \nsurface on which ', TexMathModeEnv('$', [TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N', TexCmd('tilde'), ' N')], []), '\nis defined \nand ', TexMathModeEnv('$', ['b'], []), ' parametrizes the characteristic curves on this surface. \nIt is related to the RG flow parameter via ', TexMathModeEnv('$', ['b = e^', BraceGroup('-', TexCmd('ell'))], []), '.  \nThis dimensionless parameter ', TexMathModeEnv('$', ['b'], []), ' can be related to \nratios of momentum (or length) scales, as we will\nsee below.  \nThe physical content of the solution Eq. (', TexCmd('ref', [BraceGroup('solution')]), ') \nis as follows.  A change in momentum scale\n(as measured by ', TexMathModeEnv('$', ['b'], []), ') is accompanied by a change in the coupling ', TexMathModeEnv('$', ['g(b)'], []), ' and\nin the other parameters ', TexMathModeEnv('$', [TexCmd('xi'), '^R_a(b)'], []), '.  \n', BraceGroup(), 'Furthermore, the vertex function picks up\nan additional overall exponential \nfactor depending on the two anomalous dimensions ', TexMathModeEnv('$', [TexCmd('gamma')], []), ' and\n', TexMathModeEnv('$', [TexCmd('tilde'), ' ', TexCmd('gamma')], []), ' that are defined and calculated in Eq. (', TexCmd('ref', [BraceGroup('gamma')]), '). \nIn particular, we see that the anomalous dimensions depend\non the renormalization of the physical and conjugate fields\n(wavefunction renormalization). These dimensions control in turn,\nthe approach to the fixed point, as we will see below.\nIn a nutshell, this equation relates the 1PI function at two different\nscales. We now use this fact to deduce how the correlation functions\ndepend on scale. \n\nDefine dimensionless scaling functions (', TexMathModeEnv('$', ['d_', BraceGroup('N', TexCmd('tilde'), ' N')], []), ' is the canonical\ndimension of the 1PI function) \n', TexMathModeEnv('$', [TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('N ', TexCmd('tilde'), ' N')], []), ' as\n', TexNamedEnv('equation', ['\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N', TexCmd('tilde'), ' N'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ';', '\\{', TexCmd('xi'), '^R_a', '\\}', ',g;', TexCmd('mu'), ') =\n', TexCmd('mu'), '^', BraceGroup('d_', BraceGroup('N', TexCmd('tilde'), ' N')), '\\,', ' \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('N', TexCmd('tilde'), ' N'), TexCmd('Big(\'), 'frac', BraceGroup('k'), BraceGroup(TexCmd('mu')), ', \n', TexCmd('frac', [BraceGroup(TexCmd('omega')), BraceGroup(TexCmd('mu'), '^', BraceGroup('2+d_', BraceGroup(TexCmd('gamma'))))]), ',\n', '\\{', ' ', TexCmd('frac', [BraceGroup(TexCmd('xi'), '^R_a'), BraceGroup(TexCmd('mu'), '^', BraceGroup('d_', BraceGroup(TexCmd('xi'), '_a')))]), ' ', '\\}', '; g\n', TexCmd('Big),'), '\n'], []), '\nso that the dimension of \n', TexMathModeEnv('$', [TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N', TexCmd('tilde'), ' N')], []), ' \nis carried entirely by an appropriate power of\n', TexMathModeEnv('$', [TexCmd('mu')], []), '. \nThe individual arguments of ', TexMathModeEnv('$', [TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('N', TexCmd('tilde'), ' N')], []), '\nare rendered dimensionless since each is expressed as a \ndimensionless quotient, by making use of the dimensions listed\nabove in Eq. (', TexCmd('ref', [BraceGroup('paramdims')]), '). Here, ', TexMathModeEnv('$', ['d_', BraceGroup(TexCmd('xi'), '_a')], []), ' denotes one of\n', TexMathModeEnv('$', ['d_A,d_B,d_', BraceGroup(TexCmd('lambda')), ',d_', BraceGroup(TexCmd('gamma'), '_+'), ',d_', BraceGroup(TexCmd('gamma'), '_', BraceGroup('-'))], []), '. \nThen from the solution Eq. (', TexCmd('ref', [BraceGroup('solution')]), ')\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('scaledsolution')]), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '^R_', BraceGroup('N,', TexCmd('tilde'), ' N'), '(', TexCmd('vec'), ' k, ', TexCmd('omega'), '; ', '\\{', TexCmd('xi'), '^R_a', '\\}', ',g;', TexCmd('mu'), ') \n&=& ', TexCmd('big(b'), TexCmd('mu'), ' ', TexCmd('big)^', [BraceGroup('d_', BraceGroup('N', TexCmd('tilde'), ' N'))]), '\\,', '\n', TexCmd('exp'), TexCmd('Big(-'), TexCmd('int'), '^b_1 ', TexCmd('frac', [BraceGroup('dx'), BraceGroup('x'), BracketGroup(TexCmd('frac', [BraceGroup('N'), BraceGroup('2')]), TexCmd('gamma'), '(x) + ', TexCmd('frac', [BraceGroup(TexCmd('tilde'), ' N'), BraceGroup('2')]), '\n', TexCmd('tilde'), ' ', TexCmd('gamma'), '(x)')]), ' ', TexCmd('Big)\'), ', ', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('N', TexCmd('tilde'), ' N'), TexCmd('Big(\'), 'frac', BraceGroup('k'), BraceGroup('b', TexCmd('mu')), ', \n', TexCmd('frac', [BraceGroup(TexCmd('omega')), BraceGroup('(b', TexCmd('mu'), ')^', BraceGroup('2+d_', BraceGroup(TexCmd('gamma'))))]), ',\n', '\\{', ' ', TexCmd('frac', [BraceGroup(TexCmd('xi'), '^R_a(b)'), BraceGroup('(b', TexCmd('mu'), ')^', BraceGroup('d_', BraceGroup(TexCmd('xi'), '_a')))]), ' ', '\\}', '; g(b)\n', TexCmd('Big).'), ' \n'], []), '\nAt this point, we have succeeded in writing each renormalized\n1PI Green function as a product involving a dimensionful\npower of the momentum scale ', TexMathModeEnv('$', [TexCmd('mu')], []), ' times an exponential factor\ntimes a dimensionless scaling function.\nNow, the correlation function for the \nElsasser fields ', TexMathModeEnv('$', ['P, Q'], []), ', which recall is ', BraceGroup(TexCmd('it'), ' not'), '\n1PI,  \nis  given by \n(see Eq. (', TexCmd('ref', [BraceGroup('correlation')]), ')) the block-matrix product\n', TexMathModeEnv('$', [TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('C')]), ' = (', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '_', BraceGroup('11'), ')^', BraceGroup('-1'), ' \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '_', BraceGroup('02'), ' \n', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('Gamma'))]), '_', BraceGroup('11'), ')^', BraceGroup('-1')], []), '.\nThus, from Eq. (', TexCmd('ref', [BraceGroup('scaledsolution')]), ')\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('general')]), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('C')]), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ';', '\\{', ' ', TexCmd('xi'), '^R_a ', '\\}', ',g;', TexCmd('mu'), ') \n= ', TexCmd('big('), 'b', TexCmd('mu'), ' ', TexCmd('big)^', [BraceGroup('d_A - y -2d_', BraceGroup(TexCmd('gamma')), ' - 4')]), '\\,', '\n', TexCmd('exp'), TexCmd('Big(+'), TexCmd('int'), '_1^b ', TexCmd('frac', [BraceGroup('dx'), BraceGroup('x')]), ' ', '\\,', ' ', TexCmd('gamma'), '(x) ', TexCmd('Big)', [BraceGroup(TexCmd('hat'), ' C')]), ' \n', TexCmd('Big(\'), 'frac', BraceGroup('k'), BraceGroup('b', TexCmd('mu')), ', ', TexCmd('frac', [BraceGroup(TexCmd('omega')), BraceGroup('(b', TexCmd('mu'), ')^', BraceGroup('2+d_', BraceGroup(TexCmd('gamma'))))]), ',\n', '\\{', ' ', TexCmd('frac', [BraceGroup(TexCmd('xi'), '^R_a(b)'), BraceGroup('(b', TexCmd('mu'), ')^', BraceGroup('d_', BraceGroup(TexCmd('xi'), '_a')))]), ' ', '\\}', '; g(b)\n', TexCmd('Big),'), ' \n'], []), '\nwhere ', TexMathModeEnv('$', [BraceGroup(TexCmd('hat'), ' C'), ' = (', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('11'), ')^', BraceGroup('-1'), ' \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('02'), ' \n', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup('F')]), '_', BraceGroup('11'), ')^', BraceGroup('-1')], []), ' \nand from Eqs. (', TexCmd('ref', [BraceGroup('11')]), ') and (', TexCmd('ref', [BraceGroup('02')]), ')\n', TexMathModeEnv('$', ['d_', BraceGroup('02'), '-2d_', BraceGroup('11'), ' = d_A - y - 4 - 2d_', BraceGroup(TexCmd('gamma'))], []), '. \nRecall that ', TexMathModeEnv('$', [TexCmd('hat'), ' C'], []), ' is a ', TexMathModeEnv('$', ['2', TexCmd('times'), ' 2'], []), ' block array with a pair\nof ', TexMathModeEnv('$', ['d'], []), '-dimensional indices. \nNote that in Eq. (', TexCmd('ref', [BraceGroup('general')]), ') \nthe dependence on the conjugate field anomalous\ndimension ', TexMathModeEnv('$', [TexCmd('tilde'), ' ', TexCmd('gamma')], []), ' has dropped out.\n\nIt is worth commenting that provided the \ncharacteristic equations Eqs. (', TexCmd('ref', [BraceGroup('beta2')]), ') and (', TexCmd('ref', [BraceGroup('params')]), ')\nare solved, Eq. (', TexCmd('ref', [BraceGroup('general')]), ') yields the exact solution for the correlation\nfunctions in terms of the parameter ', TexMathModeEnv('$', ['b'], []), ' which is a measure of the momentum\nscale (or inverse length scale) at which one observes the system. \nThe exact solution is known if\nexplicit knowledge is available of the anomalous dimension\n', TexMathModeEnv('$', [TexCmd('gamma'), '(x)'], []), ' and the solutions of the above characteristic equations.\nHowever, typically these are known only up to some order in perturbation\ntheory, which usually is to a given number of loops. Thus, the\nsolution of the Callan-Symanzik equation is only known to the\nsame number of loops. The important utility of the solution lies in the\nfact that it tells us how quantities behave away from\nthe fixed point and it places the results obtained from\nnaive scaling arguments on a solid footing.\nIn general,\nthe beta function Eq. (', TexCmd('ref', [BraceGroup('beta')]), ') will not vanish for \narbitrary ', TexMathModeEnv('$', ['b'], []), ' ', '(i.e., far away from fixed points) nor will the coupling \n', TexMathModeEnv('$', ['g(b)'], []), ' be constant.  As such, the\nexpression Eq. (', TexCmd('ref', [BraceGroup('general')]), ') \ntells how the fields are correlated in general, that is, everywhere in\nparameter space, and not just in the vicinity of the fixed points.    \nOf course, \nif the system happens to be at a \nfixed point, ', TexMathModeEnv('$', ['g arrow g^* = ', BraceGroup(TexCmd('rm'), ' const.')], []), ',\n', TexMathModeEnv('$', [TexCmd('gamma'), ' arrow ', TexCmd('gamma'), '^* = ', BraceGroup(TexCmd('rm'), ' const.')], []), ', etc.\nChoosing ', TexMathModeEnv('$', ['b = k/', TexCmd('mu')], []), ' and restoring the block labels \nand tensor indices gives for the ', TexMathModeEnv('$', ['PP'], []), ' \nentry of the block array\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('improvedc')]), '\nC_', BraceGroup('P_j P_n'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') = k^', BraceGroup('d_A-y-2d_', BraceGroup(TexCmd('gamma')), ' - 4'), '\\,', ' \n', TexCmd('Big(\'), 'frac', BraceGroup('k'), BraceGroup(TexCmd('mu')), TexCmd('Big)^', [BraceGroup(TexCmd('gamma'), '^*')]), '\\,', '\n', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), '(', TexCmd('vec'), ' k)', '\\,', '\n', BraceGroup(TexCmd('hat'), ' C'), '_', BraceGroup('P P'), ' ', TexCmd('Big(\'), 'frac', BraceGroup(TexCmd('omega')), BraceGroup('k^', BraceGroup('2+d_', BraceGroup(TexCmd('gamma')))), ',\n', '\\{', ' ', TexCmd('frac', [BraceGroup(TexCmd('xi'), '^R_a(k)'), BraceGroup('k^', BraceGroup('d_', BraceGroup(TexCmd('xi'), '_a')))]), ' ', '\\}', '; g^*\n', TexCmd('Big),'), '\n'], []), '\nand similarly\nfor the ', TexMathModeEnv('$', ['PQ'], []), ' and ', TexMathModeEnv('$', ['QQ'], []), ' entries.\nAt a fixed point, i.e. ', TexMathModeEnv('$', [TexCmd('Delta'), '_a^* = ', TexCmd('Delta'), '_a(g^*)'], []), ',\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('runxi')]), '\n', TexCmd('xi'), '_a^R (b) = ', TexCmd('xi'), '_a^R (1)', '\\,', ' b^', BraceGroup(TexCmd('Delta'), '_a^*'), ',\n', TexCmd('qquad'), ' ', TexCmd('longrightarrow'), ' \n', TexCmd('xi'), '_a^R (k) = ', TexCmd('xi'), '_a^R (1)', '\\,', ' ', TexCmd('big(\'), 'frac', BraceGroup('k'), BraceGroup(TexCmd('mu')), ' ', TexCmd('big)^', [BraceGroup(TexCmd('Delta'), '_a^*')]), ',\n'], []), '\nwhich follows from evaluating Eq. (', TexCmd('ref', [BraceGroup('params')]), ') at a fixed point. \nIn particular we see that the correlation function, calculated\nup to ', TexMathModeEnv('$', ['n'], []), '-loops, is given by the free correlation function but\nexpressed in terms of the scale dependent (running) couplings\nand parameters (calculated up to ', TexMathModeEnv('$', ['n'], []), '-loop order). This is \nnothing but the prescription leading to RG-improved \nquantities, but here it is a natural and automatic property of the\nsolutions of the Callan-Symanzik equation.\n\nComparing (', TexCmd('ref', [BraceGroup('improvedc')]), ')\nto Eqs. (', TexCmd('ref', [BraceGroup('pipi')]), ') and (', TexCmd('ref', [BraceGroup('pipsi')]), ') yields the exponent\nrelations\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('compare')]), '\nz = 2 + d_', BraceGroup(TexCmd('gamma')), ', ', TexCmd('qquad'), ' ', TexCmd('chi'), ' = 1 - ', TexCmd('frac', [BraceGroup('d'), BraceGroup('2')]), ' + ', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), TexCmd('big('), 'd_', BraceGroup(TexCmd('gamma')), ' - d_A + y - ', TexCmd('gamma'), '^*).\n'], []), "\nThese relations allow the various ``engineering'' \ndimensions to be related with the\nfixed point exponents calculated earlier. Moreover, we see how the concept\nof RG-improvement used throughout this \npaper appears as a rigorous feature of the solutions\nof the Callan-Symanzik equation. The equality in Eq. (", TexCmd('ref', [BraceGroup('improvedc')]), ') \nshows that the correlation function in the vicinity of the \nfixed point\nis a power law multiplied by the scaling function. ', BraceGroup(), 'Furthermore, the\nscaling function\nis evaluated with the\nrunning or scale-dependent values of the parameters,\nthat are computed\nin the neighborhood of that fixed point, as exactly \nindicated by Eq. (', TexCmd('ref', [BraceGroup('runxi')]), ').\nNote that if there is any nontrivial wavefunction \nrenormalization (indicated by a ', TexMathModeEnv('$', [TexCmd('gamma*'), ' ', TexCmd('neq'), ' 0'], []), '), it\nis automatically subsumed in the exponent ', TexMathModeEnv('$', [TexCmd('chi')], []), ' as shown in\nEq. (', TexCmd('ref', [BraceGroup('compare')]), '). \nSince we have\ncalculated both ', TexMathModeEnv('$', ['z'], []), ' and ', TexMathModeEnv('$', [TexCmd('chi')], []), ' by independent means, there\nis no need for a separate calculation of ', TexMathModeEnv('$', [TexCmd('gamma'), '^*'], []), ' if we\nare interested only in what is happening at the fixed point. \n\n', TexCmd('subsection', [BraceGroup('Approach to the fixed point')]), '\n', TexCmd('label', [BraceGroup('sect7A')]), '\n', '\nObserve that the exponent (also called the anomalous dimension) ', TexMathModeEnv('$', [TexCmd('gamma'), '(g)'], []), '\ncontrols the approach to the scaling regime, which is reflected in the pure power law\nbehavior of the correlation function \nat the fixed point. In general, it is unlikely the\ndynamical system will be sitting exactly at the fixed point.\nTherefore one should\nstudy the form of the correlation function \nfor values of the coupling that are\nin the basin of attraction of the fixed point and \nsee how this function depends on\narbitrary initial values of the coupling. \n\nThis can be done systematically by returning to the exponential factor in\nEq. (', TexCmd('ref', [BraceGroup('general')]), ') and carefully \nexpanding this about the (non-trivial) fixed point.  \n', BraceGroup(), 'First make a convenient change of variables as\n', TexNamedEnv('equation', ['\n', TexCmd('int'), '^b_1 ', TexCmd('frac', [BraceGroup('dx'), BraceGroup('x')]), ' ', TexCmd('gamma'), '(g(x)) = \n', TexCmd('int'), '_0^l dl ', '\\,', TexCmd('gamma'), '(g(l)) = ', TexCmd('int'), '^', BraceGroup('g(l)'), '_', BraceGroup('g(0)'), '\n', TexCmd('frac', [BraceGroup(TexCmd('gamma'), '(y)'), BraceGroup(TexCmd('beta'), '(y)')]), ' dy,\n'], []), '\nwhere ', TexMathModeEnv('$', ['b = e^l'], []), '. Note, this ', TexMathModeEnv('$', ['l'], []), ' is not the \nsame as the RG flow parameter ', TexMathModeEnv('$', [TexCmd('ell')], []), ' in Eq. (', TexCmd('ref', [BraceGroup('RGE1')]), '), but they\nare related as ', TexMathModeEnv('$', ['-', TexCmd('ln'), '(b) = ', TexCmd('ell')], []), ' ', '(Frey and Tauber 1994). \nAs already\npointed out, ', TexMathModeEnv('$', ['b'], []), " parametrizes the sense of ``flow'' along the characteristic\ncurves that arise in the solution of the CS equation and does not\nautomatically single out either the infrared (decreasing ", TexMathModeEnv('$', ['b'], []), ') or \nthe ultraviolet (increasing ', TexMathModeEnv('$', ['b'], []), ") limit. The\nconnection to these physical limits is made once we assign infrared and ultraviolet\nflow ``directions'' to the characteristics.  \nThe one-loop beta function can be read off directly from \nEq. (", TexCmd('ref', [BraceGroup('RGE2')]), ') and is given by ', TexMathModeEnv('$', [TexCmd('beta'), '(g) = 12 g(g^* - g)'], []), '.\nSolving for the coupling by integrating \nthe differential equation Eq. (', TexCmd('ref', [BraceGroup('RGE2')]), ') gives\n', TexNamedEnv('equation', ['\n', TexCmd('frac', [BraceGroup('g(', TexCmd('ell'), ')'), BraceGroup('g^*')]), ' = ', TexCmd('frac', [BraceGroup(TexCmd('frac', [BraceGroup('g(0)'), BraceGroup('g^*-g(0)')]), TexCmd('exp'), '(', TexCmd('epsilon'), ' ', TexCmd('ell'), ')'), BraceGroup('\n1 + ', TexCmd('frac', [BraceGroup('g(0)'), BraceGroup('g^*-g(0)')]), TexCmd('exp'), '(', TexCmd('epsilon'), ' ', TexCmd('ell'), ')')]), ', \n'], []), '\nwhere ', TexMathModeEnv('$', [TexCmd('epsilon'), ' = 4-d+y > 0'], []), '.\nThe infrared stable non-trivial fixed point is reached by taking\n', TexMathModeEnv('$', ['b = ', TexCmd('frac', [BraceGroup('k'), BraceGroup(TexCmd('mu'))]), ' arrow 0'], []), ' or ', TexMathModeEnv('$', ['l arrow\n-', TexCmd('infty')], []), '. In terms of the Wilsonian flow parameter ', TexMathModeEnv('$', [TexCmd('ell')], []), ', this corresponds to the limit\n', TexMathModeEnv('$', [TexCmd('ell'), ' arrow ', TexCmd('infty')], []), '.  \nNote this fixed point is reached for \nall initial values ', TexMathModeEnv('$', ['g(0)'], []), ' of the coupling.  \n\nNext, Taylor expand the anomalous dimension about the fixed point as\n', TexNamedEnv('equation', ['\n', TexCmd('gamma'), '(g) = ', TexCmd('gamma'), '^* + ', TexCmd('gamma'), "' (g - g^*) + O(g - g^*)^2 .\n"], []), '\nWith this,  evaluating the integral\n', TexNamedEnv('equation', ['\n', TexCmd('int'), '^', BraceGroup('g(l)'), '_', BraceGroup('g(0)'), '\n', TexCmd('frac', [BraceGroup(TexCmd('gamma'), '(g)'), BraceGroup(TexCmd('beta'), '(g)')]), ' dg = ', TexCmd('gamma'), '^* l -\n', TexCmd('frac', [BraceGroup(TexCmd('gamma'), "'"), BraceGroup('12')]), ' ', TexCmd('ln'), TexCmd('Big(\'), 'frac', BraceGroup('g(l)'), BraceGroup('g(0)'), TexCmd('Big),'), '\n'], []), ' \nit implies the exponential factor \ncontributing to the correlation function Eq. (', TexCmd('ref', [BraceGroup('general')]), ') works out\nto be\n', TexNamedEnv('eqnarray', ['\n', TexCmd('exp'), ' ', TexCmd('Big(\'), 'int', '_1^b ', TexCmd('frac', [BraceGroup('dx'), BraceGroup('x')]), '\\,', ' ', TexCmd('gamma'), '(g(x)) ', TexCmd('Big)'), '&=& \nb^', BraceGroup(TexCmd('gamma'), '^*'), '\\,', ' ', TexCmd('Big(\'), 'frac', BraceGroup('g(b)'), BraceGroup('g(1)'), '\n', TexCmd('Big)^', [BraceGroup('-', TexCmd('frac', [BraceGroup(TexCmd('gamma'), "'"), BraceGroup('12')]))]), ',', TexCmd('nonumber'), ' \n', '&=& ', TexCmd('big(\'), 'frac', BraceGroup('k'), BraceGroup(TexCmd('mu')), TexCmd('big)^', [BraceGroup(TexCmd('gamma'), '^*')]), '\\,', '\n', TexCmd('Big('), TexCmd('frac', [BraceGroup(' ', TexCmd('frac', [BraceGroup('g^*'), BraceGroup('g^* - g')]), TexCmd('big(\'), 'frac', BraceGroup('k'), BraceGroup(TexCmd('mu')), TexCmd('big)^', [BraceGroup(TexCmd('epsilon'))])), BraceGroup('\n1 + ', TexCmd('frac', [BraceGroup('g'), BraceGroup('g^* - g')]), '\n', TexCmd('big(\'), 'frac', BraceGroup('k'), BraceGroup(TexCmd('mu')), TexCmd('big)^', [BraceGroup(TexCmd('epsilon'))]))]), ' ', TexCmd('Big)^', [BraceGroup('-', TexCmd('frac', [BraceGroup(TexCmd('gamma'), "'"), BraceGroup('12')]))]), ' .\n'], []), '\nRecall that the ', TexMathModeEnv('$', ['k'], []), '-dependent factor with exponent ', TexMathModeEnv('$', [TexCmd('gamma'), '^*'], []), " is already\nsubsumed into the definition of the fixed point ``roughness'' exponent\n", TexMathModeEnv('$', [TexCmd('chi')], []), ', as indicated in Eq. (', TexCmd('ref', [BraceGroup('compare')]), '). However the second term, which\ndepends on the exponents ', TexMathModeEnv('$', [TexCmd('gamma'), "'"], []), ' and ', TexMathModeEnv('$', [TexCmd('epsilon')], []), ',  \nclearly is a correction to the\nfixed point (power law) form of the correlation function written\nin Eq. (', TexCmd('ref', [BraceGroup('improvedc')]), '). Depending \non the algebraic sign of ', TexMathModeEnv('$', [TexCmd('gamma'), "'"], []), ', this extra term, which\ncontrols the approach to the fixed point,  can either\naugment or diminish the energy spectrum with respect to its\nasymptotic fixed point value Eq. (', TexCmd('ref', [BraceGroup('latetime')]), '). \nSimilar consideration holds \nat the nontrivial fixed point\nfor the asymptotic\nform of the helicity spectrum in Eq. (', TexCmd('ref', [BraceGroup('nthelsp')]), ').\n\nSome comments are in order about the region away from the\nfixed point. ', BraceGroup(), 'First, any amplification\nor diminution in the spectra densities with respect to their\nsteady state fixed point values, which is\nbrought about by this extra term, is a statement about\nhow the densities evolve as they approach the nontrivial\nfixed point.\nIt is a conceivable possibility that numerical simulations,\ndue to their spatial and temporal limitations, actually may be\nseeing some sufficiently long-lived non-steady state of this type.\nThis point will\nbe elaborated upon in Sec. ', TexCmd('ref', [BraceGroup('concl')]), '.\nHowever, we hasten to point out that if the\nwavefunction renormalization constant turns out to be equal to\nunity, ', TexMathModeEnv('$', ['Z_', BraceGroup(TexCmd('Phi')), ' = 1'], []), ', then the anomalous dimension \nEq. (', TexCmd('ref', [BraceGroup('gamma')]), ') is identically\nzero, ', TexMathModeEnv('$', [TexCmd('gamma'), ' = 0'], []), '. \nWhen this is the case, then the expontial factor in \n(', TexCmd('ref', [BraceGroup('general')]), ') reduces to unity, and any corrections\nto pure power law scaling will be due entirely to the\nscaling function itself. \n', BraceGroup(), 'For incompressible hydrodynamics subject to\nrandom forces, it is known that ', TexMathModeEnv('$', ['Z=1'], []), ' \n', '(DeDominicis and Martin 1979). \nThis in \nturn can be\nshown to be a consequence of the underlying Galilean invariance of \nthe Navier-Stokes equation, which is maintained for all spatially\ncorrelated random forces. Since the equations of nonrelativistic MHD\nare also Galilean invariant, we suspect that the  \nanomalous dimension Eq. (', TexCmd('ref', [BraceGroup('gamma')]), ') will also be vanishing. \nThis issue will not be discussed further in this paper.\n\n\n\n', TexCmd('section', [BraceGroup('Cascade Directions')]), '\n', TexCmd('label', [BraceGroup('sect8')]), '\n', '\nOne important question of general interest in the study\nof hydrodynamic systems is how the nonlinear terms\nredistribute energy and, if present, helicity amongst\nthe various scales.  In particular, if energy and/or helicity\nis introduced into the system at a given scale, it then will\nbe distributed by the subsequent evolution of the hydrodynamic\nor MHD equations, either to smaller (', BraceGroup(TexCmd('it'), ' direct or normal cascade'), ')\nor larger (', BraceGroup(TexCmd('it'), ' inverse cascade'), ') length scales.\nIn general, this discussion of cascades is restricted\nto the inertial range, which corresponds to\nlength scales sufficiently large that they are\nnot significantly dissipated by the viscosity term.\n\nIt is interesting to reflect on the history of the subject of cascades.\nThe earliest expectation, based on simulations\nand general arguments of the Navier-Stokes equation\nin ', TexMathModeEnv('$', ['d=3'], []), ', was that a direct cascade (also suggestively called\na normal cascade) would occur\nfrom hydrodynamic evolution.  Subsequently in \n(Kraichnan 1967),\nfor the Navier-Stokes equation in ', TexMathModeEnv('$', ['d=2'], []), ', based on general\nobservations about the two conserved constants of motion,\nenstrophy and kinetic energy per unit mass, it was \nargued that an inverse cascade of energy should occur.\n', BraceGroup(), 'For MHD, these arguments of inverse cascade are not applicable\nin either ', TexMathModeEnv('$', ['d=2,3'], []), ' and so a direct cascade of energy is expected\n(Biskamp 1993; Kraichnan 1973).  \nOn the other hand for MHD,\nconsiderations based on conservation\nof magnetic helicity in ', TexMathModeEnv('$', ['d=3'], []), ' and its\ncounterpart, the square of the magnetic potential in\n', TexMathModeEnv('$', ['d=2'], []), ' showed that an inverse cascade is expected\nof the respective quantities (Frisch et al. 1975).\nAll the above expectations are based on compelling,\nbut not rigorous, arguments.  Verification\nof these expectations mainly have come from\ncomputer simulations directly of the hydrodynamic/MHD\nequations or indirectly through some approximations\nto these equations \n(Brandenburg et al. 1996; Lilly 1969; Frisch and Sulem 1984;\nSommeria 1986; Pouquet et al. 1976; Pouquet and Patterson 1978;\nPouquet 1978).\nClearly this approach has its\nlimitations in the interesting regime of high Reynolds\nnumber, due to finite simulation time and system size restrictions.\n\nReturning from this digression back to our RG analysis,\ncascades clearly are associated with time dependent processes.\nOn the other hand, the RG analysis in this paper examined\nsteady state solutions of MHD with time translationally\ninvariant force terms and\nonly treated the leading asymptotic behavior\nat large distance.  From this analysis, information\nabout the energy spectrum can be obtained for the largest\nlength scale.  In particular, this means length scales\nbeyond the largest characteristic scale at which energy\nis input from the external force.  As such, the RG analysis\nof this paper can determine presence or absence of inverse\ncascade, depending whether the infra-red  limit of\nthe energy spectrum is enhanced or not.  This is a useful\napplication for RG, since generally some direct cascade always\noccurs and the interesting question is whether there also\nis some inverse cascade.\n\nIn order to extract information\nabout cascades from this framework, a few points\nmust be appreciated. \nThe force term is continuosly inputing\nenergy and/or helicity into the system with some prescribed\nspectrum.  A cascade for such a case therefore is associated\nwith the difference in the steady state magnetic\nand velocity spectra directly created with \nthe force (in the absence of mode mixing) versus\nthe steady state spectra that emerges from\nthe subsequent MHD evolution.  ', BraceGroup(), 'For example,\nif the spectra associated with the force is less enhanced\nin the ultraviolet versus the resulting spectra after MHD evolution,\nthen the MHD dynamics is directing energy flow to smaller length\nscales thus exhibiting a direct cascade.  Similarily,\nif the input spectra associated with the force is less enhanced\nin the infrared versus the resulting spectra from MHD,\nthen MHD is exhibiting an inverse cascade.  \n\nTo proceed with this approach, the implied magnetic and velocity\nspectra associated with the force terms must be determined.\nThe point here is Eqs. (', TexCmd('ref', [BraceGroup('vnoise')]), ') - (', TexCmd('ref', [BraceGroup('vBnoise')]), ')\ngive the spectra of the\nforce, but what we seek is the associated spectra this implies\nfor the magnetic and velocity fields.  To determine these,\nMHD with the force terms, but without the nonlinear terms,\nmust be examined.  These linearized MHD equations express the\ncorresponding magnetic and velocity spectra for given input force\nspectrum, before there is any mode mixing.  Equivalently stated,\nthese are the associated input magnetic and velocity spectra\nfor the given force, prior to any nonlinear MHD evolution.\n\nThe procedure then for determining information about cascades\nis to compare for a given force term \nthe corresponding magnetic and velocity\nspectra from the linearized MHD equations\nversus those from the full nonlinear MHD equations.\nDepending on how the ultraviolet and infrared behavior\nof the latter changes compared to the former, cascade\ndirections can be deduced.\n\n', BraceGroup(), 'Following this criteria, let us determine the cascade\ndirections predicted at the largest length scales\nfrom our RG analysis.  ', BraceGroup(), 'First note that the spectra for \nlinearized MHD equivalently stated is the one also for the\ntrivial fixed point.  Therefore one fact immediately follows\nfrom this criteria.  In the region of stability of the\ntrivial fixed point, the RG analysis predicts no cascade\nwhatsoever, at the largest length scales.\n\nTurning next to energy spectra in MHD, \nfrom Eqs. (', TexCmd('ref', [BraceGroup('spectralE2')]), ') and (', TexCmd('ref', [BraceGroup('enexp')]), ')\n', TexMathModeEnv('$', ['E(k) ', TexCmd('sim'), ' k^', BraceGroup(TexCmd('alpha'))], []), ' with\n', TexMathModeEnv('$', [TexCmd('alpha'), '_', BraceGroup(TexCmd('rm'), ' linear'), ' = -3+d-y'], []), ' and \n', TexMathModeEnv('$', [TexCmd('alpha'), '_', BraceGroup(TexCmd('rm'), ' nontrivial'), ' = -5/3+(2/3)(d-y)'], []), ', so that\n', TexMathModeEnv('$', [TexCmd('alpha'), '_', BraceGroup(TexCmd('rm'), ' linear'), ' ', TexCmd('leq'), ' ', '(', TexCmd('geq'), ') ', TexCmd('alpha'), '_', BraceGroup(TexCmd('rm'), ' nontrivial')], []), '\nin the region ', TexMathModeEnv('$', ['4-d+y ', TexCmd('geq'), ' ', '(', TexCmd('leq'), ') 0'], []), '.\nThus we see that in the stability region of the\nnontrivial fixed point, the input energy\nspectra ', TexMathModeEnv('$', [TexCmd('sim'), ' k^', BraceGroup(TexCmd('alpha'), '_', BraceGroup(TexCmd('rm'), ' linear'))], []), ' is more enhanced\nin the infrared and less in the ultraviolet\nversus the resulting spectra from MHD evolution\n', TexMathModeEnv('$', ['k^', BraceGroup(TexCmd('alpha'), '_', BraceGroup(TexCmd('rm'), ' nontrivial'))], []), '.  Thus our RG analysis\nof MHD predicts direct energy cascades at the largest length scales.\nSince the above case involves the entire stability region\nof the nontrivial fixed point, this analysis finds\nat the largest length scales,\nno prediction of an inverse cascade of energy\nin MHD for any ', TexMathModeEnv('$', ['d'], []), '.\n\nThe RG calculations in this paper easily can be reduced\nfrom MHD to hydrodynamics by identifying the fields\n', TexMathModeEnv('$', ['P=Q'], []), '.  The outcome of this is the predictions of the fixed\npoints for the hydrodynamic case are found to be exactly\nthe same as given in Sec. IV.  As such,\nour analysis also expects direct but no inverse energy cascades\nat the largest length scales in hydrodynamics for any ', TexMathModeEnv('$', ['d'], []), '.\n\nIt is interesting to note that the change from direct cascade\nto inverse cascade in the RG analysis occurs right at the\nboundary of stability for the nontrivial fixed point.\nIn particular the unstable region of the nontrivial fixed point\nwould predict inverse cascade.  In the Conclusion we will\ndiscuss interpretations of this observation.\n\nThe same analysis as above also can be done for\nhelicity. The helicity spectra given in Subsect. ', TexCmd('ref', [BraceGroup('sect6A')]), ' are\n', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' H'), '_M(k) ', TexCmd('sim'), ' k^', TexCmd('beta')], []), ' with\n', TexMathModeEnv('$', [TexCmd('beta'), '_', BraceGroup(TexCmd('rm'), ' linear'), ' = -w'], []), ' from Eq. (', TexCmd('ref', [BraceGroup('frhelsp')]), ') and \n', TexMathModeEnv('$', [TexCmd('beta'), '_', BraceGroup(TexCmd('rm'), ' nontrivial'), ' = -w+(1/3)(1+y)'], []), ' from Eq. (', TexCmd('ref', [BraceGroup('nthelsp')]), ').\nThe region of direct helicity cascade is\n', TexMathModeEnv('$', [TexCmd('beta'), '_', BraceGroup(TexCmd('rm'), ' linear'), ' < ', TexCmd('beta'), '_', BraceGroup(TexCmd('rm'), ' nontrivial')], []), ',\nwhich implies ', TexMathModeEnv('$', ['1+y > 0'], []), '. Since this is for ', TexMathModeEnv('$', ['d=3'], []), ',\nnote this last condition also corresponds to\nthe stability region of the nontrivial \nfixed point, i.e., ', TexMathModeEnv('$', ['4-d+y = 1+y'], []), '. \nSo once again, RG predicts a direct \nmagnetic helicity cascade in the entire\nstability region of the nontrivial fixed point\nand no cascade in the stability region of the trivial\nfixed point.  ', BraceGroup(), 'Furthermore, once again the change \nfrom absence to presence of\ninverse cascade for the nontrivial fixed point\nis at its boundary of stability.\n\n\n\n', TexCmd('section', [BraceGroup('Conclusion')]), '\n', TexCmd('label', [BraceGroup('concl')]), '\n', '\nIn this paper a Renormalization Group (RG) analysis has been performed\nfor MHD with a stochastic force term.  Such an analysis enables\nthe study of highly turbulent MHD in the asymptotic regime\nof large length and time scales.  In the format of the RG approach,\nthe central problem is to determine the effective MHD equations\nat large scales that emerge once all short distance\nphysics is integrated out of the initial fundamental \nMHD equations.  The analysis was carried out for a general class of force\nfunctions Eq. (', TexCmd('ref', [BraceGroup('vnoise')]), ') - (', TexCmd('ref', [BraceGroup('vBnoise')]), ')\nand for arbitrary spatial dimension ', TexMathModeEnv('$', ['d'], []), '.\nThe outcome of this analysis, as detailed in \nSec. ', TexCmd('ref', [BraceGroup('sect4')]), ', showed\nthat MHD for this class of force functions, has\ntwo types of asymptotic behavior, depending on\n', TexMathModeEnv('$', ['d'], []), ' and the nature of the force.  In one regime, the system\nbecomes a free theory in the asymptotic or hydrodynamic limit\nwhich\nis represented by a trivial fixed point in Sec. ', TexCmd('ref', [BraceGroup('sect4')]), ' , \nand in the other regime\nthe system is a nonlinear interacting theory at\nthe largest scales, which is represented by the nontrivial fixed\npoint in Sec. ', TexCmd('ref', [BraceGroup('sect4')]), '.  \n', BraceGroup(), 'For both regimes, correlations were computed\nin Subsec. ', TexCmd('ref', [BraceGroup('sect5B')]), ' \nof the magnetic and velocity fields at large length and time\nscales and in Subsec. ', TexCmd('ref', [BraceGroup('sect5C')]), ' of the energy spectrum . \nIn addition, the viscosity coefficients in the\neffective long distance theory were computed in Subsec. ', TexCmd('ref', [BraceGroup('sect5A')]), '.\nHelical force also was treated in Sec. ', TexCmd('ref', [BraceGroup('sect6')]), '.\nUp to the one-loop\nanalysis in this paper, the fixed point structure\nwas unchanged with respect to that in Sec. ', TexCmd('ref', [BraceGroup('sect4')]), '. \nThe helicity spectrum at both\nfixed points was given in Subsec. ', TexCmd('ref', [BraceGroup('sect6A')]), '. \nIt would be interesting\nto test the RG predictions against simulations for all these quantities.\n\nAnother interesting direction examined was mixing between\nvelocity and magnetic energy at large scales.  The results\nof the one-loop analysis in Sec. ', TexCmd('ref', [BraceGroup('sect5C')]), ' indicate that in fact\nat the largest scales magnetic and velocity energy\nwill not mix.  Thus, for example, if only the velocity force was nonzero,\nthen no magnetic energy would be created at the largest scales and \nvisa-versa.  These results of course are only concerned with\nthe asymptotic large scales.  Clearly the nonlinear interactions\nin the MHD equations generally should mix velocity and magnetic\nenergy and this is seen in simulations \n(Pouquet et al. 1976; Pouquet and Patterson 1978),\nwhich suggest an approximate equipartition of energy.\nHowever, the RG analysis indicates that at increasingly\nlarger length scales this mixing diminishes.\nIt would be interesting to see if such trends also are\nseen in simulations.\n\nThe RG analysis of this paper addressed the steady state solutions\nof MHD with time translationally invariant stochastic force terms.\nAs shown in Sec. ', TexCmd('ref', [BraceGroup('sect8')]), ', \ninformation about cascade directions also can be deduced\nfrom this framework. To our knowledge, this is the first\ntime the RG has been used to predict cascade \ndirections in turbulence.  \nIn that section, we examined directions\nfor energy cascade in both hydrodynamics and MHD and helicity\ncascade in MHD.  \nIn the stability region of the trivial fixed point,\nin all cases and in any ', TexMathModeEnv('$', ['d'], []), ' the one loop\nRG analysis showed no cascade at asymptotic scales.\nOn the other hand, in the stability region of the\nnontrivial fixed point, the RG analysis predicts for the energy\nin all cases and for all ', TexMathModeEnv('$', ['d'], []), ', direct or normal cascades and\nfor helicity in MHD also a direct cascade.\n', BraceGroup(), 'For energy cascades in ', TexMathModeEnv('$', ['d=2,3'], []), ' for MHD and ', TexMathModeEnv('$', ['d=3'], []), ' for hydrodynamics,\nthe results of the RG analysis found here are consistent with general\nexpectations.  However, for energy cascade in ', TexMathModeEnv('$', ['d=2'], []), '\nhydrodynamics and helicity cascade in ', TexMathModeEnv('$', ['d=2,3'], []), ' MHD, \nsome general arguments (Kraichnan 1967; Frisch et al. 1975) \nand simulations (Lilly 1969; Frisch and Sulem 1984; Sommeria 1986;\nPouquet at al. 1976; Pouquet and Patterson 1978; Pouquet 1978)\nsuggest an inverse cascade.  There are no rigorous\nproofs in any of these cases. Nevertheless, the cases where the\nRG analysis differs from conventional\nexpectations deserves further discussion.\nBelow we identify some possible sources for the discrepancy\nand suggest ways they might be resolved. However first, let us consider\nthe random force terms.\nThe class of random force functions we consider are\nreasonably general in terms of covering a broad range of scales,\nand we do not believe the special form of the force is the main\ncause for this discrepancy. These have been taken to be power\nlaws in wavenumber, characterized by a free exponent ', TexMathModeEnv('$', ['y'], []), ' that can either be\npositive, zero or negative. This is enough to cover most cases of spatially\ncorrelated noise and white uncorrelated noise (if ', TexMathModeEnv('$', ['y=0'], []), ').\n\n\nReturning to the discrepancies, there are several\npossible reasons that come to mind for these disagreements between our\nRG analysis versus the various simulations and general\narguments. We will\nfirst list them and\nand then address each in turn.  The main possibilities are: \n(a) intrinsic limitations of perturbative RG applied to MHD; \n(b) limitations of the one-loop RG analysis which may\nbe corrected by higher loop calculations;\n(c) the RG analysis is correct and the inverse cascades\nsuggested by simulations are a metastable effect in the\nunstable region of the  nontrivial fixed point.     \n\nConcerning point (a), we remark that it has long been known and criticized\nthat since the ', BraceGroup(TexCmd('it'), ' formal'), ' ', '(bare and unrenormalized) \nperturbation \nexpansion parameter ', TexMathModeEnv('$', [TexCmd('lambda'), '_0 = 1'], []), ' in the \nNavier-Stokes equation is equal to \nunity, \nthe (primitive) perturbation series based upon it are \nof dubious utility (see, e.g. discussion in \nMcComb 1995,  and the\nreferences therein). \nAnalogous primitive perturbation series constructed for \nMHD would not escape this criticism either.\nIn response,\nwe point out that in the ', BraceGroup(TexCmd('it'), ' loop'), ' expansion carried out here, \nwe have defined and expanded our perturbation series in powers\nof the amplitude of the noise fluctuations (which could be large or small). \nThis is because the noise amplitude serves to count the \nnumber of loops in the series (represented by a graphical expansion). \nAn expansion in\n', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), ' is not the same as an expansion in loops. \nThe \nparameter ', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), "  \nis only a strict bookkeeping device, or ``flag'', \nallowing us to keep track of the\nnonlinear adjective mode-mixing terms.\nNote moreover, that\n", TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), ' is a dimensionful parameter, and it makes\nno physical sense to expand in terms of it. Meaningful perturbation\nseries must ultimately refer to dimensionless expansion\nparameters or couplings. \nThe actual perturbative expansion parameter for MHD\nis ', BraceGroup(TexCmd('it'), ' not'), ' ', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), ', but rather, ', TexMathModeEnv('$', ['g_', BraceGroup(TexCmd('pm'))], []), ', which as we have\ncalculated, is less than unity at both the fixed points. \nThus, it is even possible to have reasonably large fluctuations and\nmaintain a small expansion parameter, (see Eq. (', TexCmd('ref', [BraceGroup('dimensionless')]), ')).\nThis coupling ', TexMathModeEnv('$', ['g_', BraceGroup(TexCmd('pm'))], []), '\nis dimensionless, and provides a bona-fide expansion parameter.\nSo, we do not believe there to be \nany inherent internal inconsistency in making use of a perturbative\nloop calculation of hydrodynamics or MHD, provided we correctly recognize\nthat the true (and small) expansion parameter is not ', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), ' but\nrather Eq. (', TexCmd('ref', [BraceGroup('dimensionless')]), '). \n\nTurning to point (b), this\nhas to do with possible limitations of the one-loop analysis\nitself. \nThe number of loops\nconsidered is intimately related to the magnitude of the stochastic\nfluctuations. If this number is small, then one\nreasonably expects a low order loop expansion should\nbe able to capture the salient physics in the problem. However, if the \nfluctuations are large, one may have to push the\ncalculation to higher loops. \nOnce again however, the noise amplitude is not a dimensionless\nparameter, and what counts loops, properly speaking, is the dimensionless\nratio written in Eq. (', TexCmd('ref', [BraceGroup('dimensionless')]), "). Note that large\neffective viscosity and/or magnetic resistivity can counteract\nthe presence of large stochastic fluctuations. \nThe number of terms or graphs in the\nloop expansion grows geometrically with the number of loops, so \nample physical justification would be needed before taking the \ncalculational leap. A tempting and quite interesting,\nthough exceedingly nontrivial, proposal would be\nto try and go beyond the loop\nexpansion by using nonperturbative methods to make\npredictions of cascade directions, following \nWilson's ideas for the exact\nrenormalization group \n(Wilson and Kogut 1974). \nIn any case, neither of these\noptions have yet been pursued. \n\n", BraceGroup(), "Finally, coming to the point raised in (c), it may very well\nbe the case that \nthe RG analysis is correct in all its physical predictions\ndespite the one-loop order, and there is no actual discrepancy\nwith the numerical results. The key to the resolution is \nin recognizing that the numerical simulations are always limited\nby the finite duration times of the computer runs and the finite size of the\nlattice, whereas the RG analysis here refers always to the\nasymptotically largest spatial and temporal scales, which\nare evidently not accessible to present day computer simulations. \nSo, we\nare comparing phenomena (cascade directions) \nassociated to very different spatial and temporal\nregimes. In other words, the inverse cascade might not be\nan asymptotic phenomena, but is linked instead to \nintermediate scale physics, and this is evidently what\nthe simulations are seeing.  One possible explanation\nis that simulations are seeing a low frequency mode that\ntemporarily shifts energy to larger length scales but\neventually shifts the energy to smaller length scales.\nThe RG analysis in this paper would ignore such modes. \nLet us elaborate further on this suggestion. Both inverse\nand direct cascades are possible, but different cascade directions\nwould come to predominate at different time scales. \nThe complete dynamical evolution may occur in two\nphases: an earlier inverse cascade phase followed by\na later direct cascade phase. If true, this two-phase behavior would\nbe an example of a ``cross-over'' phenomenon, familiar from\ncritical dynamics. Of course, we do not see any\nevidence for cross-over from our\none-loop RG calculation, and only a higher-order\n(or preferably, non-perturbative) calculation could\nbegin to shed some light on this possibility\n(see, point (b) above).\nTo get a further hold on the problem, one\ncould either (1) run the simulations for ever increasing times\nand larger lattices, or (2) study the RG away from the vicinity\nof the fixed points. In the latter case, we are \n``backing away'' from the leading asymptotic limit \nand the \nterms in the equations of motion \ndenoted as ``less relevant'' in Eqs. (", TexCmd('ref', [BraceGroup('cge')]), ')  \nand (', TexCmd('ref', [BraceGroup('rse')]), ')    \nwould now have to be included in the RG analysis. \n\n\n', TexCmd('section*', [BraceGroup('Acknowledgments')]), "\nWe thank Axel Brandenburg and Kari Enqvist for helpful discussions.\nWe also thank W.D. McComb for a useful discussion after\nthe paper was completed.\nA.B. is funded by the United Kingdom Particle Physics and\nAstronomy Research Council (PPARC) and D.H. is\nsupported in part by Spain's \nNational Aerospace Technology Institute (INTA) \nand the Centro de Astrobiolog", "\\'", TexCmd('i'), ' a (CAB).\nA.B. acknowledges the kind hospitality provided him by   \nthe CAB in Madrid and D.H. acknowledges\nthe Department of Physics of the \nUniversity of Edinburgh for the hospitality provided him during\na reciprocal visit.\nTravel to and from our respective home institutions between\nMadrid and Edinburgh has been made\npossible with funds provided in part by CAB (Spain) and PPARC (U.K.).\n\n', TexCmd('appendix'), '\n', TexCmd('section', [BraceGroup('Dynamic generating functional for stochastic MHD')]), '\n', '\nThe purpose of this\nAppendix is to set up and apply a powerful and \nextremely useful dynamic functional integral \ntechnique that leads to an efficient, systematic and organized \nperturbative \nloop-expansion for the solutions of the \nfully nonlinear magnetohydrodynamic equations \nEqs. (', TexCmd('ref', [BraceGroup('Elsasser1')]), ') and (', TexCmd('ref', [BraceGroup('Elsasser2')]), '), when the\nlatter are subject\nto random forces and fluctuations. \nThe ability to cast stochastic differential equations in terms of functional\nintegrals opens the door to the calculation of many physically important quantities\nincluding the so-called effective action and effective \npotential (Hochberg et al. 1999b). \nThese\nquantities can be used to investigate the onset of pattern formation and pattern\nselection and can be used to identify symmetry breaking states of the system. In\nthis paper, we will use functional methods to deduce the Feynman rules needed\nto construct a compact graphical representation of the perturbative\nsolutions of the coupled nonlinear MHD equations. These rules permit one to identify a\ndistinguished class of diagrams, the so-called one-particle irreducible (1PI)\ngraphs.  The renormalization\nof these diagrams to a given number of loops will be used\nto derive the differential renormalization group \nequations Eq. (', TexCmd('ref', [BraceGroup('RGE1')]), '), that  govern the\nscale dependence of the parameters appearing in the MHD equations. \nAdditional details regarding the application\nof functional\nand path integral methods to stochastic differential equations can be found\nin (Martin et al. 1973; DeDominicis and Peliti 1978; Rivers 1987;\nZinn-Justin 1996; Hochberg et al. 1999b)\nand references therein. In the following, vector quantities will\ngenerally be denoted in boldface (or sometimes with an arrow) \nand matrix operators indicated by means\nof the dyad (double-arrow)\nnotation.  \n\nLet ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'), ',', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln')], []), ' denote a general solution of the coupled\nstochastic MHD equations Eqs. (', TexCmd('ref', [BraceGroup('Elsasser1')]), ') and (', TexCmd('ref', [BraceGroup('Elsasser2')]), '). \nWe pass immediately to a \nfunctional or path-integral representation for an arbitrary function ', TexMathModeEnv('$', ['F'], []), '\nof this solution-pair by means of the trivial identity\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('soln')]), '\nF(', BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'), ',', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln'), ') = ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' P')), BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' Q'))]), ' ', '\\,', ' F(', BraceGroup(TexCmd('bf'), ' Q'), ',', BraceGroup(TexCmd('bf'), ' P'), ')', '\\,', '\n', TexCmd('delta', [BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '-', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln'))]), ' ', '\\,', ' ', TexCmd('delta', [BracketGroup(BraceGroup(TexCmd('bf'), ' Q'), '-', BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'))]), ',\n'], []), '\nwhere the path integrals are taken over all\nfield configurations. The product of delta-functionals selects out  \nthe particular\nfield configurations ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' P'), '=', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln')], []), ' and \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' Q'), '=', BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln')], []), '\ncorresponding to the solutions of the MHD equations.\nThey constrain the functional integrals which otherwise freely sum over \nthe totality of all \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' Q')], []), ' and ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' P')], []), ' field configurations.     \n\nThe solutions of the MHD equations depend of course on the \nrandom noise sources, so that\n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln'), ' = ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln'), '[', TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('P'), ',', TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('Q'), ']'], []), ', and\n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'), ' = ', BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'), '[', TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('P'), ',', TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('Q'), ']'], []), '. \nThe solutions themselves can be regarded as functionals of the noise source.\nUltimately, we are only interested in the solutions of MHD averaged over the\nrandom forces and random currents. This statistical average is denoted by angular brackets\nand is given by\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('average')]), '\n', TexCmd('langle'), ' \nF(', BraceGroup(TexCmd('bf'), ' Q'), ',', BraceGroup(TexCmd('bf'), ' P'), ') ', TexCmd('rangle'), ' = ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')))]), '\\,', '\nF(', BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'), ',', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln'), ') ', BraceGroup(TexCmd('cal'), ' P'), '[', BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')), ']', ',\n'], []), '\nwhere the noise distribution functional \n', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' P')], []), ' is assumed to be \ngiven (i.e. it is a Gaussian functional for Gaussian noise) and\nis normalized to unity\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('normalized')]), '\n', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('P')), BracketGroup(BraceGroup(TexCmd('cal'), ' D'), TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('Q')), BraceGroup(TexCmd('cal'), ' P'), BracketGroup(BraceGroup(TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('P')), '\n,', BraceGroup(TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('Q')))]), ' =\n', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')))]), '\\,', ' ', BraceGroup(TexCmd('cal'), ' P'), '[', BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')), ']', ' = 1.\n'], []), '\nWe abbreviate the ', TexMathModeEnv('$', ['2d'], []), '-component noise vector field by \n', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('eta'), ' = (', TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('P'), ',', TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('Q'), ')'], []), ', where\n', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('P')], []), ' and ', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('eta'), '_', BraceGroup('Q')], []), ' \neach have ', TexMathModeEnv('$', ['d'], []), '-components in a ', TexMathModeEnv('$', ['d'], []), '-dimensional space.\nThe goal and objective of the following \nsequence of manipulations consists in choosing a particular form for ', TexMathModeEnv('$', ['F'], []), '\nand explicitly performing all the functional integrals encountered \nalong the way. The resulting functional\nthen is used to generate all the\nstatistically averaged products of solutions of the nonlinear\nMHD equations to any desired order in the expansion\nparameter ', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), '.  \nThe Feynman rules (see Fig. 1) \ncan be read off directly from this final functional.\n\n\nWe need to carry out a change of variables in Eq. (', TexCmd('ref', [BraceGroup('soln')]), '). To see how this\nworks, consider first a simple example. \nLet ', TexMathModeEnv('$', [TexCmd('vec'), ' f(', TexCmd('vec'), ' x) = (f_1(x,y),f_2(x,y))'], []), '\nbe a two-component vector-valued function of a vector variable\n', TexMathModeEnv('$', [TexCmd('vec'), ' x= (x,y)'], []), ' and suppose this has a unique root at ', TexMathModeEnv('$', [TexCmd('vec'), ' x_0'], []), ',\n', TexMathModeEnv('$', [TexCmd('vec'), ' f(', TexCmd('vec'), ' x_0) = 0.'], []), ' \nNow make use of the functional generalization of the identity\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('delta-identity1')]), '\n', TexCmd('delta'), '(', TexCmd('vec'), ' f(', TexCmd('vec'), ' x)) = ', TexCmd('delta'), '(f_1(x,y)) ', TexCmd('delta'), '(f_2(x,y))\n&=& ', TexCmd('frac', [BraceGroup(TexCmd('delta'), '(', TexCmd('vec'), ' x - ', TexCmd('vec'), ' x_0)'), BraceGroup('\n', TexCmd('det'), '|', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' f_', BraceGroup('1,2'), '(x,y)'), BraceGroup(TexCmd('partial'), '(x,y)')]), '|')]), ',\n'], []), '\nwhere\n', TexNamedEnv('eqnarray', ['\n', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' f_', BraceGroup('1,2'), '(x,y)'), BraceGroup(TexCmd('partial'), '(x,y)')]), ' ', '& = & \n( ', TexCmd('matrix', [BraceGroup(' ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' f_1(x,y)'), BraceGroup(TexCmd('partial'), ' x')]), ' ', '& ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' f_1(x,y)'), BraceGroup(TexCmd('partial'), ' y')]), TexCmd('cr'), '\n', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' f_2(x,y)'), BraceGroup(TexCmd('partial'), ' x')]), '  ', '&  ', TexCmd('frac', [BraceGroup(TexCmd('partial'), ' f_2(x,y)'), BraceGroup(TexCmd('partial'), ' y')]), ' ')]), ' ', '),\n'], []), '\nand\n', TexNamedEnv('eqnarray', ['\n', TexCmd('delta'), '(', TexCmd('vec'), ' x - ', TexCmd('vec'), ' x_0) &=& ', TexCmd('delta'), '(x - x_0) ', TexCmd('delta'), '(y - y_0), \n'], []), '\nto express the product of delta functionals in Eq. (', TexCmd('ref', [BraceGroup('soln')]), ') as\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('delta-identity2')]), '\n', TexCmd('delta', [BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '-', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('soln'))]), '\\,', ' ', TexCmd('delta', [BracketGroup(BraceGroup(TexCmd('bf'), ' Q'), '-', BraceGroup(TexCmd('bf'), ' Q'), '_', BraceGroup('soln'))]), ' ', '&=& ', BraceGroup(TexCmd('cal'), ' J'), '\n', TexCmd('delta', [BracketGroup(TexCmd('partial'), '_', BraceGroup('t'), 'P_j + ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), TexCmd('partial'), '_l\n(Q_l P_n) - ', TexCmd('gamma'), '_+ ', TexCmd('nabla'), '^2 P_j - ', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 Q_j - (', TexCmd('eta'), '_', BraceGroup('P'), ')_j')]), '\n', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '&\n', TexCmd('delta', [BracketGroup(TexCmd('partial'), '_', BraceGroup('t'), ' Q_j  + ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), TexCmd('partial'), '_l\n(P_l Q_n) - ', TexCmd('gamma'), '_', BraceGroup('+'), TexCmd('nabla'), '^2 Q_j - ', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 P_j - (', TexCmd('eta'), '_', BraceGroup('Q'), ')_j')]), '.\n'], []), '\nHere, the Jacobian functional determinant ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' J')], []), ' is the determinant of the following\n', TexMathModeEnv('$', ['2', TexCmd('times'), ' 2'], []), '-block array:\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('jacobian')]), '\n', '( ', TexCmd('matrix', [BraceGroup('\n', '(', TexCmd('partial'), '_', BraceGroup('t'), ' -', TexCmd('gamma'), '_', BraceGroup('+'), TexCmd('nabla'), '^2)', TexCmd('delta'), '_', BraceGroup('jk'), ' \n+ ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jk'), TexCmd('partial'), '_l (Q_l ) & \n-', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 ', TexCmd('delta'), '_', BraceGroup('jk'), ' + ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), TexCmd('partial'), '_k(P_n) ', TexCmd('cr'), '\n-', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 ', TexCmd('delta'), '_', BraceGroup('jk'), ' + ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), TexCmd('partial'), '_k(Q_n) &\n(', TexCmd('partial'), '_', BraceGroup('t'), ' -', TexCmd('gamma'), '_', BraceGroup('+'), TexCmd('nabla'), '^2)', TexCmd('delta'), '_', BraceGroup('jk'), ' \n+ ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jk'), TexCmd('partial'), '_l (P_l ) ')]), ' ', ')\n', TexCmd('delta'), '(', TexCmd('vec'), ' x- ', TexCmd('vec'), " x')", TexCmd('delta'), "(t - t').\n"], []), ' \nWhen the identity Eq. (', TexCmd('ref', [BraceGroup('delta-identity2')]), ') \nis substituted into Eqs. (', TexCmd('ref', [BraceGroup('soln')]), ') and (', TexCmd('ref', [BraceGroup('average')]), '), the\nstochastic MHD equations \nEqs. (', TexCmd('ref', [BraceGroup('Elsasser3')]), ') and (', TexCmd('ref', [BraceGroup('Elsasser4')]), ')\nappear explicitly under the functional integrals as\nconstraints, and we see that the stochastic dynamics is built in from the outset. \nThe next step is to replace each of delta-functionals \nappearing on the left-hand side of Eq. (', TexCmd('ref', [BraceGroup('delta-identity2')]), ') with \nits (functional) Fourier integral representation. \nThat is, for any (vector-valued) space-time field \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), '(', TexCmd('vec'), ' x, t)'], []), ',\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('Fourier-integral')]), '\n', TexCmd('delta', [BracketGroup(BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')))]), ' = ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')))]), ' ', '\\,', ' \n', TexCmd('exp'), ' ', TexCmd('Big('), 'i ', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), ' x'), '\\,', ' dt', '\\,', '\\,', '\n', BraceGroup(TexCmd('bf', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' ', TexCmd('cdot'), ' ', TexCmd('Phi')), ' ', TexCmd('Big),'), '\n'], []), '\nwhere ', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('sigma')], []), ' is the Fourier conjugate field, \nand has the same number of components\nas ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))], []), '. Also, in the above, the dot product \nindicates a sum over the repeated indices, so that\n', TexMathModeEnv('$', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'), ' ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))])), ' = \n', TexCmd('sigma'), '_j ', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), '_j'], []), ', for ', TexMathModeEnv('$', ['j=1,2,', TexCmd('cdots'), ',d'], []), '. \nReplacing each delta-functional\nby its corresponding Fourier integral introduces two conjugate field variables \ninto the stochastic average Eq. (', TexCmd('ref', [BraceGroup('average')]), '). \nSince there are two Elsasser fields, namely ', TexMathModeEnv('$', [TexCmd('bf'), ' P'], []), ' and ', TexMathModeEnv('$', [TexCmd('bf'), ' Q'], []), ',  \neach requiring a separate\nconjugate field, we distinguish each individual conjugate\nfield by a superscript: ', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('sigma'), ' = (', TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('P'), ',', TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('Q'), ')'], []), '.\n\nAt this stage what results is a multiple \nfunctional integral representation for the stochastic average of an arbitrary\nfunction ', TexMathModeEnv('$', ['F'], []), ', which depends on the ', BraceGroup(TexCmd('it'), ' exact'), ' \nsolutions of the original pair of MHD equations. That is\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('fivefold')]), '\n', TexCmd('langle'), ' \nF(', BraceGroup(TexCmd('bf'), ' Q'), ',', BraceGroup(TexCmd('bf'), ' P'), ') ', TexCmd('rangle'), ' ', '&=& ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')))]), '\\,', '\n', '[', BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' P'), ']', '\\,', ' ', '[', BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' Q'), ']', ' ', '\\,', '\n', '[', BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), '^', BraceGroup('P'), ']', '\\,', ' ', '[', BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), '^', BraceGroup('Q'), ']', '\\,', '\nF(', BraceGroup(TexCmd('bf'), ' Q'), ',', BraceGroup(TexCmd('bf'), ' P'), ') ', BraceGroup(TexCmd('cal'), ' J'), '\\,', ' ', BraceGroup(TexCmd('cal'), ' P'), '[', BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')), ']', ' ', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& ', TexCmd('exp'), ' ', TexCmd('Big('), ' i ', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), ' x'), '\\,', ' dt ', '\\,', '\\,', ' ', TexCmd('sigma'), '^', BraceGroup('P'), '_j\n', '[', TexCmd('partial'), '_', BraceGroup('t'), 'P_j \n+ ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), TexCmd('partial'), '_l\n(Q_l P_n) - ', TexCmd('gamma'), '_+ ', TexCmd('nabla'), '^2 P_j - ', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 Q_j - (', TexCmd('eta'), '_', BraceGroup('P'), ')_j', ']', '\n', TexCmd('Big)'), TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& ', TexCmd('exp'), ' ', TexCmd('Big('), ' i ', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), ' x'), '\\,', ' dt', '\\,', '\\,', ' ', TexCmd('sigma'), '^', BraceGroup('Q'), '_j\n', '[', TexCmd('partial'), '_', BraceGroup('t'), 'Q_j + ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), TexCmd('partial'), '_l\n(P_l Q_n) - ', TexCmd('gamma'), '_', BraceGroup('+'), TexCmd('nabla'), '^2 Q_j - ', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 P_j - (', TexCmd('eta'), '_', BraceGroup('Q'), ')_j', ']', '\n', TexCmd('Big).'), '\n'], []), BraceGroup(), 'Following the standard practice in both quantum and statistical field\ntheory, now \nchoose a convenient form for ', TexMathModeEnv('$', ['F'], []), '. \nIn particular, let ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), ',\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q')], []), ' denote a set of four arbitrary vector \nsource functions, one source for each of \nthe Elsasser and conjugate fields, respectively. Then let\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('F')]), '\nF = ', TexCmd('exp'), ' ', TexCmd('big(', [BraceGroup(TexCmd('bf'), ' P ', TexCmd('cdot'), ' J', BraceGroup('^P'))]), ' + ', BraceGroup(TexCmd('bf'), ' Q ', TexCmd('cdot'), ' J', BraceGroup('^Q')), ' +\n', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('P'), ' ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J'), BraceGroup('^', BraceGroup(TexCmd('sigma'), '^P'))])), ' + \n', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('Q'), ' ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J'), BraceGroup('^', BraceGroup(TexCmd('sigma'), '^Q'))])), ' ', TexCmd('big),'), '\n'], []), '\nand define the generating functional ', TexMathModeEnv('$', ['Z'], []), ' by\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('Z')]), '\nZ', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), ',\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q'), ']', ' ', TexCmd('equiv'), ' \n', TexCmd('langle'), ' ', TexCmd('exp'), ' ', TexCmd('big(', [BraceGroup(TexCmd('bf'), ' P ', TexCmd('cdot'), ' J', BraceGroup('^P'))]), ' + ', BraceGroup(TexCmd('bf'), ' Q ', TexCmd('cdot'), ' J', BraceGroup('^Q')), ' +\n', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('P'), ' ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J'), BraceGroup('^', BraceGroup(TexCmd('sigma'), '^P'))])), ' + \n', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('Q'), ' ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J'), BraceGroup('^', BraceGroup(TexCmd('sigma'), '^Q'))])), ' ', TexCmd('big)'), TexCmd('rangle'), '.\n'], []), '\nWe have suppressed the omnipresent integrations over space and time to avoid\nclutter (they can be restored at any time). \nThe source functions allow one to factor the non-linear (in this case, cubic) \ninteraction terms out\nfrom under the functional integral, where they now appear as functional derivative\n', BraceGroup(TexCmd('it'), ' operators'), ' acting on a simpler and ', BraceGroup(TexCmd('it'), ' exactly calculable'), ' generating functional. \nUsing the\nfunctional generalization of the identity\n', TexNamedEnv('equation', ['\n', TexCmd('int'), ' du ', '\\,', ' g(u) ', TexCmd('exp'), '(uJ) = g ', TexCmd('Big(\'), 'frac', BraceGroup(TexCmd('partial')), BraceGroup(TexCmd('partial'), ' J'), ' ', TexCmd('Big)'), TexCmd('int'), ' du ', '\\,', ' ', TexCmd('exp'), '(uJ),\n'], []), '\nit then follows from Eqs. (', TexCmd('ref', [BraceGroup('fivefold')]), '), (', TexCmd('ref', [BraceGroup('F')]), ') and (', TexCmd('ref', [BraceGroup('Z')]), '), that \n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('full')]), '\nZ', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), ',\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q'), ']', ' ', '&=&\n', TexCmd('exp'), ' ', TexCmd('Big('), 'i', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), ' x'), '\\,', ' dt ', '\\,', ' ', TexCmd('lambda'), '_0 \n', TexCmd('frac', [BraceGroup(TexCmd('delta')), BraceGroup(TexCmd('delta'), ' J_j^', BraceGroup(TexCmd('sigma'), '^P'), ' '), BraceGroup(TexCmd('bf'), ' P')]), '_', BraceGroup('jn'), ' ', TexCmd('partial'), '_l ', TexCmd('big('), TexCmd('frac', [BraceGroup(TexCmd('delta')), BraceGroup(TexCmd('delta'), ' J_l^', BraceGroup('Q'))]), ' ', TexCmd('frac', [BraceGroup(TexCmd('delta')), BraceGroup(TexCmd('delta'), ' J_n^', BraceGroup('P'))]), ' ', TexCmd('big)'), TexCmd('Big)'), TexCmd('nonumber'), '  \n', '&', TexCmd('times'), '& ', TexCmd('exp'), ' ', TexCmd('Big('), 'i', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), ' x'), '\\,', ' dt ', '\\,', ' ', TexCmd('lambda'), '_0 \n', TexCmd('frac', [BraceGroup(TexCmd('delta')), BraceGroup(TexCmd('delta'), ' J_j^', BraceGroup(TexCmd('sigma'), '^Q'), ' '), BraceGroup(TexCmd('bf'), ' P')]), '_', BraceGroup('jn'), ' ', TexCmd('partial'), '_l ', TexCmd('big('), TexCmd('frac', [BraceGroup(TexCmd('delta')), BraceGroup(TexCmd('delta'), ' J_l^', BraceGroup('P'))]), ' ', TexCmd('frac', [BraceGroup(TexCmd('delta')), BraceGroup(TexCmd('delta'), ' J_n^', BraceGroup('Q'))]), ' ', TexCmd('big)'), TexCmd('Big)'), '\nZ_0', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), ',\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q'), ']', ',\n'], []), '\nwhere ', TexMathModeEnv('$', ['Z_0'], []), ' is the functional ', TexMathModeEnv('$', ['Z'], []), ' evaluated at zero coupling: ', TexMathModeEnv('$', [TexCmd('lambda'), '_0 = 0'], []), '.\nThe functional derivatives have the property that, e.g., \n', TexNamedEnv('equation', ['\n', TexCmd('frac', [BraceGroup(TexCmd('delta'), ' J_k(', TexCmd('vec'), ' x, t)'), BraceGroup(TexCmd('delta'), ' J_l(', TexCmd('vec'), " x', t')")]), ' = ', TexCmd('delta'), '_', BraceGroup('kl'), '\n', TexCmd('delta'), '(', TexCmd('vec'), ' x- ', TexCmd('vec'), " x') ", TexCmd('delta'), "(t- t').\n"], []), '\n', '\nBefore continuing, special mention \nshould be made regarding the treatment of the Jacobian\nfunctional determinant ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' J')], []), ' that appears in ', TexMathModeEnv('$', ['Z'], []), '.\nThe determinant can be exponentiated by means of the identity ', TexMathModeEnv('$', [TexCmd('det'), ' M = ', TexCmd('exp'), '(tr ', TexCmd('ln'), ' M)'], []), ',\nand it can be shown that the argument of the exponential is proportional to the\nformally divergent object ', TexMathModeEnv('$', [TexCmd('delta'), '^d(0)'], []), '. This happens to be an ultraviolet or\nshort-distance divergence, and when renormalized by dimensional continuation, yields\nzero, ', TexMathModeEnv('$', [TexCmd('delta'), '^d(0) = 0'], []), ' ', '(Zinn-Justin 1996). \nThus, in this regularization\nscheme, the determinant \nrenormalizes to yield a finite\nand field independent constant (unity), and so \ncontributes nothing to the normalized correlation \nfunctions calculated from ', TexMathModeEnv('$', ['Z'], []), '. We henceforth drop\nthese determinants for the remainder of this discussion\n(by setting ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' J'), ' arrow 1'], []), '). \nIf one wants to investigate the short-distance or ultraviolet\nlimit of turbulent MHD however, then it is preferable to keep these\nJacobian determinants intact. ', BraceGroup(), 'For example, \nthis is important when calculating the ', BraceGroup(TexCmd('it'), ' effective action'), '\nand ', BraceGroup(TexCmd('it'), ' effective potential'), ' associated \nwith Eq. (', TexCmd('ref', [BraceGroup('full')]), ').\nThe retention of these determinants can be done\nwith ghost fields, as described at length in\nHochberg et al. (1999b), where a number \nof details pertaining to the calculation \nof Jacobian determinants can be found. To our knowledge, the calculation of \n', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' J')], []), ' for MHD is an open problem. \n \nUp to this stage, we have assumed a completely\ngeneral noise distribution functional ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' P')], []), '. \n', BraceGroup(), 'For the remainder of this section, and throughout this paper,\nonly Gaussian noise is considered. ', BraceGroup(), 'For\nGaussian noise, ', TexMathModeEnv('$', ['Z_0'], []), ' can be computed exactly and in closed form. \nIn fact, we consider translationally\ninvariant Gaussian noise, that is\n', TexNamedEnv('equation', [' = ', BraceGroup(TexCmd('cal'), ' N'), '\n', TexCmd('exp'), ' ', TexCmd('Big('), '-', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), ' ', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), ' x'), ' ', '\\,', ' dt \n', TexCmd('int'), ' d^d', BraceGroup(TexCmd('vec'), " x'"), '\\,', " dt' ", '\\,', ' ', TexCmd('eta'), '_i(', TexCmd('vec'), ' x, t)', '\\,', ' \n', TexCmd('Gamma'), '_', BraceGroup('ij'), '^', BraceGroup('-1'), '(', TexCmd('vec'), ' x - ', TexCmd('vec'), " x',t - t')", '\\,', '\n', TexCmd('eta'), '_j(', TexCmd('vec'), " x', t') ", TexCmd('Big),'), '   \n'], [BraceGroup(TexCmd('cal'), ' P'), BracketGroup(BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')))]), '   \nwhere ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' N')], []), ' is a normalization constant and  \n', TexMathModeEnv('$', [TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '= ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^T'], []), '\nis the \nsymmetric covariance matrix, which will be specified\nbelow. \nBy substituting this form of ', TexMathModeEnv('$', [TexCmd('cal'), ' P'], []), ' into ', TexMathModeEnv('$', ['Z_0'], []), ', \nand completing the square in the  \nconjugate field variable, which is a ', TexMathModeEnv('$', ['2d'], []), '-component vector field \n', TexMathModeEnv('$', [TexCmd('vec'), ' ', TexCmd('sigma'), ' = (', TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('P'), ', ', TexCmd('vec'), ' ', TexCmd('sigma'), '^', BraceGroup('Q'), ')'], []), ',\nexact integration can be done immediately\nover the noise\nfield', TexCmd('footnote', [BraceGroup('Gaussian functional integration is treated in any number\nof excellent texts devoted to (quantum) field theory. We recommend the\nexcellent coverage given in \n(Ramond 1981; Rivers 1987; Zinn-Justin 1996).')]), '.\n\n', BraceGroup(), 'Following this procedure,\ncompleting the square yields\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('completesquare1')]), '\n-', TexCmd('frac', [BraceGroup('1'), BraceGroup('2'), BraceGroup(TexCmd('vec'), ' ', TexCmd('eta'))]), ' ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), '\n', TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('eta'))]), ' - i ', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), ' ', TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('eta'))]), ' =\n-', TexCmd('frac', [BraceGroup('1'), BraceGroup('2'), BracketGroup(BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')), ' + i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]))]), '^T\n', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), '  ', TexCmd('cdot', [BracketGroup(BraceGroup(TexCmd('vec'), ' ', TexCmd('eta')), ' + i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ' ', TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]))]), '\n-', TexCmd('frac', [BraceGroup('1'), BraceGroup('2'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' \n', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ' ', TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ',\n'], []), '\nwhere ', TexMathModeEnv('$', ['T'], []), ' denotes transpose. Next,\nthe functional integration over the noise leads to \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('firstpass')]), '\nZ_0', '[', BraceGroup(TexCmd('bf'), ' J'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ']', ' = ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))), BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')))]), ' \n', TexCmd('exp'), ' ', TexCmd('Big(-'), TexCmd('frac', [BraceGroup('1'), BraceGroup('2'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ' ', TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' + i ', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), ' ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '^', BraceGroup('-1'), '_0 ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' + ', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), ' + ', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '^', BraceGroup(TexCmd('sigma')), ' ', TexCmd('Big),'), '\n'], []), '\nwhere we have used the fact that the noise distribution function ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' P')], []), ' \nis normalized\nto unity Eq. (', TexCmd('ref', [BraceGroup('normalized')]), '). \nWe have streamlined the notation even further by defining \ntwo-component fields for the Elsasser fields, their sources and their\nconjugate fields respectively as \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' = \n(', BraceGroup(TexCmd('bf'), ' P'), ', ', BraceGroup(TexCmd('bf'), ' Q'), ')'], []), ', ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' J'), ' = \n(', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), ')'], []), ', and ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ' = \n(', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q'), ')'], []), '.\nThe (free) inverse response function in the space and time domain is defined to be\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('inverseresponse'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '^', BraceGroup('-1'), '_0')]), '_', BraceGroup('ij'), ' =\n( ', TexCmd('matrix', [BraceGroup(TexCmd('partial'), '_', BraceGroup('t'), ' - ', TexCmd('gamma'), '_', BraceGroup('+'), TexCmd('nabla'), '^2 & -', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2 ', TexCmd('cr'), '\n               - ', TexCmd('gamma'), '_', BraceGroup('-'), TexCmd('nabla'), '^2  & ', TexCmd('partial'), '_', BraceGroup('t'), ' - ', TexCmd('gamma'), '_', BraceGroup('+'), TexCmd('nabla'), '^2 ')]), ' \n', ')', TexCmd('delta'), '_', BraceGroup('ij'), '. \n'], []), '\n', '\n', '\nIn Eq. (', TexCmd('ref', [BraceGroup('firstpass')]), ') we have a quadratic form \nin the conjugate field, so we can\nintegrate over this field exactly by completing the square as\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('completesquare2')]), ' \n-', TexCmd('frac', [BraceGroup('1'), BraceGroup('2'), BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ' ', TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma'))]), ' + i ', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), ' ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '^', BraceGroup('-1'), '_0 ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' ', '&+& ', BraceGroup(TexCmd('vec'), ' ', TexCmd('sigma')), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '^', BraceGroup(TexCmd('sigma')), ' = ', TexCmd('nonumber'), ' \n', '&-& ', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), TexCmd('big({'), TexCmd('vec'), ' ', TexCmd('sigma'), '}', ' - i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), ' ', TexCmd('cdot', [BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ' ')]), ' ', TexCmd('big)^'), 'T \n', TexCmd('cdot'), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ' ', TexCmd('cdot'), ' \n', TexCmd('big({'), TexCmd('vec'), ' ', TexCmd('sigma'), '}', ' - i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), TexCmd('cdot', [BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' \n- i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ' ')]), ' ', TexCmd('big)'), TexCmd('nonumber'), ' \n', '&-& \n', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ')^T\n', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), ' ', TexCmd('cdot'), '\n', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ').\n'], []), '\nIntegrating over the conjugate fields yields \n(up to an overall and unimportant multiplicative constant)\n', TexNamedEnv('equation', ['\nZ_0', '[', BraceGroup(TexCmd('bf'), ' J'), ',', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ']', '  ', TexCmd('propto'), ' ', TexCmd('int', [BracketGroup(BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')))]), ' \n', TexCmd('exp'), ' ', TexCmd('Big('), '- ', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ')^T ', TexCmd('cdot'), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), ' ', TexCmd('cdot'), '\n', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ')\n+ ', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), ' ', TexCmd('Big).'), '\n'], []), BraceGroup(), 'Finally, by means of the identity\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('completesquare3')]), '\n', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), ' ', '&', TexCmd('cdot'), '& ', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ')^T\n', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), ' ', TexCmd('cdot'), '\n', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'))]), ' - i ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ') =\n', TexCmd('nonumber'), ' \n', '& & (', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' - i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0 ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '^', BraceGroup(TexCmd('sigma')), ')^T\n', TexCmd('cdot'), ' ', '(', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), ' ', TexCmd('cdot'), ' \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '^', BraceGroup('-1'), ' ', TexCmd('cdot'), ' \n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0^', BraceGroup('-1'), ')', TexCmd('cdot'), '\n', '(', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' - i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0 ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '^', BraceGroup(TexCmd('sigma')), '),\n'], []), '\nwe are led to make the constant shift change-of-variable \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'), "'"), ' = ', BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ' -i', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0 ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '^', BraceGroup(TexCmd('sigma'))], []), ',\nintegrate over the remaining field ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi'), "'")], []), ', and note that\n', TexMathModeEnv('$', ['[', BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), "'", ']', ' = ', '[', BraceGroup(TexCmd('cal'), ' D'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Phi')), ']'], []), '.\nThus, up to an overall irrelevant constant prefactor, the free \n ', TexMathModeEnv('$', ['(', TexCmd('lambda'), '_0 = 0)'], []), ' generating functional is\ngiven by\n', TexNamedEnv('equation', ['\nZ_0', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), ',\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q'), ']', ' = ', TexCmd('exp'), ' ', TexCmd('Big(i', [BraceGroup(TexCmd('bf'), ' J')]), '^', BraceGroup(TexCmd('sigma')), ' ', TexCmd('cdot'), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0 ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), ' ', TexCmd('Big)'), TexCmd('exp'), ' ', TexCmd('Big('), TexCmd('frac', [BraceGroup('1'), BraceGroup('2'), BraceGroup(TexCmd('bf'), ' J')]), TexCmd('cdot', [BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0\n', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), ' ', TexCmd('cdot'), '\n', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0')]), TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), TexCmd('Big).'), '\n'], []), '\nThis can be expressed in Fourier space as\n', TexNamedEnv('eqnarray', ['\nZ_0', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup('Q'), '&,&\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^P'), ', ', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma'), '^Q'), ']', '  =\n', TexCmd('exp'), ' ', TexCmd('Big('), 'i', TexCmd('int'), ' ', TexCmd('frac', [BraceGroup('d^d', BraceGroup(TexCmd('vec'), ' k'), '\\,', ' d', TexCmd('omega')), BraceGroup('(2', TexCmd('pi'), ')^', BraceGroup('d+1'))]), ' ', '\\,', '\n', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0\n(-', TexCmd('vec'), ' k,-', TexCmd('omega'), ') ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '(-', TexCmd('vec'), ' k,-', TexCmd('omega'), ') ', TexCmd('Big)'), TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& \n', TexCmd('exp'), ' ', TexCmd('Big('), TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), ' ', TexCmd('int'), ' ', TexCmd('frac', [BraceGroup('d^d', BraceGroup(TexCmd('vec'), ' k'), '\\,', ' d', TexCmd('omega')), BraceGroup('(2', TexCmd('pi'), ')^', BraceGroup('d+1'))]), ' ', '\\,', '\n', BraceGroup(TexCmd('bf'), ' J'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0\n(', TexCmd('vec'), ' k,', TexCmd('omega'), ') ', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '(-', TexCmd('vec'), ' k,-', TexCmd('omega'), ')\n', TexCmd('cdot'), ' ', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0 (-', TexCmd('vec'), ' k,-', TexCmd('omega'), ') ', TexCmd('cdot', [BraceGroup(TexCmd('bf'), ' J')]), '(-', TexCmd('vec'), ' k,-', TexCmd('omega'), ') ', TexCmd('Big).'), '\n'], []), BraceGroup(), 'From the free generating functional, it \nis straightforward to read off the bare response and bare correlation\nfunctions (or by taking the appropriate functional derivatives of ', TexMathModeEnv('$', ['Z_0'], []), ' with\nrespect to the sources). In fact, the whole point in defining ', TexMathModeEnv('$', ['Z'], []), ' the way we\ndid back in Eq. (', TexCmd('ref', [BraceGroup('Z')]), ') was so we could compute the statistical average of products\nof fields and conjugate fields. As we see, functionally differentiating ', TexMathModeEnv('$', ['Z'], []), ' with\nrespect to any combination of sources brings down the corresponding factors of\nfields under the functional integral. Then, setting all the sources to zero after \ndifferentiating\nyields the correlation and response functions associated with this \nstochastic field theory. Let us now specify the explicit form for the\nnoise or covariance matrix as\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('covariance'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' ', TexCmd('Gamma'))]), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ')')]), '_', BraceGroup('mn'), ' = D_0(k)', '\\,', '\n', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('mn'), '(', TexCmd('vec'), ' k),\n'], []), '\nwhich is the product of a ', TexMathModeEnv('$', ['2 ', TexCmd('times'), ' 2'], []), '-block noise matrix ', TexMathModeEnv('$', ['D_0(k)'], []), ' times\nthe transverse projection operator. The presence of this projector\nenforces the solenoidal character of the noise, and appears as well\nin the original noise correlation functions above \nEqs. (', TexCmd('ref', [BraceGroup('vnoise')]), ') and (', TexCmd('ref', [BraceGroup('Bnoise')]), ').\nThe noise matrix can be used to model an arbitrary spatially correlated\nnoise. To handle both spatial and temporal correlations in the noise, one would\nwrite ', TexMathModeEnv('$', ['D_0(k,', TexCmd('omega'), ')'], []), '. In this paper, we consider spatially correlated noise\nas specified \nby ', TexMathModeEnv('$', ['2 ', TexCmd('times'), ' 2'], []), '-block ', TexMathModeEnv('$', ['D_0(k)'], []), ' given below in Eq. (', TexCmd('ref', [BraceGroup('correlation')]), ').\nThe effects of random helicity (both kinetic and magnetic) can be studied by\nan appropriate and simple extension of Eq. (', TexCmd('ref', [BraceGroup('covariance')]), '); this is introduced\nand analyzed in the \nmain text. \n\nThus, the bare response function in Fourier space is computed from\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('correlationz')]), '\n', TexCmd('langle'), ' ', TexCmd('sigma'), '_m(', TexCmd('vec'), ' p_1,', TexCmd('omega'), '_1)', TexCmd('Phi'), '_n(', TexCmd('vec'), ' p_2,', TexCmd('omega'), '_2)', TexCmd('rangle'), '_0 &=& \n', TexCmd('frac', [BraceGroup('(2', TexCmd('pi'), ')^', BraceGroup('2(d+1)')), BraceGroup('Z_0', '[', '0', ']')]), ' ', TexCmd('frac', [BraceGroup(TexCmd('delta'), '^2'), BraceGroup(TexCmd('delta'), ' J^', BraceGroup(TexCmd('sigma')), '_m(', TexCmd('vec'), ' p_1,', TexCmd('omega'), '_1)\n', TexCmd('delta'), ' J_n(', TexCmd('vec'), ' p_2,', TexCmd('omega'), '_2)')]), '|_', BraceGroup('J^', BraceGroup(TexCmd('sigma')), '=J=0'), ' Z_0', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ',', BraceGroup(TexCmd('bf'), ' J'), ']', TexCmd('nonumber'), ' \n', '&=& i(2', TexCmd('pi'), ')^', BraceGroup('d+1'), TexCmd('delta'), '^d(', TexCmd('vec'), ' p_1 + ', TexCmd('vec'), ' p_2)', TexCmd('delta'), '(', TexCmd('omega'), '_1 + ', TexCmd('omega'), '_2)\n', '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0(', TexCmd('vec'), ' p_2,', TexCmd('omega'), '_2)', ']', '_', BraceGroup('mn'), '.\n'], []), '\nThe bare response function obtained by calculating the inverse\nof Eq. (', TexCmd('ref', [BraceGroup('inverseresponse')]), ') is\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('bareresponse'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')')]), '_', BraceGroup('mn'), ' ', '&=&\n', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ') ', TexCmd('delta'), '_', BraceGroup('mn'), ',', TexCmd('nonumber', [BraceGroup(TexCmd('cal'), ' G')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ') &=& ', TexCmd('frac', [BraceGroup('1'), BraceGroup('[', '-i', TexCmd('omega'), ' + k^2(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')', ']', '[', '-i', TexCmd('omega'), ' + k^2(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')', ']')]), '\n', '( ', TexCmd('matrix', [BraceGroup(' -i', TexCmd('omega'), ' + ', TexCmd('gamma'), '_', BraceGroup('+'), 'k^2 & - ', TexCmd('gamma'), '_', BraceGroup('-'), 'k^2 ', TexCmd('cr'), '\n               - ', TexCmd('gamma'), '_', BraceGroup('-'), 'k^2 &   -i', TexCmd('omega'), ' + ', TexCmd('gamma'), '_', BraceGroup('+'), 'k^2 ')]), ' ', '),\n'], []), '\nwhere the convention is that momentum and frequency are taken to flow from \nthe conjugate field\nto the physical field (otherwise, one must flip the sign of ', TexMathModeEnv('$', [TexCmd('omega')], []), ').\nNext, the bare correlation function (in Fourier space) is computed from \n', TexNamedEnv('eqnarray', ['\n', TexCmd('langle'), ' ', TexCmd('Phi'), '_m(', TexCmd('vec'), ' p_1,', TexCmd('omega'), '_1)', TexCmd('Phi'), '_n(', TexCmd('vec'), ' p_2,', TexCmd('omega'), '_2)', TexCmd('rangle'), '_0 &=& \n', TexCmd('frac', [BraceGroup('(2', TexCmd('pi'), ')^', BraceGroup('2(d+1)')), BraceGroup('Z_0', '[', '0', ']')]), ' ', TexCmd('frac', [BraceGroup(TexCmd('delta'), '^2'), BraceGroup(TexCmd('delta'), ' J_m(', TexCmd('vec'), ' p_1,', TexCmd('omega'), '_1)\n', TexCmd('delta'), ' J_n(', TexCmd('vec'), ' p_2,', TexCmd('omega'), '_2)')]), '|_', BraceGroup('J^', BraceGroup(TexCmd('sigma')), '=J=0'), ' Z_0', '[', BraceGroup(TexCmd('bf'), ' J'), '^', BraceGroup(TexCmd('sigma')), ',', BraceGroup(TexCmd('bf'), ' J'), ']', ' ,', TexCmd('nonumber'), ' \n', '&=& (2', TexCmd('pi'), ')^', BraceGroup('d+1'), TexCmd('delta'), '^d(', TexCmd('vec'), ' p_1 + ', TexCmd('vec'), ' p_2)', TexCmd('delta'), '(', TexCmd('omega'), '_1 + ', TexCmd('omega'), '_2)\n', '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' C')]), '_0(', TexCmd('vec'), ' p_2,', TexCmd('omega'), '_2)', ']', '_', BraceGroup('mn'), ',\n'], []), '\n', '\nwhere,\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('correlation'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' C')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')')]), '_', BraceGroup('mn'), ' ', '&=&\n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ') ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('mn'), '(', TexCmd('vec'), ' k),', TexCmd('nonumber', [BraceGroup(TexCmd('cal'), ' C')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ') &=& \n', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')D_0(k)', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' k,-', TexCmd('omega'), '), ', TexCmd('nonumber'), '\n', '\nD_0(k) &=& (', TexCmd('matrix', [BraceGroup('2k^', BraceGroup('-y'), ' A & 2k^', BraceGroup('-y'), ' B ', TexCmd('cr'), '\n               2k^', BraceGroup('-y'), ' B & 2k^', BraceGroup('-y'), ' A ')]), '). \n'], []), '\n', '\n', '\nTo complete the specification of the full\ngenerating functional ', TexMathModeEnv('$', ['Z'], []), ', we must also express the non-linear interaction vertex in\nFourier space. This is obtained by Fourier-transforming the cubic terms\nappearing in Eq. (', TexCmd('ref', [BraceGroup('fivefold')]), ') or in Eq. (', TexCmd('ref', [BraceGroup('full')]), '). Note there are ', BraceGroup(TexCmd('it'), ' two'), ' kinds of\ncubic interaction, one corresponding to the ', TexMathModeEnv('$', [TexCmd('sigma'), '^', BraceGroup('P'), '-', BraceGroup(TexCmd('bf'), ' P'), '-', BraceGroup(TexCmd('bf'), ' Q')], []), '\nvertex and the other corresponding to the ', TexMathModeEnv('$', [TexCmd('sigma'), '^', BraceGroup('Q'), '-', BraceGroup(TexCmd('bf'), ' P'), '-', BraceGroup(TexCmd('bf'), ' Q')], []), '\nvertex (the distinguishing feature is the conjugate field). Of course, there\nis only one (bare) cubic coupling parameter ', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), ' ', '(which we set to unity\nat the end of the calculation). This means corrections only\nto one of the two vertices\nneeds to be considered, even though ', BraceGroup(TexCmd('it'), ' both'), ' \nbare vertices are needed in building\nup loop-expansions. Taking the convention that all momentum and \nfrequency flow inward to\nthe vertex, the bare vertex corresponding to the cubic interaction\n', TexMathModeEnv('$', [TexCmd('sigma'), '_j^', BraceGroup('P'), '(', TexCmd('vec'), ' k_1,', TexCmd('omega'), '_1)-\nP_n(', TexCmd('vec'), ' k_2,', TexCmd('omega'), '_2) -Q_l(', TexCmd('vec'), ' k_3,', TexCmd('omega'), '_3)'], []), ' as well\nas \nthe other cubic interaction\n', TexMathModeEnv('$', [TexCmd('sigma'), '_j^', BraceGroup('Q'), '(', TexCmd('vec'), ' k_1,', TexCmd('omega'), '_1)-Q_n(', TexCmd('vec'), ' k_2,', TexCmd('omega'), '_2) -P_l(', TexCmd('vec'), ' k_3,', TexCmd('omega'), '_3)'], []), '\nis\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('barevertex')]), '\ni', '\\,', ' ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,jn'), '(', TexCmd('vec'), ' k_1) = \ni ', '\\,', TexCmd('lambda'), '_0 ', '\\,', ' ', '(', TexCmd('vec'), ' k_1)_l ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jn'), '(', TexCmd('vec'), ' k_1) = i', '\\,', ' ', TexCmd('lambda'), '_0 ', '\\,', ' ', '(', TexCmd('vec'), ' k_1)_l\n', TexCmd('Big(\'), 'delta', '_', BraceGroup('jn'), ' - ', TexCmd('frac', [BraceGroup('(', TexCmd('vec'), ' k_1)_j(', TexCmd('vec'), ' k_1)_n'), BraceGroup('(', TexCmd('vec'), ' k_1)^2')]), ' ', TexCmd('Big).'), ' \n'], []), '\nThe vertex is independent of the external frequencies.\nAlso, here it has been written so that it\ndepends only on the momentum carried by the conjugate field(s), since momentum\nconservation implies ', TexMathModeEnv('$', [TexCmd('vec'), ' k_1 + ', TexCmd('vec'), ' k_2 + ', TexCmd('vec'), ' k_3 = 0'], []), '.\n\nIn summary, in this Appendix the stochastic PDEs of MHD \nEqs. (', TexCmd('ref', [BraceGroup('Elsasser3')]), ') and (', TexCmd('ref', [BraceGroup('Elsasser4')]), ')\nhave been expressed in terms of a functional integral\nrepresentation.  ', BraceGroup(), 'From this\nrepresentation, the bare response function Eq. (', TexCmd('ref', [BraceGroup('bareresponse')]), '), \ncorrelation functions Eq. (', TexCmd('ref', [BraceGroup('correlation')]), '),\nand the bare non-linear interaction vertex Eq. (', TexCmd('ref', [BraceGroup('barevertex')]), ')\nhave been identified and calculated.  As explained earlier,\nthis set of functions \nconstitute the basic elements (see Fig. 1) upon which\na diagrammatic expansion (see Fig. 2) of the generating \nfunctional can be systematically developed. \n\n\n\n', TexCmd('section', [BraceGroup('Response function renormalization')]), '\n', '\nThis Appendix carries out the one-loop renormalization \nof the response function.\nTranscribing the diagrammatic equation \nin Fig. (2a) for the one-loop corrected \nresponse function into the corresponding analytic expression by means\nof the Feynman rules in Fig. 1 yields\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('response1'), BracketGroup(TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ')')]), '_', BraceGroup('mn'), ' =\n', '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')', ']', '_', BraceGroup('mn'), ' - \n', BraceGroup(TexCmd('cal'), ' S'), ' ', TexCmd('lambda'), '^2_0\n', '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')', ']', '_', BraceGroup('m ', TexCmd('bar'), ' m'), '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,', TexCmd('bar'), ' n s'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('s,', TexCmd('bar'), ' n l'), '(', TexCmd('vec'), ' k)', ']', '\nI_', BraceGroup(TexCmd('bar'), ' m ls'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ')\n', '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' G')]), '_0(', TexCmd('vec'), ' k,', TexCmd('omega'), ')', ']', '_', BraceGroup(TexCmd('bar'), ' n n'), ',\n'], []), '\nwhere the symmetry factor for the one loop diagram ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' S'), ' = 4'], []), ' and\nthe loop-integral is given by\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('resloop')]), '\nI_', BraceGroup(TexCmd('bar'), ' m ls'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') =\n', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), ' ', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' ', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), '\\,', '\n', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup(TexCmd('bar'), ' m ,lr'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('r,l ', TexCmd('bar'), ' m'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q)', ']', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q, ', TexCmd('omega'), ' - ', TexCmd('Omega'), ') ', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ') ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('rs'), '\n', '(', TexCmd('vec'), ' q).\n'], []), ' \nThe precise meaning of the momentum-shell integration will be given below. \nUsing the factorization of the \nresponse function into the product of a block matrix\ntimes a Kronecker delta as given in Eqs. (', TexCmd('ref', [BraceGroup('bareresponse')]), ') and\n(', TexCmd('ref', [BraceGroup('response1')]), '), the following equation\nis obtained for the one-loop correction\nto the ', BraceGroup(TexCmd('it'), ' inverse'), ' response function,  \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('response2'), BraceGroup(TexCmd('cal'), ' G')]), '^', BraceGroup('-1'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ')', TexCmd('delta'), '_', BraceGroup('mn'), ' = \n', BraceGroup(TexCmd('cal'), ' G'), '_0^', BraceGroup('-1'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ')', TexCmd('delta'), '_', BraceGroup('mn'), ' + ', BraceGroup(TexCmd('cal'), ' S'), TexCmd('lambda'), '_0^2\n', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l, n s'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('s, n l'), '(', TexCmd('vec'), ' k)', ']', '\nI_', BraceGroup(' m ls'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') + O(', TexCmd('lambda'), '_0^4),\n'], []), '\nwhere the renormalized ', TexMathModeEnv('$', ['2 ', TexCmd('times'), ' 2'], []), ' inverse block is parametrized as \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('response3'), BraceGroup(TexCmd('cal'), ' G')]), '^', BraceGroup('-1'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') = \n( ', TexCmd('matrix', [BraceGroup(' -i', TexCmd('omega'), ' + ', TexCmd('gamma'), '_', BraceGroup('+'), '^', BraceGroup('<'), 'k^2 &  ', TexCmd('gamma'), '_', BraceGroup('-'), '^', BraceGroup('<'), 'k^2 ', TexCmd('cr'), '\n ', TexCmd('gamma'), '_', BraceGroup('-'), '^', BraceGroup('<'), 'k^2 & -i', TexCmd('omega'), ' + ', TexCmd('gamma'), '_', BraceGroup('+'), '^', BraceGroup('<'), 'k^2')]), ' ', ').\n'], []), '\nThis structure follows from Fourier transforming Eq. (', TexCmd('ref', [BraceGroup('inverseresponse')]), ').\nThe infrared (i.e., large-distance and long-time) \nrenormalizability of the response function implies that the \nrenormalized or corrected response function Eq. (', TexCmd('ref', [BraceGroup('response3')]), ') must have the\nidentical mathematical structure as its bare \ncounterpart ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' G'), '_0^', BraceGroup('-1')], []), '. It therefore has the same\nfrequency and momentum dependence as the bare response function and contains\nthe same number of parameters. Here \n', TexMathModeEnv('$', [TexCmd('gamma'), '^', BraceGroup('<'), '_', BraceGroup(TexCmd('pm')), ' = ', TexCmd('gamma'), '^', BraceGroup('<'), '_', BraceGroup(TexCmd('pm')), '(A, B, ', TexCmd('gamma'), '_', BraceGroup('+'), ',', TexCmd('gamma'), '_', BraceGroup('-'), ',', TexCmd('lambda'), '_0)'], []), ' \nare computable functions of the indicated\nbare parameters which will be determined below.\n\nThus the renormalization of the response function yields the individual\nrenormalization of the two independent viscosities ', TexMathModeEnv('$', [TexCmd('gamma'), '_', BraceGroup('+'), ',', TexCmd('gamma'), '_', BraceGroup('-')], []), '.\nThe renormalization of the two viscosities \nrequires some amount of careful calculation.\nWe will go through the major points step by step.\nTo proceed we need to explicitly \ncarry out the internal frequency integration that\nappears in the loop\nintegral Eq. (', TexCmd('ref', [BraceGroup('resloop')]), '). \n', BraceGroup(), 'From Eq. (', TexCmd('ref', [BraceGroup('response3')]), '), we see that the \nviscosities ', TexMathModeEnv('$', [TexCmd('gamma'), '_', BraceGroup(TexCmd('pm'))], []), ' are the coefficients of the\n', TexMathModeEnv('$', ['k^2'], []), ' terms, so we can \nset the external frequency ', TexMathModeEnv('$', [TexCmd('omega')], []), ' to zero from the outset. \nThis frequency integral is straightforwardly calculated \nby means of the calculus of residues. We close the\ncontour in the lower half plane, where there are two simple poles, and obtain\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('freq')]), '\n', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' ', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), '\\,', '\n', BraceGroup(TexCmd('cal'), ' G'), '_0(&', TexCmd('vec'), ' k& - ', TexCmd('vec'), ' q, - ', TexCmd('Omega'), ') ', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ') = ', TexCmd('nonumber'), ' \n', '& & ', TexCmd('frac', [BraceGroup('D_0(q)'), BraceGroup('8q^4')]), '\\,', '\n', TexCmd('Big(1'), ' + ', TexCmd('frac', [BraceGroup(TexCmd('vec'), ' q ', TexCmd('cdot'), ' ', TexCmd('vec'), ' k'), BraceGroup('q^2')]), ' + O(k^2)', TexCmd('Big)'), '\\{', '  ', TexCmd('frac', [BraceGroup('1'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1&-1', TexCmd('cr'), '   \n        -1&1')]), ' ')]), ' +\n', TexCmd('frac', [BraceGroup('1'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1& 1', TexCmd('cr'), '   \n         1&1')]), ' ')]), ' ', '\\}', ', ', TexCmd('nonumber'), ' \n', '&=&\n', TexCmd('frac', [BraceGroup('1'), BraceGroup('4')]), 'q^', BraceGroup('-y-4'), TexCmd('Big(1'), ' + ', TexCmd('frac', [BraceGroup(TexCmd('vec'), ' q ', TexCmd('cdot'), ' ', TexCmd('vec'), ' k'), BraceGroup('q^2')]), ' + O(k^2)', TexCmd('Big)'), '\\{', '  ', TexCmd('frac', [BraceGroup('A-B'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1&-1', TexCmd('cr'), '   \n        -1&1')]), ' ')]), ' +\n', TexCmd('frac', [BraceGroup('A+B'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1& 1', TexCmd('cr'), '   \n         1&1')]), ' ')]), ' ', '\\}', '. \n'], []), '\nThe result displayed in the first line holds for all \nspatially correlated Gaussian noise ', TexMathModeEnv('$', ['D_0(q)'], []), '. We should point out this\nwas evaluated assuming a positive viscosity, ', TexMathModeEnv('$', [TexCmd('nu'), ' > 0'], []), ', \nand a positive resistivity, ', TexMathModeEnv('$', [TexCmd('nu'), '_B > 0'], []), '. A change in sign will change the\nlocation of the poles and correspondingly modify the frequency integration.  \nThe second line results from substituting \nthe particular form for the noise spectrum used\nin this paper, Eq. (', TexCmd('ref', [BraceGroup('correlation')]), ').\nIf one wants to treat\nnoise with temporal correlations, i.e., noise \nspectra of the form ', TexMathModeEnv('$', ['D_0(q,', TexCmd('Omega'), ')'], []), ', then the frequency integral\nmust be evaluated in a case-by-case fashion, and will generally involve both \npoles and branch cuts. \n\nSubstituting this result back into Eq. (', TexCmd('ref', [BraceGroup('resloop')]), '),\nwe turn next to the remaining and final integration over the internal loop momentum.\n', BraceGroup(), 'From Eq. (', TexCmd('ref', [BraceGroup('response3')]), ') the renormalization of the parameters ', TexMathModeEnv('$', [TexCmd('gamma'), '_', BraceGroup(TexCmd('pm'))], []), ' requires\nthat we expand the one-loop contribution up to second order in the external momentum.\nThe projection operator in Eq. (', TexCmd('ref', [BraceGroup('response2')]), ') is linear in ', TexMathModeEnv('$', [TexCmd('vec'), ' k'], []), ', so\nthe loop integral only need be expanded to first order in external momentum.\nIt is important to note that this integral depends on the\nexternal momentum not only via the integrand but also through its\ndomain of integration.\nThis is because, when integrating over the momentum shell, we must\nensure that\nall combinations of internal and external momenta appearing in \nEq. (', TexCmd('ref', [BraceGroup('resloop')]), ')\nremain within the band or shell of momenta to be integrated over. \nIn the case of the present integral, this means we must integrate over the\n', BraceGroup(TexCmd('it'), ' intersection'), ' of \nthe domains ', TexMathModeEnv('$', [TexCmd('Lambda'), '/s ', TexCmd('leq'), ' |', TexCmd('vec'), ' q| ', TexCmd('leq'), ' ', TexCmd('Lambda')], []), ' and\n', TexMathModeEnv('$', [TexCmd('Lambda'), '/s ', TexCmd('leq'), ' |', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q| ', TexCmd('leq'), ' ', TexCmd('Lambda')], []), ', where ', TexMathModeEnv('$', ['s > 1'], []), ' is a measure\nof the fraction of modes to be eliminated in the coarse-graining.  \nTo first order in ', TexMathModeEnv('$', [TexCmd('vec'), ' k'], []), ', the\nsecond inequality can be written as ', TexMathModeEnv('$', [TexCmd('Lambda'), '/s + k', TexCmd('cos'), ' ', TexCmd('theta'), ' < q < \n', TexCmd('Lambda'), ' + k', TexCmd('cos'), ' ', TexCmd('theta')], []), ', where ', TexMathModeEnv('$', [TexCmd('theta')], []), ' is the angle between ', TexMathModeEnv('$', [TexCmd('vec'), ' k'], []), ' and\n', TexMathModeEnv('$', [TexCmd('vec'), ' q'], []), '. There are two cases to consider: when ', TexMathModeEnv('$', [TexCmd('cos'), ' ', TexCmd('theta'), ' > 0'], []), ', the\nintersection of the two intervals can be expressed as the difference\n', TexMathModeEnv('$', ['[', TexCmd('Lambda'), '/s,', TexCmd('Lambda'), ']', ' - ', '[', TexCmd('Lambda'), '/s,', TexCmd('Lambda'), '/s +  k', TexCmd('cos'), ' ', TexCmd('theta'), ']'], []), ', and\nwhen ', TexMathModeEnv('$', [TexCmd('cos'), ' ', TexCmd('theta'), ' < 0'], []), ', the intersection can be written as\n', TexMathModeEnv('$', ['[', TexCmd('Lambda'), '/s,', TexCmd('Lambda'), ']', ' - ', '[', TexCmd('Lambda'), ' + k', TexCmd('cos'), ' ', TexCmd('theta'), ' , ', TexCmd('Lambda'), ']'], []), '.\nThis means the complete momentum-shell integration \nvalid up to ', TexMathModeEnv('$', ['O(k^2)'], []), ' can be written as\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('momshell')]), '\n', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), ' = ', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', '\n', TexCmd('Big(\'), 'int', '_', BraceGroup(TexCmd('Lambda'), '/s'), '^', BraceGroup(TexCmd('Lambda')), ' - ', TexCmd('int'), '_', BraceGroup(TexCmd('Lambda'), '/s'), '^', BraceGroup(TexCmd('Lambda'), '/s + k ', TexCmd('cos'), ' ', TexCmd('theta')), '\n- ', TexCmd('int'), '_', BraceGroup(TexCmd('Lambda'), ' + k ', TexCmd('cos'), ' ', TexCmd('theta')), '^', BraceGroup(TexCmd('Lambda')), ' ', TexCmd('Big)'), TexCmd('frac', [BraceGroup('dq', '\\,', ' q^', BraceGroup('d-1')), BraceGroup('(2', TexCmd('pi'), ')^d')]), ' + O(k^2).\n'], []), BraceGroup(), 'Furthermore, note it is convenient \nto carry out the integrations over the momentum modulus before\nworking out the angular integrations over the element of solid angle ', TexMathModeEnv('$', ['d', TexCmd('Omega'), '_d'], []), '. \n\n', BraceGroup(), 'From Eqs. (', TexCmd('ref', [BraceGroup('freq')]), ') and (', TexCmd('ref', [BraceGroup('resloop')]), '), the remaining integration\nto be carried out after the frequency integration is performed is\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('bigI')]), '\nI &=&\n', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d'), BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m ,lr'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('r,l m'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q)'), BraceGroup(TexCmd('bf'), ' P')]), '_', BraceGroup('rs'), '(', TexCmd('vec'), ' q) ', '\\,', 'q^', BraceGroup('-y-4'), ' ', TexCmd('Big(1'), ' + ', TexCmd('frac', [BraceGroup(TexCmd('vec'), ' k ', TexCmd('cdot'), ' ', TexCmd('vec'), ' q'), BraceGroup('q^2')]), ' + O(k^2)', TexCmd('Big),'), '\n ', '&=& I_1 + I_2 + I_3,\n'], []), '\nwhere we break the full integral ', TexMathModeEnv('$', ['I'], []), '  down into somewhat smaller and\nmore manageable pieces as\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('piece1')]), '\nI_1 &=& ', TexCmd('int'), '^', BraceGroup('>'), ' \n', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' q^', BraceGroup('-y-4'), TexCmd('Big(-'), 'q_m ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ls'), '(', TexCmd('vec'), ' q) ', TexCmd('Big)'), '+ O(k^2),\n', TexCmd('label', [BraceGroup('piece2')]), '\nI_2 &=& ', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' q^', BraceGroup('-y-4'), ' \n', TexCmd('Big('), '-q_m ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ls'), '(', TexCmd('vec'), ' q) ', TexCmd('Big)'), TexCmd('frac', [BraceGroup(TexCmd('vec'), ' k ', TexCmd('cdot'), ' ', TexCmd('vec'), ' q'), BraceGroup('q^2')]), '\n+ O(k^2), \n', TexCmd('label', [BraceGroup('piece3')]), '\nI_3 &=& ', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' q^', BraceGroup('-y-4'), TexCmd('Big('), 'k_m ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ls'), '(', TexCmd('vec'), ' q)\n-(k_s - ', BraceGroup(TexCmd('vec'), ' k'), TexCmd('cdot', [BraceGroup(TexCmd('vec'), ' q')]), '\\,', TexCmd('frac', [BraceGroup('q_s'), BraceGroup('q^2')]), ')', TexCmd('frac', [BraceGroup('q_m q_l'), BraceGroup('q^2')]), ' + k_r\n', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('lm'), '(', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('rs'), '(', TexCmd('vec'), ' q) ', TexCmd('Big)'), '+ O(k^2).\n'], []), '\nThe following projection operator product expansions proved \nto be useful in arriving at these expressions:\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('projectexpand'), BraceGroup(TexCmd('bf'), ' P')]), '_', BraceGroup('a,bc'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('dc'), '(', TexCmd('vec'), ' q) &=& \n(k_a - q_a)', TexCmd('Big('), TexCmd('delta'), '_', BraceGroup('bd'), ' - ', TexCmd('frac', [BraceGroup('q_b q_d'), BraceGroup('q^2')]), ' ', TexCmd('Big)'), '-\n', TexCmd('frac', [BraceGroup('q_a q_b'), BraceGroup('q^2')]), ' ', TexCmd('Big('), 'k_d - ', TexCmd('frac', [BraceGroup(TexCmd('vec'), ' q ', TexCmd('cdot'), ' ', TexCmd('vec'), ' k', '\\,', ' q_d'), BraceGroup('q^2')]), TexCmd('Big)'), '\n+ O(k^2), ', TexCmd('nonumber', [BraceGroup(TexCmd('bf'), ' P')]), '_', BraceGroup('a,bc'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ad'), '(', TexCmd('vec'), ' q) &=& k_a', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('bc'), '(\n', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ad'), '(', TexCmd('vec'), ' q) + O(k^2).\n'], []), '\nThe integrand of ', TexMathModeEnv('$', ['I_1'], []), ' is independent of ', TexMathModeEnv('$', ['k'], []), ' and the contribution from\nthe interval ', TexMathModeEnv('$', ['[', TexCmd('Lambda'), '/s, ', TexCmd('Lambda'), ']'], []), ' vanishes upon angular averaging. Only the latter\ntwo contributions in Eq. (', TexCmd('ref', [BraceGroup('momshell')]), ') will contribute to the angular\naveraging and we find that\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('I1')]), '\nI_1 = ', '[', TexCmd('big(\'), 'frac', BraceGroup(TexCmd('Lambda')), BraceGroup('s'), TexCmd('big)^', [BraceGroup('d-y-4')]), ' - ', TexCmd('Lambda'), '^', BraceGroup('d-y-4'), ']', '\n', '\\{', ' ', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), TexCmd('frac', [BraceGroup('S_d'), BraceGroup('d(2', TexCmd('pi'), ')^d')]), ' k_m ', TexCmd('delta'), '_', BraceGroup('ls'), '\n- ', TexCmd('frac', [BraceGroup('1'), BraceGroup('2')]), TexCmd('frac', [BraceGroup('S_d'), BraceGroup('d(d + 2)(2', TexCmd('pi'), ')^d')]), '(k_m ', TexCmd('delta'), '_', BraceGroup('ls'), ' + k_l ', TexCmd('delta'), '_', BraceGroup('ms'), '\n+ k_s ', TexCmd('delta'), '_', BraceGroup('ml'), ' ', ') ', '\\}', ',\n'], []), '\nwhere ', TexMathModeEnv('$', ['S_d'], []), ' is defined in Eq. (', TexCmd('ref', [BraceGroup('sphere')]), ').\nThe integrand in ', TexMathModeEnv('$', ['I_2'], []), ' is already linear in ', TexMathModeEnv('$', ['k'], []), ', so it suffices to work out the\ncontribution from the interval ', TexMathModeEnv('$', ['[', TexCmd('Lambda'), '/s, ', TexCmd('Lambda'), ']'], []), '. This yields \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('I2')]), '\nI_2 = ', TexCmd('frac', [BraceGroup('2'), BraceGroup('(d-y-4)')]), ' I_1.\n'], []), '\nLastly, the integrand in ', TexMathModeEnv('$', ['I_3'], []), ' is also linear in ', TexMathModeEnv('$', ['k'], []), '. Integrating over\n', TexMathModeEnv('$', ['[', TexCmd('Lambda'), '/s,', TexCmd('Lambda'), ']'], []), ' and averaging over the angles yields\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('I3')]), '\nI_3 = ', TexCmd('frac', [BraceGroup('[', TexCmd('Lambda'), '^', BraceGroup('d-y-4'), ' - (', TexCmd('frac', [BraceGroup(TexCmd('Lambda')), BraceGroup('s')]), ')^', BraceGroup('d-y-4'), ']'), BraceGroup('(d-y-4)')]), '\n', TexCmd('Big('), TexCmd('frac', [BraceGroup('(d-1)S_d'), BraceGroup('d(2', TexCmd('pi'), ')^d')]), ' k_m ', TexCmd('delta'), '_', BraceGroup('ls'), '\n', '&+& ', TexCmd('frac', [BraceGroup('(d-3)S_d'), BraceGroup('d(2', TexCmd('pi'), ')^d')]), ' k_s ', TexCmd('delta'), '_', BraceGroup('lm'), '  ', TexCmd('nonumber'), ' \n', '&+&  ', TexCmd('frac', [BraceGroup('2 S_d'), BraceGroup('d(d + 2)(2', TexCmd('pi'), ')^d')]), '(k_m ', TexCmd('delta'), '_', BraceGroup('ls'), ' + k_l ', TexCmd('delta'), '_', BraceGroup('ms'), '\n+ k_s ', TexCmd('delta'), '_', BraceGroup('ml'), ' ', ') ', TexCmd('Big).'), '\n'], []), '\nVarious identities needed for the angular integrations are collected in\nEq. (', TexCmd('ref', [BraceGroup('sphere')]), ').\nThis completes the calculation of the one-loop integral. Combining all the\nresults from Eqs. (', TexCmd('ref', [BraceGroup('bigI')]), '), (', TexCmd('ref', [BraceGroup('piece1')]), '),\n(', TexCmd('ref', [BraceGroup('piece2')]), '), (', TexCmd('ref', [BraceGroup('piece3')]), '),\n(', TexCmd('ref', [BraceGroup('I1')]), ') ,(', TexCmd('ref', [BraceGroup('I2')]), '), and (', TexCmd('ref', [BraceGroup('I3')]), '), we obtain \nthe one-loop matrix equation\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('matrix'), BraceGroup(TexCmd('cal'), ' G')]), '^', BraceGroup('-1'), '(', TexCmd('vec'), ' k, 0)', TexCmd('delta'), '_', BraceGroup('mn'), ' = \n', BraceGroup(TexCmd('cal'), ' G'), '_0^', BraceGroup('-1'), '(', TexCmd('vec'), ' k, 0)', TexCmd('delta'), '_', BraceGroup('mn'), ' ', '& + & ', BraceGroup(TexCmd('cal'), ' S'), TexCmd('frac', [BraceGroup(TexCmd('lambda'), '_0^2'), BraceGroup('4')]), '\n', TexCmd('frac', [BraceGroup('(d^2-y-4)S_d'), BraceGroup('d(d + 2)(d-y-4)(2', TexCmd('pi'), ')^d'), BracketGroup(TexCmd('Lambda'), '^', BraceGroup('d-y-4'), ' - ', TexCmd('big('), TexCmd('frac', [BraceGroup(TexCmd('Lambda')), BraceGroup('s')]), ' ', TexCmd('big)^', [BraceGroup('d-y-4')]))]), ' ', TexCmd('nonumber'), ' \n', '& & ', '\\{', '  ', TexCmd('frac', [BraceGroup('A-B'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1&-1', TexCmd('cr'), '   \n        -1&1')]), ' ')]), ' +\n', TexCmd('frac', [BraceGroup('A+B'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1& 1', TexCmd('cr'), '   \n         1&1')]), ' ')]), ' ', '\\}', TexCmd('times'), ' k^2 ', '\\,', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('mn'), '(', TexCmd('vec'), ' k).\n'], []), '\n', '\nWe can project out individual equations for each of the two viscosities by\nmultiplying Eq. (', TexCmd('ref', [BraceGroup('matrix')]), ') through by ', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ml'), '(', TexCmd('vec'), ' k)'], []), ' and using the\nidempotency of this projection operator, \n', TexMathModeEnv('$', [BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('mn'), '(', TexCmd('vec'), ' k)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('ml'), '(', TexCmd('vec'), ' k) \n= ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('nl'), '(', TexCmd('vec'), ' k)'], []), '.\nThus we find that each viscosity renormalizes as\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('elements')]), '\n', TexCmd('gamma'), '^', BraceGroup('<'), '_', BraceGroup('+'), ' ', '&=& ', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', BraceGroup(TexCmd('cal'), ' S'), TexCmd('frac', [BraceGroup(TexCmd('lambda'), '_0^2'), BraceGroup('4'), BracketGroup(TexCmd('Lambda'), '^', BraceGroup('d-y-4'), ' - (', TexCmd('frac', [BraceGroup(TexCmd('Lambda')), BraceGroup('s')]), ')^', BraceGroup('d-y-4'))]), '\n', TexCmd('frac', [BraceGroup('(d^2-y-4)S_d'), BraceGroup('d(d+2)(d-y-4)(2', TexCmd('pi'), ')^d')]), ' ', '\\{', ' ', TexCmd('frac', [BraceGroup('(A-B)'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2')]), '\n+ ', TexCmd('frac', [BraceGroup('(A+B)'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2')]), ' ', '\\}', ', \n', TexCmd('label', [BraceGroup('elements2')]), '\n', TexCmd('gamma'), '^', BraceGroup('<'), '_', BraceGroup('-'), ' ', '&=& ', TexCmd('gamma'), '_', BraceGroup('-'), ' + ', BraceGroup(TexCmd('cal'), ' S'), TexCmd('frac', [BraceGroup(TexCmd('lambda'), '_0^2'), BraceGroup('4'), BracketGroup(TexCmd('Lambda'), '^', BraceGroup('d-y-4'), ' - (', TexCmd('frac', [BraceGroup(TexCmd('Lambda')), BraceGroup('s')]), ')^', BraceGroup('d-y-4'))]), '\n', TexCmd('frac', [BraceGroup('(d^2-y-4)S_d'), BraceGroup('d(d+2)(d-y-4)(2', TexCmd('pi'), ')^d')]), ' ', '\\{', ' ', TexCmd('frac', [BraceGroup('-(A-B)'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2')]), '\n+ ', TexCmd('frac', [BraceGroup('(A+B)'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^2')]), ' ', '\\}', '.\n'], []), '\nIndividual equations for the sum ', TexMathModeEnv('$', ['(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')'], []), ' \nand difference ', TexMathModeEnv('$', ['(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')'], []), ' can be easily obtained by taking the\nsum and difference, respectively,  of\nEqs. (', TexCmd('ref', [BraceGroup('elements')]), ') and (', TexCmd('ref', [BraceGroup('elements2')]), '). This\nyields the individual renormalizations of the fluid viscosity ', TexMathModeEnv('$', [TexCmd('nu')], []), ' and magnetic\nresistivity ', TexMathModeEnv('$', [TexCmd('nu'), '_B'], []), '. \n\n', TexCmd('section', [BraceGroup('Noise spectrum renormalization')]), BraceGroup(), 'From the diagrammatic representation of the one-loop correction\nto the noise spectral function in Fig. (2b),\n(the noise spectral function is obtained by amputating the external\nlegs from the correlation function) \nwhich is a ', TexMathModeEnv('$', ['2 ', TexCmd('times'), ' 2'], []), ' block matrix,\nwe obtain the following expression for the one-loop noise spectrum in \nterms of the bare response,\ncorrelation and vertex functions, \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('noisespec1')]), '\nD(k)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('rs'), '(', TexCmd('vec'), ' k) = D_0(k)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('rs'), '(', TexCmd('vec'), ' k) +\n', BraceGroup(TexCmd('cal'), ' S'), ' ', TexCmd('lambda'), '_0^2\n', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,rn'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('n,rl'), '(', TexCmd('vec'), ' k)', ']', ' I_', BraceGroup('lm,nj'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ')\n', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,sj'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('j,sm'), '(', TexCmd('vec'), ' k)', ']', ',\n'], []), ' \nwhere the symmetry factor in this case is ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' S'), ' = 2'], []), ' and \nthe associated one-loop integral is given by\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('noise2')]), '\nI_', BraceGroup('lm,nj'), '(', TexCmd('vec'), ' k,', TexCmd('omega'), ') &=& ', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', '\n', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' ', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', '\n', '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' C')]), '_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q,', TexCmd('omega'), ' - ', TexCmd('Omega'), ')', ']', '_', BraceGroup('lm'), '[', TexCmd('stackrel', [BraceGroup('rightarrow'), BraceGroup(TexCmd('bf'), ' C')]), '_0(', TexCmd('vec'), ' q, ', TexCmd('Omega'), ')', ']', '_', BraceGroup('nj'), TexCmd('nonumber'), ' \n', '&=& ', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' \n', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' \n', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('lm'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('nj'), '(', TexCmd('vec'), ' q)\n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q,', TexCmd('omega'), ' - ', TexCmd('Omega'), ') \n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), '),', TexCmd('nonumber', [BraceGroup(TexCmd('cal'), ' C')]), '_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q,', TexCmd('omega'), ' - ', TexCmd('Omega'), ') \n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ') &=&\n', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q,', TexCmd('omega'), ' - ', TexCmd('Omega'), ')D_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q)\n', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k, ', TexCmd('Omega'), ' - ', TexCmd('omega'), ')', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& ', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')D_0(q)', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ').\n'], []), ' \nThe infrared renormalizability of the noise spectral function implies that the \nrenormalized spectral function must have the\nidentical mathematical structure as its bare counterpart ', TexMathModeEnv('$', ['D_0(k)'], []), ' in \nEq. (', TexCmd('ref', [BraceGroup('correlation')]), ').\nIt must therefore have the same\nfrequency and momentum dependence as the bare noise spectral function and contain\nthe same number of parameters,\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('noise1')]), '\nD(k) = (', TexCmd('matrix', [BraceGroup('2k^', BraceGroup('-y'), ' A^', BraceGroup('<'), ' ', '& 2k^', BraceGroup('-y'), ' B^', BraceGroup('<'), ' ', TexCmd('cr'), '\n               2k^', BraceGroup('-y'), ' B^', BraceGroup('<'), ' ', '& 2k^', BraceGroup('-y'), ' A^', BraceGroup('<'), ' ')]), ').\n'], []), '\nHere ', TexMathModeEnv('$', ['A^', BraceGroup('<'), ' = A^', BraceGroup('<'), '(A,B,', TexCmd('gamma'), '_', BraceGroup('+'), ', ', TexCmd('gamma'), '_', BraceGroup('-'), ',', TexCmd('lambda'), '_0)'], []), ' and \n', TexMathModeEnv('$', ['B^', BraceGroup('<'), ' = B^', BraceGroup('<'), '(A,B,', TexCmd('gamma'), '_', BraceGroup('+'), ', ', TexCmd('gamma'), '_', BraceGroup('-'), ',', TexCmd('lambda'), '_0)'], []), ' are calculable in terms of the bare\nparameters and will be determined below.\n \nWe are interested in evaluating this loop integral in the\nhydrodynamic limit (i.e., for small ', TexMathModeEnv('$', ['k'], []), ' and small ', TexMathModeEnv('$', [TexCmd('omega')], []), '). \nHowever, there is already an\noverall  \nquadratic factor\nof ', TexMathModeEnv('$', ['k^2'], []), ' multiplying the loop integral arising \nfrom the product of individual projection operator factors\nappearing in Eq. (', TexCmd('ref', [BraceGroup('noisespec1')]), '). \nAs can be seen from Taylor expanding about ', TexMathModeEnv('$', ['k = 0'], []), ', \nthe loop integral itself can only contribute\na constant plus positive ', BraceGroup(TexCmd('it'), ' integer'), ' powers of external momentum ', TexMathModeEnv('$', [TexCmd('vec'), ' k'], []), ' in the\nhydrodynamic limit. Thus, the complete one-loop \ncorrection in the long-wavelength regime is a power series in \n', TexMathModeEnv('$', ['k'], []), ', and it starts off at quadratic order. ', BraceGroup(), 'For the type\nof noise of interest to us, we now show that this one loop correction\nis ', BraceGroup(TexCmd('it'), ' irrelevant'), ' in the hydrodynamic regime. \nIn fact, by setting ', TexMathModeEnv('$', [TexCmd('vec'), ' k'], []), ' and ', TexMathModeEnv('$', [TexCmd('omega')], []), ' to zero \ninside the loop-integral Eq. (', TexCmd('ref', [BraceGroup('noise2')]), '), it gives\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('noise3')]), '\nI_', BraceGroup('lm,nj'), '(0,0) &=& ', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' \n', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' \n', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('lm'), '(- ', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('nj'), '(', TexCmd('vec'), ' q)\n', BraceGroup(TexCmd('cal'), ' C'), '_0(- ', TexCmd('vec'), ' q,- ', TexCmd('Omega'), ') \n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', TexCmd('nonumber'), ' \n', '&=& ', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('lm'), '(-', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('nj'), '(', TexCmd('vec'), ' q)\n', TexCmd('int'), '_', BraceGroup(TexCmd('Lambda'), '/s'), '^', BraceGroup(TexCmd('Lambda')), TexCmd('frac', [BraceGroup('q^', BraceGroup('d-1'), 'dq'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' \n', TexCmd('int'), '_', BraceGroup('-', TexCmd('infty')), '^', BraceGroup(TexCmd('infty')), ' ', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), '\\,', '\\,', ' \n', BraceGroup(TexCmd('cal'), ' C'), '_0(- ', TexCmd('vec'), ' q,- ', TexCmd('Omega'), ') \n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', TexCmd('nonumber'), ' \n', '&=& \n', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('lm'), '(-', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('nj'), '(', TexCmd('vec'), ' q)', '\\,', '\n', TexCmd('int'), '_', BraceGroup(TexCmd('Lambda'), '/s'), '^', BraceGroup(TexCmd('Lambda')), ' ', TexCmd('frac', [BraceGroup('q^', BraceGroup('d-1'), 'dq'), BraceGroup('(2', TexCmd('pi'), ')^d'), BraceGroup(TexCmd('cal'), ' M')]), '(q).\n'], []), '\nHere\n', TexNamedEnv('equation', ['(q) =  \n(', TexCmd('matrix', [BraceGroup('M_1(q) & M_2(q) ', TexCmd('cr'), '\n               M_2(q) & M_1(q) ')]), '),\n'], [BraceGroup(TexCmd('cal'), ' M')]), '\nis the ', TexMathModeEnv('$', ['2 ', TexCmd('times'), ' 2'], []), ' \nblock-matrix function of the ', BraceGroup(TexCmd('it'), ' modulus'), '  ', TexMathModeEnv('$', ['q = |', TexCmd('vec'), ' q|'], []), ',\nwhich results\nfrom integrating the product of the bare\ncorrelation functions in Eq. (', TexCmd('ref', [BraceGroup('noise2')]), ') \nover the internal loop frequency. This can be\nstraightforwardly calculated by means of residues (there are four simple\npoles in both the upper and lower half-planes, respectively), \nbut we need not do so\nfor the purposes of the present discussion. \nNote that the integration over the sphere factors out from the modulus and\nfrequency integrations. This is because the product of projection operators\ndepends only on angles, while the product of the correlation block-matrices\ndepends only on frequency and momentum modulus. \nIntegrating\nthe product of the projection operators that appear in Eq. (', TexCmd('ref', [BraceGroup('noise3')]), ') \nover the unit sphere using the identities in\nEq. (', TexCmd('ref', [BraceGroup('sphere')]), ') yields the result\n', TexNamedEnv('equation', ['\n', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', ' ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('lm'), '(-', TexCmd('vec'), ' q)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('nj'), '(', TexCmd('vec'), ' q) =\n', TexCmd('frac', [BraceGroup('S_d'), BraceGroup('d(d + 2)')]), ' ', TexCmd('Big('), '(d^2-3)', TexCmd('delta'), '_', BraceGroup('lm'), TexCmd('delta'), '_', BraceGroup('nj'), ' \n+ ', '[', ' ', TexCmd('delta'), '_', BraceGroup('ln'), TexCmd('delta'), '_', BraceGroup('mj'), ' + ', TexCmd('delta'), '_', BraceGroup('lj'), TexCmd('delta'), '_', BraceGroup('nm'), ']', ' ', TexCmd('Big).'), '\n'], []), '\nAfter using the properties of the projection operators\nto further simplify the final expression, it leads to \n', TexNamedEnv('eqnarray', [' I_', BraceGroup('lm,nj'), '(0,0)\n', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,sj'), '(', TexCmd('vec'), ' k) &+& ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('j,sm'), '(', TexCmd('vec'), ' k)', ']', ' = ', TexCmd('nonumber'), ' \n', '& & 2k^2 ', TexCmd('times', [BraceGroup(TexCmd('bf'), ' P')]), '_', BraceGroup('rs'), '(', TexCmd('vec'), ' k) ', TexCmd('Big(\'), 'frac', BraceGroup('S_d(d^2-2)'), BraceGroup('d(d+2)'), TexCmd('Big)'), TexCmd('int'), '_', BraceGroup(TexCmd('Lambda'), '/s'), '^', BraceGroup(TexCmd('Lambda')), ' ', TexCmd('frac', [BraceGroup('q^', BraceGroup('d-1'), 'dq'), BraceGroup('(2', TexCmd('pi'), ')^d'), BraceGroup(TexCmd('cal'), ' M')]), '(q). \n'], [BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,rn'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('n,rl'), '(', TexCmd('vec'), ' k)')]), '\nThe one-loop correction is of order ', TexMathModeEnv('$', ['O(k^2)'], []), '\nand is proportional to the same projector as the bare noise spectrum.\nInserting the above line\ninto Eq. (', TexCmd('ref', [BraceGroup('noisespec1')]), ') gives\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('Dfinal')]), ' \nD(k) = D_0(k) +\n', BraceGroup(TexCmd('cal'), ' S'), ' ', TexCmd('lambda'), '_0^2 ', '\\,', '\n2k^2 ', TexCmd('times'), '  ', TexCmd('Big(\'), 'frac', BraceGroup('S_d(d^2-2)'), BraceGroup('d(d+2)(2', TexCmd('pi'), ')^d'), TexCmd('Big)'), TexCmd('int'), '_', BraceGroup(TexCmd('Lambda'), '/s'), '^', BraceGroup(TexCmd('Lambda')), '  q^', BraceGroup('d-1'), ' ', '\\,', 'dq ', BraceGroup(TexCmd('cal'), ' M'), '(q) + O(k^3). \n'], []), '\nReferring to the form of the \nnoise spectrum matrix in Eq. (', TexCmd('ref', [BraceGroup('correlation')]), '), \nwe see that the one-loop correction\nto the noise spectrum is ', BraceGroup(TexCmd('it'), ' irrelevant'), ' in the long-wavelength limit\nprovided ', TexMathModeEnv('$', ['y > -2'], []), ' ', '(The case ', TexMathModeEnv('$', ['y = -2'], []), ' is akin to \nModel A of Forster, Nelson and \nStephen 1977). The Taylor expansion of ', TexMathModeEnv('$', ['I_', BraceGroup('lm,nj'), '(', TexCmd('vec'), ' k,0)'], []), ' \nabout ', TexMathModeEnv('$', [TexCmd('vec'), ' k = 0'], []), ' ', '(taking into account contributions from the domain\nof integration as well, see discussion surrounding Eq. (', TexCmd('ref', [BraceGroup('momshell')]), ') ) \nwill just\nintroduce positive powers of the external momentum.   \nThus we conclude that at one-loop as ', TexMathModeEnv('$', ['k arrow 0'], []), ' and for ', TexMathModeEnv('$', ['y > -2'], []), '\n', TexNamedEnv('eqnarray', ['\nD(k) &=& D_0(k)  ', TexCmd('nonumber'), ' \n', TexCmd('label', [BraceGroup('Anoise')]), '\n', TexCmd('Rightarrow'), ' A^', BraceGroup('<'), ' ', '&=& A,  \n', TexCmd('label', [BraceGroup('Bnoise'), BraceGroup(TexCmd('rm'), ' and')]), '\\,', '\\,', ' B^', BraceGroup('<'), ' ', '&=& B.\n'], []), '\n', '\n', '\nNote that for noise spectra having ', TexMathModeEnv('$', ['y < -2'], []), ', the one-loop correction will\ninduce relevant operators in the hydrodynamic limit. ', BraceGroup(), 'For example, if ', TexMathModeEnv('$', ['y = -3'], []), ',\nthe one-loop correction goes as ', TexMathModeEnv('$', ['O(k^2)'], []), ' and in fact ', BraceGroup(TexCmd('it'), ' dominates'), ' over the \nthe\ninitial bare spectrum in the infrared. \nTo be able to renormalize consistently \nin these other situations requires adding the appropriate\ndominant relevant operators to the noise spectrum.   \n', BraceGroup(), 'For the case ', TexMathModeEnv('$', ['y = -2'], []), ', one needs only complete the calculation sketched\nin Eq. (', TexCmd('ref', [BraceGroup('noise3')]), ') and insert this into Eq. (', TexCmd('ref', [BraceGroup('Dfinal')]), '). In this case, one would\nfind that both ', TexMathModeEnv('$', ['A'], []), ' and ', TexMathModeEnv('$', ['B'], []), ' receive nonzero corrections in the hydrodynamic limit. \n\n', TexCmd('section', [BraceGroup('Vertex renormalization')]), '\n', '\nThe diagrammatic expansion for the one-loop correction to the vertex\nfunction, or coupling constant, is depicted\nin Fig. (2c). As can be seen from this figure, there\nare three distinct one-loop diagrams \ncontributing to the correction.\nMomentum and frequency conservation implies that the vertex function\ncan depend at most on two independent external momenta and two\nindependent external frequencies. With the momentum and frequency\nflow assignment taken as shown in Fig. (2c),\nwhere momentum and frequency enter \nvia the conjugate field and exit via the two physical fields,\nthe equation for the one-loop vertex correction is \n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('vertexloop')]), '\n', TexCmd('lambda'), '^', BraceGroup('<'), BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,nm'), '(', TexCmd('vec'), ' k) = ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,nm'), '(', TexCmd('vec'), ' k)\n- ', BraceGroup(TexCmd('cal'), ' S'), ' ', TexCmd('lambda'), '_0^3 ', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('j,nt'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('t,nj'), '(', TexCmd('vec'), ' k)', ']', '\nI_', BraceGroup('lmjt'), '(', TexCmd('vec'), ' k,', TexCmd('vec'), ' k_2,', TexCmd('vec'), ' k - ', TexCmd('vec'), ' k_2; ', TexCmd('omega'), ',', TexCmd('omega'), '_2,', TexCmd('omega'), ' - ', TexCmd('omega'), '_2),\n'], []), '\nwhere the diagrammatic symmetry factor is ', TexMathModeEnv('$', [BraceGroup(TexCmd('cal'), ' S'), ' = 4'], []), '. Here\n', TexMathModeEnv('$', [TexCmd('lambda'), '^', BraceGroup('<'), ' = ', TexCmd('lambda'), '^', BraceGroup('<'), '(A,B,', TexCmd('gamma'), '_', BraceGroup('+'), ',', TexCmd('gamma'), '_', BraceGroup('-'), ',', TexCmd('lambda'), '_0)'], []), ' \nis the renormalized\ncoupling parameter, which in principle \ncan depend on all the bare parameters appearing\nin the equations of motion.\nThe loop-integral representing the sum\nof the three types of (amputated) triangle graphs can be written as\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('vertex1')]), '\nI_', BraceGroup('lmjt'), '&(&', TexCmd('vec'), ' k,', TexCmd('vec'), ' k_2 , ', TexCmd('vec'), ' k - ', TexCmd('vec'), ' k_2 ; ', TexCmd('omega'), ',', TexCmd('omega'), '_2,', TexCmd('omega'), ' - ', TexCmd('omega'), '_2) = \n', TexCmd('nonumber'), ' \n', '&', BraceGroup(), '& ', BraceGroup(TexCmd('rm'), ' tr'), ' ', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('d^d ', TexCmd('vec'), ' q'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' ', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' \n', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', ' ', '\\{', '\n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jk'), '(', TexCmd('vec'), ' q)\n', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('k,rl'), '(', TexCmd('vec'), ' k_2 - ', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,rk'), '(', TexCmd('vec'), ' k_2 - ', TexCmd('vec'), ' q)', ']', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k_2, ', TexCmd('Omega'), '- ', TexCmd('omega'), '_2)', TexCmd('delta'), '_', BraceGroup('rs'), ' . ', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& ', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('s,pm'), '(', TexCmd('vec'), ' k- ', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,ps'), '(', TexCmd('vec'), ' k- ', TexCmd('vec'), ' q)', ']', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k, ', TexCmd('Omega'), '- ', TexCmd('omega'), ')', TexCmd('delta'), '_', BraceGroup('tp'), TexCmd('nonumber'), ' \n', '&+& ', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', TexCmd('delta'), '_', BraceGroup('jk'), '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,kr'), '(', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('r,kl'), '(', TexCmd('vec'), ' q)', ']', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k_2, ', TexCmd('Omega'), ' - ', TexCmd('omega'), '_2)', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('rs'), '(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k_2)', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& ', '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('s,pm'), '(', TexCmd('vec'), ' k- ', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,ps'), '(', TexCmd('vec'), ' k- ', TexCmd('vec'), ' q)', ']', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k, ', TexCmd('Omega'), ' - ', TexCmd('omega'), ')', TexCmd('delta'), '_', BraceGroup('tp'), TexCmd('nonumber'), ' \n', '&+& ', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', TexCmd('delta'), '_', BraceGroup('jk'), '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,kr'), '(', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('r,kl'), '(', TexCmd('vec'), ' q)', ']', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' k_2 - ', TexCmd('vec'), ' q, ', TexCmd('omega'), '_2- ', TexCmd('Omega'), ')', TexCmd('delta'), '_', BraceGroup('rs'), '[', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('p,sm'), '(', TexCmd('vec'), ' q- ', TexCmd('vec'), ' k_2) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,sp'), '(', TexCmd('vec'), ' q - ', TexCmd('vec'), ' k_2)', ']', ' ', TexCmd('nonumber'), ' \n', '&', TexCmd('times'), '& . ', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q, ', TexCmd('omega'), ' - ', TexCmd('Omega'), ')\n', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('tp'), '(', TexCmd('vec'), ' k - ', TexCmd('vec'), ' q) ', '\\}', ',\n'], []), '\nwhich follows from translating the diagrams into their associated\nmathematical expressions using the basic elements derived above for the\nbare response Eq. (', TexCmd('ref', [BraceGroup('bareresponse')]), '), \nbare correlation Eq. (', TexCmd('ref', [BraceGroup('correlation')]), ') and bare vertex functions \nEq. (', TexCmd('ref', [BraceGroup('barevertex')]), '). \nThe trace (tr)\nis taken over the\nproduct of the ', TexMathModeEnv('$', ['2 ', TexCmd('times'), ' 2'], []), ' block matrices. \nWe are interested in evaluating this integral in the\nhydrodynamic limit (i.e., for small ', TexMathModeEnv('$', ['k'], []), ' and small ', TexMathModeEnv('$', [TexCmd('omega')], []), '). As there is already a factor\nlinear in ', TexMathModeEnv('$', [TexCmd('vec'), ' k'], []), ' multiplying the loop integral, \nand the bare vertex is itself linear in momentum, \nwe can immediately take the\nlimit ', TexMathModeEnv('$', [TexCmd('vec'), ' k = ', TexCmd('vec'), ' k_2 arrow 0'], []), ' and\n', TexMathModeEnv('$', [TexCmd('omega'), ' = ', TexCmd('omega'), '_2 arrow 0'], []), ' ', BraceGroup(TexCmd('it'), ' inside'), ' \nthe loop integral right from the outset and focus attention on ', TexMathModeEnv('$', ['I_', BraceGroup('lmjt'), '(0,0,0;0,0,0)'], []), '. \nThis\nresults in a tremendous simplification. The properties of the projection operators\nallow one to further reduce products such as\n', TexNamedEnv('equation', ['_', BraceGroup('tp'), '(', TexCmd('vec'), ' q) = q_l q_m ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jt'), '(', TexCmd('vec'), ' q) = q^2 ', BraceGroup(TexCmd('hat'), ' n'), '_l ', BraceGroup(TexCmd('hat'), ' n'), '_m \n', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jt'), '(', TexCmd('vec'), ' q),\n'], [BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,jr'), '(', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('r,jl'), '(', TexCmd('vec'), ' q)'), BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('p,rm'), '(', TexCmd('vec'), ' q) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,rp'), '(', TexCmd('vec'), ' q)'), BraceGroup(TexCmd('bf'), ' P')]), '\nand likewise for the other products that one encounters in Eq. (', TexCmd('ref', [BraceGroup('vertex1')]), ').\n\n \nThe angular\nintegrations immediately can be computed by using\n', TexNamedEnv('equation', ['\n', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', ' ', BraceGroup(TexCmd('hat'), ' n'), '_l ', BraceGroup(TexCmd('hat'), ' n'), '_m \n', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('jt'), '(', TexCmd('vec'), ' q) = \n', TexCmd('frac', [BraceGroup('S_d'), BraceGroup('d(d + 2)')]), TexCmd('Big('), '(d+1) ', TexCmd('delta'), '_', BraceGroup('jt'), TexCmd('delta'), '_', BraceGroup('lm'), ' - ', '[', TexCmd('delta'), '_', BraceGroup('lj'), TexCmd('delta'), '_', BraceGroup('mt'), '\n+ ', TexCmd('delta'), '_', BraceGroup('lt'), TexCmd('delta'), '_', BraceGroup('jm'), ']', ' ', TexCmd('Big),'), '\n'], []), '\nwith the result that\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('vertex2')]), '\n', TexCmd('lambda'), '^', BraceGroup('<'), BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,nm'), '(', TexCmd('vec'), ' k) &=& ', TexCmd('lambda'), '_0 ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,nm'), '(', TexCmd('vec'), ' k)\n+ ', TexCmd('lambda'), '_0^3 ', TexCmd('big(\'), 'frac', BraceGroup('-2 S_d'), BraceGroup('d(d + 2)'), TexCmd('big)', [BracketGroup(BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('l,nm'), '(', TexCmd('vec'), ' k) + ', BraceGroup(TexCmd('bf'), ' P'), '_', BraceGroup('m,nl'), '(', TexCmd('vec'), ' k)')]), ' ', TexCmd('times'), ' ', TexCmd('nonumber'), '  \n', '&', BraceGroup(TexCmd('rm'), ' tr'), '&\n', TexCmd('int'), '^', BraceGroup('>'), ' ', TexCmd('frac', [BraceGroup('q^', BraceGroup('d+1'), ' dq'), BraceGroup('(2', TexCmd('pi'), ')^d')]), '\\,', ' ', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' \n', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', ' ', '\\{', ' \n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')  \n- ', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')\n', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ') . ', TexCmd('nonumber'), ' \n', '&+& . ', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' C'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')\n', '\\}', '.\n'], []), '\n', '\nThe frequency integral can be performed by the method of residues. The integrand has\nboth simple and double poles in the complex frequency plane; the \nintegration contours can be closed in either\nthe upper or lower half-plane. \nThe first and third factors appearing under the frequency\nintegral have simple poles in the upper and lower half-plane, respectively. \nThese\nseparate contributions can be neatly combined to yield\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('combine')]), '\n', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' \n', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', ' ', '( \n', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')  \n&+& ', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' C'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')\n) ', TexCmd('nonumber'), '  \n', '&=& ', TexCmd('frac', [BraceGroup('D_0(q)'), BraceGroup('8q^6')]), ' ', '\\{', '\n', TexCmd('frac', [BraceGroup('1'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^3'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1 & -1', TexCmd('cr'), ' \n        -1 & 1')]), ' ')]), ' \n+ ', TexCmd('frac', [BraceGroup('1'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^3'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1&1', TexCmd('cr'), ' \n         1&1')]), ' ')]), ' \n', '\\}', '.\n'], []), '\nOn the other hand,\nthe middle factor has double poles in both the upper and lower\nhalf-planes and its contribution to the frequency integral turns out\nto yield\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('middle')]), '\n', TexCmd('int'), '^', BraceGroup(TexCmd('infty')), '_', BraceGroup('-', TexCmd('infty')), ' \n', TexCmd('frac', [BraceGroup('d', TexCmd('Omega')), BraceGroup('2', TexCmd('pi'))]), ' ', '\\,', '\\,', ' ', BraceGroup(TexCmd('cal'), ' G'), '_0(-', TexCmd('vec'), ' q,-', TexCmd('Omega'), ')', BraceGroup(TexCmd('cal'), ' C'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')\n', BraceGroup(TexCmd('cal'), ' G'), '_0(', TexCmd('vec'), ' q,', TexCmd('Omega'), ')  \n= ', TexCmd('frac', [BraceGroup('D_0(q)'), BraceGroup('8q^6')]), ' ', '\\{', '\n', TexCmd('frac', [BraceGroup('1'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' - ', TexCmd('gamma'), '_', BraceGroup('-'), ')^3'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1 & -1', TexCmd('cr'), ' \n        -1 & 1')]), ' ')]), ' \n+ ', TexCmd('frac', [BraceGroup('1'), BraceGroup('(', TexCmd('gamma'), '_', BraceGroup('+'), ' + ', TexCmd('gamma'), '_', BraceGroup('-'), ')^3'), BracketGroup(' ', TexCmd('matrix', [BraceGroup('1&1', TexCmd('cr'), ' \n         1&1')]), ' ')]), ' \n', '\\}', '.\n'], []), '\nSubtracting Eq. (', TexCmd('ref', [BraceGroup('middle')]), ') from Eq. (', TexCmd('ref', [BraceGroup('combine')]), ') \nas per Eq. (', TexCmd('ref', [BraceGroup('vertex2')]), ') yields a null result for the\nfrequency integral that holds \nfor all spatially correlated Gaussian noise ', TexMathModeEnv('$', ['D_0(q)'], []), '. Thus the vertex\ncoupling parameter does not renormalize in the long-wavelength limit and we\nhave that\n', TexNamedEnv('equation', [TexCmd('label', [BraceGroup('vertex4')]), '\n', TexCmd('lambda'), '^', BraceGroup('<'), ' = ', TexCmd('lambda'), '_0.\n'], []), '\n', '\nThis non-renormalization of the nonlinear coupling parameter holds also for\nthe Navier-Stokes equation driven by arbitrary spatially correlated Gaussian\nnoise and is ascribed to the \nGalilean invariance of the stochastic NS \nequation (Forster et al. 1977). The importance\nof Galilean invariance for the Burgers equation (and the KPZ) equation is\nfurther addressed in Medina et al. (1989).\nWe suspect that the non-renormalization of the nonlinearity holds to all\norders in the loop expansion for stochastic MHD. \nTo establish this one could investigate the\nrenormalization of the vertex coupling via suitable Ward identities, as was \ndone for the case of the KPZ equation (Frey and Tauber 1994). \nWe leave that problem for a separate\ndiscussion elsewhere.  \nTemporally correlated noise\nbreaks the Galilean invariance and can (\nand usually does) lead to non-trivial renormalization\nof ', TexMathModeEnv('$', [TexCmd('lambda'), '_0'], []), '.  \n\n\n', TexCmd('section', [BraceGroup('Integrating over the d-sphere')]), '\n', '\nThe various angular integrations and angular averages\nthat are needed in the renormalization group calculations are collected here. \nThe area\nelement of the unit sphere in ', TexMathModeEnv('$', ['d'], []), '-dimensions is \n', TexNamedEnv('equation', ['\nd', TexCmd('Omega'), '_d = d', TexCmd('phi'), ' ', '\\,', ' ', TexCmd('sin'), ' ', TexCmd('theta'), '_1 d', TexCmd('theta'), '_1 ', '\\,', ' ', TexCmd('sin'), '^2 ', TexCmd('theta'), '_2 d', TexCmd('theta'), '_2 ', '\\,', '\n', TexCmd('cdots'), ' ', TexCmd('sin'), '^', BraceGroup('(d-2)'), ' ', TexCmd('theta'), '_', BraceGroup('d-2'), ' d', TexCmd('theta'), '_', BraceGroup('d-2'), ',\n'], []), '\nwhere ', TexMathModeEnv('$', ['0 ', TexCmd('leq'), ' ', TexCmd('phi'), ' < 2', TexCmd('pi')], []), ' and ', TexMathModeEnv('$', ['0 ', TexCmd('leq'), ' ', TexCmd('theta'), '_j < ', TexCmd('pi')], []), ', for ', TexMathModeEnv('$', ['j = 1,2, ', TexCmd('cdots'), ' ', '(d - 2)'], []), '.\nLet ', TexMathModeEnv('$', ['S_d'], []), ' represent the area of the unit ', TexMathModeEnv('$', ['d'], []), '-sphere, ', TexMathModeEnv('$', [TexCmd('hat'), ' n_j'], []), ' denote a unit\nvector in the ', TexMathModeEnv('$', ['j'], []), '-th direction, and \n', TexMathModeEnv('$', [TexCmd('Gamma')], []), ' denote the Gamma function. Then\n', TexNamedEnv('eqnarray', [TexCmd('label', [BraceGroup('sphere')]), '\n', TexCmd('int'), ' d', TexCmd('Omega'), '_d &=& ', TexCmd('frac', [BraceGroup('2', TexCmd('pi'), '^', BraceGroup('d/2')), BraceGroup(TexCmd('Gamma'), '(', TexCmd('frac', [BraceGroup('d'), BraceGroup('2')]), ')')]), ' = S_d, ', TexCmd('nonumber'), ' \n', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', ' ', BraceGroup(TexCmd('hat'), ' n'), '_i ', BraceGroup(TexCmd('hat'), ' n'), '_j &=& ', TexCmd('frac', [BraceGroup('S_d'), BraceGroup('d')]), ' ', TexCmd('delta'), '_', BraceGroup('ij'), ', ', TexCmd('nonumber'), ' \n', TexCmd('int'), ' d', TexCmd('Omega'), '_d ', '\\,', ' ', BraceGroup(TexCmd('hat'), ' n'), '_i ', BraceGroup(TexCmd('hat'), ' n'), '_j ', BraceGroup(TexCmd('hat'), ' n'), '_n ', BraceGroup(TexCmd('hat'), ' n'), '_m &=&\n', TexCmd('frac', [BraceGroup('S_d'), BraceGroup('d(d + 2)')]), ' ', TexCmd('big('), TexCmd('delta'), '_', BraceGroup('ij'), ' ', TexCmd('delta'), '_', BraceGroup('mn'), ' + \n', TexCmd('delta'), '_', BraceGroup('im'), ' ', TexCmd('delta'), '_', BraceGroup('jn'), ' + ', TexCmd('delta'), '_', BraceGroup('in'), ' ', TexCmd('delta'), '_', BraceGroup('jm'), ' ', TexCmd('big).'), '\n'], []), ' \nThe angular average of the product of an \nodd number of unit vectors over the unit sphere vanishes\nidentically. \n\n', TexNamedEnv('references', ['\n'], []), '\n', '\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nAmit, D.J. 1978 \n', BraceGroup(TexCmd('it'), ' Field Theory, the Renormalization Group, and\nCritical Phenomena'), '. McGraw-Hill.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nBarab', "\\'", 'asi A.-L., and Stanley, H.E. 1995 \n', BraceGroup(TexCmd('it'), ' Fractal Concepts in\nSurface Growth'), '. \nCambridge.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nBiskamp, D. 1993\n', BraceGroup(TexCmd('it'), ' Nonlinear Magnetohydrodynamics'), '.\nCambridge.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nBrandenburg, A., Enqvist, K. and Olesen, P. 1996 \nLarge-scale\nmagnetic fields from hydromagnetic turbulence in the very early universe.\nPhys. Rev. D', BraceGroup(TexCmd('bf'), ' 54'), ', 1291-1300.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nBurlaga, L.F. 1991 Intermittent\nturbulence in the solar-wind.  J. Geophys. Res. ', BraceGroup(TexCmd('bf'), ' 96'), ' ', '(A4),\n5847-5851.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nCamargo, S.J.  and Tasso, H. 1992 \nRenormalization\ngroup in magnetohydrodynamic turbulence. \nPhys. Fluids B', BraceGroup(TexCmd('bf'), ' 4'), ' ', '(5), 1199-1212.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nCardy, J. 1996 \n', BraceGroup(TexCmd('it'), ' Scaling and Renormalization in \nStatistical Physics'), '.\nCambridge.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nDannevik, W.P., Yakhot, V.  and\nOrszag, S.A. 1987\nAnalytical theories of turbulence and the ', TexMathModeEnv('$', [TexCmd('epsilon')], []), '\nexpansion. \nPhys. Fluids ', BraceGroup(TexCmd('bf'), ' 30'), ' ', '(7), 2021-2029.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nDe Dominicis, C.  and  Peliti, L. 1978\nField-theory renormalization and critical dynamics above \n', TexMathModeEnv('$', ['T_c'], []), ': helium, antiferromagnets and liquid-gas systems.\nPhys. Rev. ', BraceGroup(TexCmd('bf'), ' B18'), ', 353-376.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nDeDominicis, C. and Martin, P.C. 1979 \nEnergy spectra of certain randomly-stirred fluids.\nPhys. Rev. A\n', BraceGroup(TexCmd('bf'), ' 19'), ', 419-422.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nDeYoung, D.S. 1980\nTurbulent Generation of Magnetic Fields in\nExtended Extragalactic Radio Sources. \nAp. J. ', BraceGroup(TexCmd('bf'), ' 241'), ', 81-97.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nDeYoung, D.S. 1992\nGalaxy-Driven Turbulence and the Growth of Intracluster Magnetic\nFields. \nAp. J. ', BraceGroup(TexCmd('bf'), ' 386'), ', 464-472.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nElsasser, W.M. 1950 \nThe hydromagnetic equations.\nPhys. Rev. ', BraceGroup(TexCmd('bf'), ' 79'), ', 183.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nEnqvist, K. 1998\nPrimordial Magnetic Fields.\nInt. J. Mod. Phys. D', BraceGroup(TexCmd('bf'), ' 7'), ', 331-350.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nEyink, G.L. 1994\nThe renormalization group method in\nstatistical hydrodynamics. \nPhys. Fluids ', BraceGroup(TexCmd('bf'), ' 6'), ' ', '(9), 3063-3078.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nForster, D.,  Nelson, D.R.  and Stephen, M.J. 1977\nLarge-distance and long-time properties of a randomly stirred fluid.\nPhys. Rev. ', BraceGroup(TexCmd('bf'), ' A16'), ', 732-749.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nFournier, J.-D., Sulem, P.-L.\nand\nPouquet, A. 1982\nInfrared properties of forced magnetohydrodynamic\nturbulence. \nJ. Phys. A: Math. Gen. ', BraceGroup(TexCmd('bf'), ' 15'), ', 1393-1420.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nFrey, E. and Tauber, U.C. 1994\nTwo-loop renormalization-group analysis of the Burgers-\nKardar-Parisi-Zhang equation.\nPhys. Rev. E', BraceGroup(TexCmd('bf'), ' 50'), ', 1024-1044.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nFrisch, U., Pouquet, A., Leorat, J. and Mazure, A. 1975\nPossibility of an inverse cascade of magnetic helicity\nin magnetohydrodynamic turbulence.\nJ. Fluid Mech. ', BraceGroup(TexCmd('bf'), ' 68'), ', 769-778.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nFrisch, U.  and Sulem, P.L. 1984\nNumerical simulation of the inverse cascade in\ntwo-dimensional turbulence. \nPhys. Fluids ', BraceGroup(TexCmd('bf'), ' 27'), ', \n1921-1923.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nFrisch, U. 1995 \n', BraceGroup(TexCmd('em'), ' Turbulence'), '. \nCambridge.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nGross, D.J. 1981 \nin ', BraceGroup(TexCmd('it'), ' Methods in Field Theory'), ', Les Houches \nSummer School 1975 Session XXVIII, edited by\nR. Balian and J. Zinn-Justin. \nNorth-Holland/World Scientific\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nHochberg, D., P', "\\'", 'erez-Mercader, J., Molina-Par', "\\'", TexCmd('i'), ' s,\nC. and Visser, M. 1999a\nRenormalization group improving the effective action: a\nreview. \nInt. J. Mod. Phys. A', BraceGroup(TexCmd('bf'), ' 14'), ', 1485-1521.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nHochberg, D., Molina-Par', "\\'", TexCmd('i'), ' s, C., P', "\\'", 'erez-Mercader,\nJ. and Visser, M. 1999b\nEffective action for stochastic partial differential equations.\nPhys. Rev. ', BraceGroup(TexCmd('bf'), ' E'), '60, 6343-6360.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nKraichnan, R.H. 1967 \nInertial ranges in two-dimensional turbulence.\nPhys. Fluids ', BraceGroup(TexCmd('bf'), ' 10'), ', 1417-1423.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nKraichnan, R.H. 1973 \nHelical turbulence\nand absolute equilibrium. \nJ. Fluid Mech. ', BraceGroup(TexCmd('bf'), ' 59'), ', 745-752.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nLilly, D. 1969 \nNumerical simulation of\ntwo-dimensional turbulence.\nPhys. Fluids Suppl. ', BraceGroup(TexCmd('bf'), ' 12'), ' II, 240-249.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nLongcope, D.W. and Sudan, R.N. 1991 \nRenormalization\ngroup analysis of reduced magnetohydrodynamics with application to subgrid\nmodeling. Phys. Fluids B', BraceGroup(TexCmd('bf'), ' 3'), ' ', '(8), 1945-1962.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nMa, S.-K. 1976 \n', BraceGroup(TexCmd('it'), ' Modern Theory of Critical Phenomena'), '.\nAddison-Wesley\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nMartin, P.C., Siggia, E.D. and Rose, H.A. 1973\nStatistical dynamics of classical systems.\nPhys. Rev. ', BraceGroup(TexCmd('bf'), ' A8'), ', 423-437.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nMcComb, W.D. 1995 \n', BraceGroup(TexCmd('it'), ' The Physics of Fluid Turbulence'), '.\nOxford.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nMedina, E., Hwa, T., Kardar, M. and Zhang, Y-C. 1989\nBurgers equation with correlated noise: Renormalization-group\nanalysis and applications to directed polymers and interface growth.\nPhys. Rev. ', BraceGroup(TexCmd('bf'), ' A39'), ', 3053-3075.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nPapaloizou, J.C.B  and Lin, D.N.C. 1995\nTheory of accretion disks I: angular momentum\ntransport processes. \nAnnu. Rev. Astron. Astrophys. ', BraceGroup(TexCmd('bf'), ' 33'), ', 505-540. \n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nPouquet, A., Frisch, U.  and Leorat J. 1976\nStrong MHD helical turbulence and the nonlinear\ndynamo effect.\nJ. Fluid Mech. ', BraceGroup(TexCmd('bf'), ' 77'), ', 321-354.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nPouquet, A. 1978\nOn two-dimensional magnetohydrodynamic turbulence.\nJ. Fluid Mech. ', BraceGroup(TexCmd('bf'), ' 88'), ', 1-16.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nPouquet, A. and Patterson, G.S. 1978 \nNumerical simulation of helical magnetohydrodynamic\nturbulence.\nJ. Fluid Mech. ', BraceGroup(TexCmd('bf'), ' 85'), ',\n305-323.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nRamond, P. 1981 ', BraceGroup(TexCmd('it'), ' Field Theory: A Modern Primer'), ' Benjamin-Cummings,\nReading, Massachusetts. \n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nRivers, R.J. 1987 \n', BraceGroup(TexCmd('it'), ' Path integral methods \nin quantum field theory'), '.\nCambridge.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nSommeria, J. 1986 \nExperimental study of the two-dimensional inverse\nenergy cascade in a square box.\nJ. Fluid Mech. ', BraceGroup(TexCmd('bf'), ' 170'), ', 139-168.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nVan Ballegooijen, A.A. 1985\nElectric\ncurrents in the solar corona and the existence of magnetostatic\nequilibrium. \nAp. J. \n', BraceGroup(TexCmd('bf'), ' 298'), ', 421-430.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nVan Ballegooijen, A.A. 1986 \nCascade of magnetic energy as a mechanism of coronal heating.\nAp. J. ', BraceGroup(TexCmd('bf'), ' 311'), ', 1001-1014.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nWilson K.G. and Kogut, J. 1974\nThe renormalization group and the ', TexMathModeEnv('$', [TexCmd('epsilon')], []), ' \nexpansion.\nPhysics Reports 12', BraceGroup(TexCmd('bf'), ' C'), ', 75-200.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nYakhot, V.  and Orszag, S.A. 1986\nRenormalization-group analysis of turbulence.\nPhys. Rev. Lett. ', BraceGroup(TexCmd('bf'), ' 57'), ', 1722-1724.\n\n', TexCmd('medskip'), '\n', TexCmd('noindent'), '\nZinn--Justin, J. 1996\n', BraceGroup(TexCmd('it'), ' Quantum field theory and critical phenomena'), '.\nOxford.\n\n\n\n', TexCmd('newpage'), '\n', '\n', TexNamedEnv('figure', ['\n', TexNamedEnv('center', ['\n ', TexCmd('epsfig', [BraceGroup('file=mhdrule.ps, width=7in,bbllx=65pt,bblly=400pt,         bburx=530pt, bbury=790pt')]), '\n'], []), '\n', TexNamedEnv('center', ['\nFIG 1: Diagrammatic (Feynman-type) rules for the perturbation theory\nexpansion of MHD.\n'], []), '\n'], []), '\n', '\n', TexNamedEnv('figure', ['\n', TexCmd('epsfysize'), '=31cm\n', BraceGroup(TexCmd('centerline', [BraceGroup(TexCmd('epsfbox', [BraceGroup('fig2mhd.ps')]))])), '\n', '\n', TexCmd('vspace', [BraceGroup('1cm')]), '\n', '\n'], [BracketGroup('b')]), '\n', '\n', TexCmd('end', [BraceGroup('document')]), '\n', '\n']


5016 ***Failed to finish DuenneGitter.tex: 'utf-8' codec can't decode byte 0xfc in position 89: invalid start byte


5017 **SUCCESS localmacro.tex

5018 **SUCCESS eksi_yavuz.tex

5019 **SUCCESS Barkhouse.tex

5020 ***Failed to finish 2fermion.tex: Command \item invalid in math mode.


5021 ***Failed to finish punishment.tex: 'utf-8' codec can't decode byte 0xb2 in position 23325: invalid start byte


5022 **SUCCESS PLB-Bose16O.tex

5023 **SUCCESS twisted-fork-m-1-sli.tex

5024 **SUCCESS HotQuarksProceedings.tex

5025 **SUCCESS kleiner.tex

5026 ***Failed to finish tophaus130616.tex: Command \item invalid in math mode.


5027 **SUCCESS prl.tex

5028 ***Failed to finish NonBaxterRevised.tex: [Line: 0, Offset: 9692] "displaymath" env expecting \]. Reached end of file.


5029 ***Failed to finish 3294.tex: [Line: 0, Offset: 2865] "$" env expecting $. Reached end of file.


5030 **SUCCESS ismd99.tex

5031 ***Failed to finish BoutsiaEscFraction.tex: 


5032 **SUCCESS tab_m200.tex

5033 **SUCCESS Feng_Eric.tex

5034 ***Failed to finish 1d-crystal-int100427.tex: 'utf-8' codec can't decode byte 0xed in position 2777: invalid continuation byte


5035 **SUCCESS write3c273linelist_zsort_20091006_lya_mnfmt.tex

5036 ***Failed to finish PhysarumMaze.tex: 'utf-8' codec can't decode byte 0xd0 in position 21739: invalid continuation byte


5037 ***Failed to finish classest2.tex: 'utf-8' codec can't decode byte 0xec in position 37: invalid continuation byte


5038 **SUCCESS cadres.tex

5039 **SUCCESS excitations.tex

5040 **SUCCESS lat00rd.tex

5041 ***Failed to finish recpower.tex: [Line: 0, Offset: 3213] "eqnarray" env expecting \end{eqnarray}. Reached end of file.


5042 **SUCCESS kropla_v1c.tex

5043 **SUCCESS FIGPLBN2.tex

5044 ***Failed to finish Proceeding4.tex: 'utf-8' codec can't decode byte 0xc0 in position 1048: invalid start byte


5045 ***Failed to finish lhcws.tex: [Line: 0, Offset: 6016] "list" env expecting \end{list}. Reached end of file.


5046 **SUCCESS starcrossing3.tex

5047 ***Failed to finish lu_4593_ms.tex: [Line: 0, Offset: 2218] "equation" env expecting \end{equation}. Reached end of file.


5048 **SUCCESS u22sect4a.tex

5049 ***Failed to finish J_Mackey.tex: [Line: 0, Offset: 1859] "quotation" env expecting \end{quotation}. Instead got \end{document}



5050 ***Failed to finish Abelian-Final.tex: [Line: 0, Offset: 1994] "document" env expecting \end{document}. Instead got \end{equation}
where 


5051 ***Failed to finish SFLecc_v9.tex: 


5052 ***Failed to finish kkGarticle.tex: 'utf-8' codec can't decode byte 0x9f in position 149354: invalid start byte


5053 **SUCCESS wide_mdwarfs.tex

5054 **SUCCESS lasing_in_4LS_h.tex

5055 **SUCCESS lt22meso.tex

5056 **SUCCESS linearization_through_SOS.tex

5057 **SUCCESS Benbow_Blazar.tex

5058 ***Failed to finish shkl-jpg.tex: 


5059 **SUCCESS table_lshs_sakurai.tex

5060 ***Failed to finish jpsi.tex: [Line: 0, Offset: 1769] "document" env expecting \end{document}. Instead got \end{eqnarray}
The symbols 


5061 ***Failed to finish ichep_pre.tex: [Line: 0, Offset: 4290] "$$" env expecting $$. Reached end of file.


5062 ***Failed to finish I3322.tex: Command \item invalid in math mode.


5063 **SUCCESS cosmography_br24.tex

5064 **SUCCESS Homulgas.tex

5065 **SUCCESS AbelianInclusion.tex
